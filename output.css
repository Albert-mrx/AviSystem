/*! tailwindcss v4.1.4 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-orange-400: oklch(75% 0.183 55.934);
    --color-orange-500: oklch(70.5% 0.213 47.604);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-700: oklch(52.7% 0.154 150.069);
    --color-emerald-600: oklch(59.6% 0.145 163.225);
    --color-teal-400: oklch(77.7% 0.152 181.912);
    --color-cyan-400: oklch(78.9% 0.154 211.53);
    --color-cyan-600: oklch(60.9% 0.126 221.723);
    --color-cyan-700: oklch(52% 0.105 223.128);
    --color-sky-100: oklch(95.1% 0.026 236.824);
    --color-sky-200: oklch(90.1% 0.058 230.902);
    --color-sky-300: oklch(82.8% 0.111 230.318);
    --color-sky-500: oklch(68.5% 0.169 237.323);
    --color-sky-600: oklch(58.8% 0.158 241.966);
    --color-sky-700: oklch(50% 0.134 242.749);
    --color-sky-800: oklch(44.3% 0.11 240.79);
    --color-sky-900: oklch(39.1% 0.09 240.876);
    --color-sky-950: oklch(29.3% 0.066 243.157);
    --color-blue-300: oklch(80.9% 0.105 251.813);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-700: oklch(48.8% 0.243 264.376);
    --color-blue-800: oklch(42.4% 0.199 265.638);
    --color-slate-50: oklch(98.4% 0.003 247.858);
    --color-slate-100: oklch(96.8% 0.007 247.896);
    --color-slate-300: oklch(86.9% 0.022 252.894);
    --color-slate-800: oklch(27.9% 0.041 260.031);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-xl: 36rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-2xl: 1rem;
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .modal {
    pointer-events: none;
    position: fixed;
    inset: calc(0.25rem * 0);
    z-index: 80;
    margin: calc(0.25rem * 0);
    display: grid;
    width: 100%;
    height: 100%;
    justify-items: center;
    padding: calc(0.25rem * 4);
    opacity: 0%;
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    transition-duration: 500ms;
    --tw-duration: 500ms;
  }
  .modal {
    pointer-events: none;
    position: fixed;
    inset: calc(0.25rem * 0);
    z-index: 80;
    margin: calc(0.25rem * 0);
    display: grid;
    width: 100%;
    height: 100%;
    justify-items: center;
    padding: calc(0.25rem * 4);
    opacity: 0%;
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    transition-duration: 500ms;
    --tw-duration: 500ms;
  }
  .carousel-prev {
    position: absolute;
    inset-block: calc(0.25rem * 0);
    display: inline-flex;
    height: 100%;
    width: 10%;
    align-items: center;
    justify-content: center;
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-base-content);
      }
    }
    @media (width < 40rem) {
      width: 18%;
    }
    &.disabled {
      pointer-events: none;
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 30%, transparent);
      }
    }
    inset-inline-start: calc(0.25rem * 0);
    border-start-start-radius: var(--radius-2xl);
    border-end-start-radius: var(--radius-2xl);
  }
  .carousel-prev {
    position: absolute;
    inset-block: calc(0.25rem * 0);
    display: inline-flex;
    height: 100%;
    width: 10%;
    align-items: center;
    justify-content: center;
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-base-content);
      }
    }
    @media (width < 40rem) {
      width: 18%;
    }
    &.disabled {
      pointer-events: none;
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 30%, transparent);
      }
    }
    inset-inline-start: calc(0.25rem * 0);
    border-start-start-radius: var(--radius-2xl);
    border-end-start-radius: var(--radius-2xl);
  }
  .carousel-next {
    position: absolute;
    inset-block: calc(0.25rem * 0);
    display: inline-flex;
    height: 100%;
    width: 10%;
    align-items: center;
    justify-content: center;
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-base-content);
      }
    }
    @media (width < 40rem) {
      width: 18%;
    }
    &.disabled {
      pointer-events: none;
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 30%, transparent);
      }
    }
    inset-inline-end: calc(0.25rem * 0);
    border-start-end-radius: var(--radius-2xl);
    border-end-end-radius: var(--radius-2xl);
  }
  .carousel-next {
    position: absolute;
    inset-block: calc(0.25rem * 0);
    display: inline-flex;
    height: 100%;
    width: 10%;
    align-items: center;
    justify-content: center;
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-base-content);
      }
    }
    @media (width < 40rem) {
      width: 18%;
    }
    &.disabled {
      pointer-events: none;
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 30%, transparent);
      }
    }
    inset-inline-end: calc(0.25rem * 0);
    border-start-end-radius: var(--radius-2xl);
    border-end-end-radius: var(--radius-2xl);
  }
  .menu {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    gap: calc(0.25rem * 0.5);
    border-radius: var(--radius-box);
    background-color: var(--color-base-100);
    padding: calc(0.25rem * 2);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --menu-active-fg: var(--color-primary);
    --menu-active-bg: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      --menu-active-bg: color-mix(in oklab, var(--color-primary) 10%, #0000);
    }
    :where(li ul) {
      position: relative;
      white-space: nowrap;
    }
    :where(li:not(.dropdown) ul) {
      margin-inline-start: calc(0.25rem * 4);
      padding-inline-start: calc(0.25rem * 2);
      &:before {
        position: absolute;
        inset-inline-start: calc(0.25rem * 0);
        top: calc(0.25rem * 3);
        bottom: calc(0.25rem * 2.5);
        background-color: var(--color-base-content);
        opacity: 10%;
        width: var(--border);
        content: "";
      }
    }
    :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
      display: none;
    }
    :where(.menu li:empty) {
      background-color: var(--color-base-content);
      opacity: 10%;
      margin: 0.5rem 1rem;
      height: 1px;
    }
    :where(li:not(.menu-title, .tooltip) > *:not(ul, .collapse, .menu-title, .btn)) {
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 4);
      padding-block: calc(0.25rem * 2.5);
      text-align: start;
      transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-timing-function: var(--ease-out);
      transition-duration: var(--tw-duration, var(--default-transition-duration));
      transition-duration: 200ms;
      --tw-duration: 200ms;
      --tw-ease: var(--ease-out);
      text-wrap: balance;
    }
    :where(li:not(.menu-title) > *:not(ul, .collapse, .menu-title, .btn)) {
      display: grid;
      grid-auto-flow: column;
      align-content: flex-start;
      align-items: center;
      gap: calc(0.25rem * 2);
      grid-auto-columns: minmax(auto, max-content) auto max-content;
      user-select: none;
    }
    li.tooltip > * {
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 4);
      padding-block: calc(0.25rem * 2.5);
      text-align: start;
    }
    :where(.menu li:not(.menu-title, .menu-disabled)) {
      color: var(--color-base-content);
    }
    :where(.menu li:not(.menu-title, .menu-disabled) > *:not(ul, .collapse, .menu-title)) {
      &:not(.btn).menu-focus, &:not(.btn):focus-visible {
        cursor: pointer;
        background-color: var(--color-neutral);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
        }
        color: var(--color-base-content);
        --tw-outline-style: none;
        outline-style: none;
      }
      &:hover {
        cursor: pointer;
        background-color: var(--color-neutral);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
        }
        color: var(--color-base-content);
        --tw-outline-style: none;
        outline-style: none;
      }
    }
    li:not(.menu-title, .menu-disabled) > :not(ul, .menu-title, .collapse, .btn):active, li:not(.menu-title, .menu-disabled) > :not(ul, .menu-title, .collapse, .btn).menu-active {
      color: var(--menu-active-fg);
      background-color: var(--menu-active-bg);
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--fx-noise);
    }
    li.menu-disabled {
      pointer-events: none;
      opacity: 50%;
      webkit-user-select: none;
      user-select: none;
    }
    :where(& li) {
      position: relative;
      display: flex;
      flex-shrink: 0;
      flex-direction: column;
      flex-wrap: wrap;
      align-items: stretch;
      .badge {
        justify-self: flex-end;
      }
    }
  }
  .menu {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    gap: calc(0.25rem * 0.5);
    border-radius: var(--radius-box);
    background-color: var(--color-base-100);
    padding: calc(0.25rem * 2);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --menu-active-fg: var(--color-primary);
    --menu-active-bg: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      --menu-active-bg: color-mix(in oklab, var(--color-primary) 10%, #0000);
    }
    :where(li ul) {
      position: relative;
      white-space: nowrap;
    }
    :where(li:not(.dropdown) ul) {
      margin-inline-start: calc(0.25rem * 4);
      padding-inline-start: calc(0.25rem * 2);
      &:before {
        position: absolute;
        inset-inline-start: calc(0.25rem * 0);
        top: calc(0.25rem * 3);
        bottom: calc(0.25rem * 2.5);
        background-color: var(--color-base-content);
        opacity: 10%;
        width: var(--border);
        content: "";
      }
    }
    :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
      display: none;
    }
    :where(.menu li:empty) {
      background-color: var(--color-base-content);
      opacity: 10%;
      margin: 0.5rem 1rem;
      height: 1px;
    }
    :where(li:not(.menu-title, .tooltip) > *:not(ul, .collapse, .menu-title, .btn)) {
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 4);
      padding-block: calc(0.25rem * 2.5);
      text-align: start;
      transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-timing-function: var(--ease-out);
      transition-duration: var(--tw-duration, var(--default-transition-duration));
      transition-duration: 200ms;
      --tw-duration: 200ms;
      --tw-ease: var(--ease-out);
      text-wrap: balance;
    }
    :where(li:not(.menu-title) > *:not(ul, .collapse, .menu-title, .btn)) {
      display: grid;
      grid-auto-flow: column;
      align-content: flex-start;
      align-items: center;
      gap: calc(0.25rem * 2);
      grid-auto-columns: minmax(auto, max-content) auto max-content;
      user-select: none;
    }
    li.tooltip > * {
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 4);
      padding-block: calc(0.25rem * 2.5);
      text-align: start;
    }
    :where(.menu li:not(.menu-title, .menu-disabled)) {
      color: var(--color-base-content);
    }
    :where(.menu li:not(.menu-title, .menu-disabled) > *:not(ul, .collapse, .menu-title)) {
      &:not(.btn).menu-focus, &:not(.btn):focus-visible {
        cursor: pointer;
        background-color: var(--color-neutral);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
        }
        color: var(--color-base-content);
        --tw-outline-style: none;
        outline-style: none;
      }
      &:hover {
        cursor: pointer;
        background-color: var(--color-neutral);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
        }
        color: var(--color-base-content);
        --tw-outline-style: none;
        outline-style: none;
      }
    }
    li:not(.menu-title, .menu-disabled) > :not(ul, .menu-title, .collapse, .btn):active, li:not(.menu-title, .menu-disabled) > :not(ul, .menu-title, .collapse, .btn).menu-active {
      color: var(--menu-active-fg);
      background-color: var(--menu-active-bg);
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--fx-noise);
    }
    li.menu-disabled {
      pointer-events: none;
      opacity: 50%;
      webkit-user-select: none;
      user-select: none;
    }
    :where(& li) {
      position: relative;
      display: flex;
      flex-shrink: 0;
      flex-direction: column;
      flex-wrap: wrap;
      align-items: stretch;
      .badge {
        justify-self: flex-end;
      }
    }
  }
  .input-floating-label {
    pointer-events: none;
    position: absolute;
    inset-inline-start: calc(0.25rem * 0);
    margin-inline-start: calc(0.25rem * 3);
    width: fit-content;
    overflow: hidden;
    background-color: transparent;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    text-overflow: ellipsis;
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
    }
    top: calc(var(--size-field, 0.25rem) * 9.5 / 2);
    translate: 0 -50%;
    transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
  }
  .input-floating-label {
    pointer-events: none;
    position: absolute;
    inset-inline-start: calc(0.25rem * 0);
    margin-inline-start: calc(0.25rem * 3);
    width: fit-content;
    overflow: hidden;
    background-color: transparent;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    text-overflow: ellipsis;
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
    }
    top: calc(var(--size-field, 0.25rem) * 9.5 / 2);
    translate: 0 -50%;
    transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
  }
  .textarea-floating-label {
    pointer-events: none;
    position: absolute;
    inset-inline-start: calc(0.25rem * 0);
    inset-inline-start: 1px;
    margin-inline-start: calc(0.25rem * 4);
    width: fit-content;
    overflow: hidden;
    background-color: transparent;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    text-overflow: ellipsis;
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
    }
    top: 9px;
    transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
  }
  .textarea-floating-label {
    pointer-events: none;
    position: absolute;
    inset-inline-start: calc(0.25rem * 0);
    inset-inline-start: 1px;
    margin-inline-start: calc(0.25rem * 4);
    width: fit-content;
    overflow: hidden;
    background-color: transparent;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    text-overflow: ellipsis;
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
    }
    top: 9px;
    transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
  }
  .input-floating {
    .input:has(> &) input {
      &::placeholder {
        color: transparent;
      }
      &:focus {
        &::placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
      }
    }
    position: relative;
    display: block;
    width: 100%;
    .input {
      &::placeholder {
        color: transparent;
      }
      &:focus {
        &::placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
      }
      &:has(> input[disabled]), &:is(:disabled, [disabled]) {
        border-style: var(--tw-border-style);
        border-width: 1px;
        background-color: transparent;
        opacity: 50%;
        & ~ .input-floating-label {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 30%, transparent);
          }
        }
      }
    }
    &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
      .input-floating-label {
        pointer-events: auto;
        top: calc(0.25rem * 0);
        background-color: var(--color-base-100);
        padding-inline: calc(0.25rem * 1);
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
        translate: -12.5% calc(-50% - 0.125em);
        scale: 0.75;
      }
    }
    &:focus-within, &:has(.input:focus) {
      .input-floating-label {
        --input-color: var(--color-primary);
        color: var(--input-color);
      }
    }
    &:has(.input-xs) .input-floating-label {
      margin-inline-start: calc(0.25rem * 2.5);
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
      top: calc(var(--size-field, 0.25rem) * 6 / 2);
    }
    &:has(.input-sm) .input-floating-label {
      margin-inline-start: calc(0.25rem * 2.5);
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
      top: calc(var(--size-field, 0.25rem) * 7.5 / 2);
    }
    &:has(.input-md) .input-floating-label {
      margin-inline-start: calc(0.25rem * 3);
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
      top: calc(var(--size-field, 0.25rem) * 9.5 / 2);
    }
    &:has(.input-lg) .input-floating-label {
      margin-inline-start: calc(0.25rem * 4);
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
      top: calc(var(--size-field, 0.25rem) * 11.5 / 2);
    }
    &:has(.input-xl) .input-floating-label {
      margin-inline-start: calc(0.25rem * 4.5);
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
      top: calc(var(--size-field, 0.25rem) * 14 / 2);
    }
  }
  .input-floating {
    .input:has(> &) input {
      &::placeholder {
        color: transparent;
      }
      &:focus {
        &::placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
      }
    }
    position: relative;
    display: block;
    width: 100%;
    .input {
      &::placeholder {
        color: transparent;
      }
      &:focus {
        &::placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
      }
      &:has(> input[disabled]), &:is(:disabled, [disabled]) {
        border-style: var(--tw-border-style);
        border-width: 1px;
        background-color: transparent;
        opacity: 50%;
        & ~ .input-floating-label {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 30%, transparent);
          }
        }
      }
    }
    &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
      .input-floating-label {
        pointer-events: auto;
        top: calc(0.25rem * 0);
        background-color: var(--color-base-100);
        padding-inline: calc(0.25rem * 1);
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
        translate: -12.5% calc(-50% - 0.125em);
        scale: 0.75;
      }
    }
    &:focus-within, &:has(.input:focus) {
      .input-floating-label {
        --input-color: var(--color-primary);
        color: var(--input-color);
      }
    }
    &:has(.input-xs) .input-floating-label {
      margin-inline-start: calc(0.25rem * 2.5);
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
      top: calc(var(--size-field, 0.25rem) * 6 / 2);
    }
    &:has(.input-sm) .input-floating-label {
      margin-inline-start: calc(0.25rem * 2.5);
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
      top: calc(var(--size-field, 0.25rem) * 7.5 / 2);
    }
    &:has(.input-md) .input-floating-label {
      margin-inline-start: calc(0.25rem * 3);
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
      top: calc(var(--size-field, 0.25rem) * 9.5 / 2);
    }
    &:has(.input-lg) .input-floating-label {
      margin-inline-start: calc(0.25rem * 4);
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
      top: calc(var(--size-field, 0.25rem) * 11.5 / 2);
    }
    &:has(.input-xl) .input-floating-label {
      margin-inline-start: calc(0.25rem * 4.5);
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
      top: calc(var(--size-field, 0.25rem) * 14 / 2);
    }
  }
  .range {
    appearance: none;
    webkit-appearance: none;
    --range-color: var(--color-base-content);
    --range-thumb-border-width: 3px;
    --range-track-height: 8px;
    --range-thumb-size: 16px;
    position: relative;
    width: 100%;
    border-radius: calc(infinity * 1px);
    background-color: transparent;
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    height: var(--range-track-height);
    &::-webkit-slider-runnable-track {
      width: 100%;
      border-radius: calc(infinity * 1px);
      background-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
      }
      height: var(--range-track-height);
    }
    &::-moz-range-track {
      width: 100%;
      border-radius: calc(infinity * 1px);
      background-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
      }
      height: var(--range-track-height);
    }
    &::-webkit-slider-thumb {
      position: relative;
      top: calc(1/2 * 100%);
      --tw-translate-y: calc(calc(1/2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
      border-radius: calc(infinity * 1px);
      background-color: var(--color-base-100);
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-shadow-color: var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
      }
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-timing-function: var(--ease-in-out);
      transition-duration: var(--tw-duration, var(--default-transition-duration));
      transition-duration: 150ms;
      --tw-duration: 150ms;
      --tw-ease: var(--ease-in-out);
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 125%;
          --tw-scale-y: 125%;
          --tw-scale-z: 125%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
        cursor: grab;
        box-shadow: 0 0 0 2px var(--range-color);
      }
      &:active {
        --tw-scale-x: 125%;
        --tw-scale-y: 125%;
        --tw-scale-z: 125%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
        cursor: grabbing;
        box-shadow: 0 0 0 3px var(--range-color);
      }
      appearance: none;
      box-sizing: border-box;
      webkit-appearance: none;
      color: var(--range-color);
      border-color: var(--range-color);
      border-style: solid;
      border-width: var(--range-thumb-border-width);
      height: var(--range-thumb-size);
      width: var(--range-thumb-size);
    }
    &::-moz-range-thumb {
      position: relative;
      border-radius: calc(infinity * 1px);
      background-color: var(--color-base-100);
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-timing-function: var(--ease-in-out);
      transition-duration: var(--tw-duration, var(--default-transition-duration));
      transition-duration: 150ms;
      --tw-duration: 150ms;
      --tw-ease: var(--ease-in-out);
      top: 50%;
      color: var(--range-color);
      box-sizing: border-box;
      border-color: var(--range-color);
      border-style: solid;
      border-width: var(--range-thumb-border-width);
      height: var(--range-thumb-size);
      width: var(--range-thumb-size);
      &:hover {
        cursor: grab;
        box-shadow: 0 0 0 2px var(--range-color);
      }
      &:active {
        cursor: grabbing;
        box-shadow: 0 0 0 3px var(--range-color);
      }
    }
    &:focus {
      outline: none;
    }
    &.disabled {
      pointer-events: none;
      opacity: 30%;
    }
    &:disabled {
      pointer-events: none;
      opacity: 30%;
    }
    &[disabled] {
      pointer-events: none;
      opacity: 30%;
    }
    [dir="rtl"] &::-webkit-slider-thumb {
      transform: scaleX(-1);
    }
    [dir="rtl"] &::-moz-range-thumb {
      transform: scaleX(-1);
    }
    [dir="rtl"] &::-webkit-slider-runnable-track {
      direction: rtl;
    }
    [dir="rtl"] &::-moz-range-track {
      direction: rtl;
    }
  }
  .range {
    appearance: none;
    webkit-appearance: none;
    --range-color: var(--color-base-content);
    --range-thumb-border-width: 3px;
    --range-track-height: 8px;
    --range-thumb-size: 16px;
    position: relative;
    width: 100%;
    border-radius: calc(infinity * 1px);
    background-color: transparent;
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    height: var(--range-track-height);
    &::-webkit-slider-runnable-track {
      width: 100%;
      border-radius: calc(infinity * 1px);
      background-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
      }
      height: var(--range-track-height);
    }
    &::-moz-range-track {
      width: 100%;
      border-radius: calc(infinity * 1px);
      background-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
      }
      height: var(--range-track-height);
    }
    &::-webkit-slider-thumb {
      position: relative;
      top: calc(1/2 * 100%);
      --tw-translate-y: calc(calc(1/2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
      border-radius: calc(infinity * 1px);
      background-color: var(--color-base-100);
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-shadow-color: var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
      }
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-timing-function: var(--ease-in-out);
      transition-duration: var(--tw-duration, var(--default-transition-duration));
      transition-duration: 150ms;
      --tw-duration: 150ms;
      --tw-ease: var(--ease-in-out);
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 125%;
          --tw-scale-y: 125%;
          --tw-scale-z: 125%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
        cursor: grab;
        box-shadow: 0 0 0 2px var(--range-color);
      }
      &:active {
        --tw-scale-x: 125%;
        --tw-scale-y: 125%;
        --tw-scale-z: 125%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
        cursor: grabbing;
        box-shadow: 0 0 0 3px var(--range-color);
      }
      appearance: none;
      box-sizing: border-box;
      webkit-appearance: none;
      color: var(--range-color);
      border-color: var(--range-color);
      border-style: solid;
      border-width: var(--range-thumb-border-width);
      height: var(--range-thumb-size);
      width: var(--range-thumb-size);
    }
    &::-moz-range-thumb {
      position: relative;
      border-radius: calc(infinity * 1px);
      background-color: var(--color-base-100);
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-timing-function: var(--ease-in-out);
      transition-duration: var(--tw-duration, var(--default-transition-duration));
      transition-duration: 150ms;
      --tw-duration: 150ms;
      --tw-ease: var(--ease-in-out);
      top: 50%;
      color: var(--range-color);
      box-sizing: border-box;
      border-color: var(--range-color);
      border-style: solid;
      border-width: var(--range-thumb-border-width);
      height: var(--range-thumb-size);
      width: var(--range-thumb-size);
      &:hover {
        cursor: grab;
        box-shadow: 0 0 0 2px var(--range-color);
      }
      &:active {
        cursor: grabbing;
        box-shadow: 0 0 0 3px var(--range-color);
      }
    }
    &:focus {
      outline: none;
    }
    &.disabled {
      pointer-events: none;
      opacity: 30%;
    }
    &:disabled {
      pointer-events: none;
      opacity: 30%;
    }
    &[disabled] {
      pointer-events: none;
      opacity: 30%;
    }
    [dir="rtl"] &::-webkit-slider-thumb {
      transform: scaleX(-1);
    }
    [dir="rtl"] &::-moz-range-thumb {
      transform: scaleX(-1);
    }
    [dir="rtl"] &::-webkit-slider-runnable-track {
      direction: rtl;
    }
    [dir="rtl"] &::-moz-range-track {
      direction: rtl;
    }
  }
  .tab {
    .tabs-lifted > &:focus-visible {
      border-end-end-radius: 0;
      border-end-start-radius: 0;
    }
    position: relative;
    display: inline-flex;
    cursor: pointer;
    appearance: none;
    align-items: center;
    justify-content: center;
    text-align: center;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-base-content);
    webkit-user-select: none;
    user-select: none;
    height: var(--size);
    --size: calc(var(--size-field, 0.25rem) * 9.5);
    --tab-p: 1rem;
    --tab-bg: var(--color-base-100);
    --tab-border-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --tab-border-color: color-mix(in oklab, var(--color-base-content), #0000 90%);
    }
    padding-inline: var(--tab-p, 1rem);
    &:focus, &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
    &[disabled] {
      pointer-events: none;
      opacity: 40%;
    }
    @media (hover: hover) {
      &[disabled]:hover {
        pointer-events: none;
        opacity: 40%;
      }
    }
    .tabs-bordered > & {
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
      }
      @media (hover:hover) {
        &:hover {
          @media (hover: hover) {
            border-color: var(--color-primary);
            @supports (color: color-mix(in lab, red, red)) {
              border-color: color-mix(in oklab, var(--color-primary) 30%, transparent);
            }
          }
        }
      }
      @media (hover:hover) {
        &:hover {
          @media (hover: hover) {
            color: var(--color-primary);
          }
        }
      }
      border-style: solid;
      border-bottom-width: calc(var(--border, 1px) + 1px);
    }
    .tabs-lifted > & {
      @media (hover:hover) {
        &:hover {
          @media (hover: hover) {
            border-color: var(--color-primary);
            @supports (color: color-mix(in lab, red, red)) {
              border-color: color-mix(in oklab, var(--color-primary) 30%, transparent);
            }
          }
        }
      }
      @media (hover:hover) {
        &:hover {
          @media (hover: hover) {
            color: var(--color-primary);
          }
        }
      }
      border: var(--tab-border, 1px) solid transparent;
      border-width: 0 0 var(--tab-border, 1px) 0;
      border-radius: var(--radius-field, 0.375rem);
      border-bottom-color: var(--tab-border-color);
      padding-inline-start: var(--tab-p, 1rem);
      padding-inline-end: var(--tab-p, 1rem);
      padding-top: var(--tab-border, 1px);
    }
    .tabs-lifted > &.tab-active:not([disabled]) {
      background-color: var(--tab-bg);
      border-width: var(--tab-border, 1px) var(--tab-border, 1px) 0 var(--tab-border, 1px);
      border-color: var(--tab-border-color);
      border-end-start-radius: 0;
      border-end-end-radius: 0;
      padding-inline-start: calc(var(--tab-p, 1rem) - var(--tab-border, 1px));
      padding-inline-end: calc(var(--tab-p, 1rem) - var(--tab-border, 1px));
      padding-bottom: var(--tab-border, 1px);
      padding-top: 0;
    }
    .tabs-lifted > &.tab-active:not([disabled]):before {
      content: "";
      display: block;
      position: absolute;
      z-index: 1;
      width: calc(100% + var(--radius-field, 0.375rem) * 2);
      height: var(--radius-field, 0.375rem);
      bottom: 0;
      background-size: var(--radius-field, 0.375rem);
      background-repeat: no-repeat;
      background-position: top left, top right;
      --tab-grad: calc(69% - var(--tab-border, 1px));
      --radius-start: radial-gradient(
    circle at top left,
    transparent var(--tab-grad),
    var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
    var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
    var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px)
  );
      --radius-end: radial-gradient(
    circle at top right,
    transparent var(--tab-grad),
    var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
    var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
    var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px)
  );
      background-image: var(--radius-start), var(--radius-end);
    }
    .tabs-lifted > &.tab-active:not([disabled]):first-child:before {
      background-image: var(--radius-end);
      background-position: top right;
    }
    .tabs-lifted > &.tab-active:not([disabled]):last-child:before {
      background-image: var(--radius-start);
      background-position: top left;
    }
    [dir="rtl"] .tabs-lifted > &.tab-active:not([disabled]):first-child:before {
      background-image: var(--radius-start);
      background-position: top left;
    }
    [dir="rtl"] .tabs-lifted > &.tab-active:not([disabled]):last-child:before {
      background-image: var(--radius-end);
      background-position: top right;
    }
    .tabs-xl :where(&) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
      --size: calc(var(--size-field, 0.25rem) * 14);
      --tab-p: 1.5rem;
    }
    .tabs-lg :where(&) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
      --size: calc(var(--size-field, 0.25rem) * 11.5);
      --tab-p: 1.25rem;
    }
    .tabs-md :where(&) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
      --size: calc(var(--size-field, 0.25rem) * 9.5);
      --tab-p: 1rem;
    }
    .tabs-sm :where(&) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
      --size: calc(var(--size-field, 0.25rem) * 7.5);
      --tab-p: 0.75rem;
    }
    .tabs-xs :where(&) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
      --size: calc(var(--size-field, 0.25rem) * 6);
      --tab-p: 0.5rem;
    }
  }
  .tab {
    .tabs-lifted > &:focus-visible {
      border-end-end-radius: 0;
      border-end-start-radius: 0;
    }
    position: relative;
    display: inline-flex;
    cursor: pointer;
    appearance: none;
    align-items: center;
    justify-content: center;
    text-align: center;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-base-content);
    webkit-user-select: none;
    user-select: none;
    height: var(--size);
    --size: calc(var(--size-field, 0.25rem) * 9.5);
    --tab-p: 1rem;
    --tab-bg: var(--color-base-100);
    --tab-border-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --tab-border-color: color-mix(in oklab, var(--color-base-content), #0000 90%);
    }
    padding-inline: var(--tab-p, 1rem);
    &:focus, &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
    &[disabled] {
      pointer-events: none;
      opacity: 40%;
    }
    @media (hover: hover) {
      &[disabled]:hover {
        pointer-events: none;
        opacity: 40%;
      }
    }
    .tabs-bordered > & {
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
      }
      @media (hover:hover) {
        &:hover {
          @media (hover: hover) {
            border-color: var(--color-primary);
            @supports (color: color-mix(in lab, red, red)) {
              border-color: color-mix(in oklab, var(--color-primary) 30%, transparent);
            }
          }
        }
      }
      @media (hover:hover) {
        &:hover {
          @media (hover: hover) {
            color: var(--color-primary);
          }
        }
      }
      border-style: solid;
      border-bottom-width: calc(var(--border, 1px) + 1px);
    }
    .tabs-lifted > & {
      @media (hover:hover) {
        &:hover {
          @media (hover: hover) {
            border-color: var(--color-primary);
            @supports (color: color-mix(in lab, red, red)) {
              border-color: color-mix(in oklab, var(--color-primary) 30%, transparent);
            }
          }
        }
      }
      @media (hover:hover) {
        &:hover {
          @media (hover: hover) {
            color: var(--color-primary);
          }
        }
      }
      border: var(--tab-border, 1px) solid transparent;
      border-width: 0 0 var(--tab-border, 1px) 0;
      border-radius: var(--radius-field, 0.375rem);
      border-bottom-color: var(--tab-border-color);
      padding-inline-start: var(--tab-p, 1rem);
      padding-inline-end: var(--tab-p, 1rem);
      padding-top: var(--tab-border, 1px);
    }
    .tabs-lifted > &.tab-active:not([disabled]) {
      background-color: var(--tab-bg);
      border-width: var(--tab-border, 1px) var(--tab-border, 1px) 0 var(--tab-border, 1px);
      border-color: var(--tab-border-color);
      border-end-start-radius: 0;
      border-end-end-radius: 0;
      padding-inline-start: calc(var(--tab-p, 1rem) - var(--tab-border, 1px));
      padding-inline-end: calc(var(--tab-p, 1rem) - var(--tab-border, 1px));
      padding-bottom: var(--tab-border, 1px);
      padding-top: 0;
    }
    .tabs-lifted > &.tab-active:not([disabled]):before {
      content: "";
      display: block;
      position: absolute;
      z-index: 1;
      width: calc(100% + var(--radius-field, 0.375rem) * 2);
      height: var(--radius-field, 0.375rem);
      bottom: 0;
      background-size: var(--radius-field, 0.375rem);
      background-repeat: no-repeat;
      background-position: top left, top right;
      --tab-grad: calc(69% - var(--tab-border, 1px));
      --radius-start: radial-gradient(
    circle at top left,
    transparent var(--tab-grad),
    var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
    var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
    var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px)
  );
      --radius-end: radial-gradient(
    circle at top right,
    transparent var(--tab-grad),
    var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
    var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
    var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px)
  );
      background-image: var(--radius-start), var(--radius-end);
    }
    .tabs-lifted > &.tab-active:not([disabled]):first-child:before {
      background-image: var(--radius-end);
      background-position: top right;
    }
    .tabs-lifted > &.tab-active:not([disabled]):last-child:before {
      background-image: var(--radius-start);
      background-position: top left;
    }
    [dir="rtl"] .tabs-lifted > &.tab-active:not([disabled]):first-child:before {
      background-image: var(--radius-start);
      background-position: top left;
    }
    [dir="rtl"] .tabs-lifted > &.tab-active:not([disabled]):last-child:before {
      background-image: var(--radius-end);
      background-position: top right;
    }
    .tabs-xl :where(&) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
      --size: calc(var(--size-field, 0.25rem) * 14);
      --tab-p: 1.5rem;
    }
    .tabs-lg :where(&) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
      --size: calc(var(--size-field, 0.25rem) * 11.5);
      --tab-p: 1.25rem;
    }
    .tabs-md :where(&) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
      --size: calc(var(--size-field, 0.25rem) * 9.5);
      --tab-p: 1rem;
    }
    .tabs-sm :where(&) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
      --size: calc(var(--size-field, 0.25rem) * 7.5);
      --tab-p: 0.75rem;
    }
    .tabs-xs :where(&) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
      --size: calc(var(--size-field, 0.25rem) * 6);
      --tab-p: 0.5rem;
    }
  }
  .btn {
    display: inline-flex;
    flex-shrink: 0;
    cursor: pointer;
    flex-wrap: nowrap;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 2);
    text-align: center;
    vertical-align: middle;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    text-decoration-line: none;
    webkit-user-select: none;
    user-select: none;
    @media (prefers-reduced-motion: reduce) {
      transition-property: none;
    }
    padding-inline: var(--btn-p);
    color: var(--btn-fg);
    height: var(--size);
    outline-color: var(--btn-color, var(--color-neutral));
    @supports (color: color-mix(in lab, red, red)) {
      outline-color: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, var(--color-base-100));
    }
    transition-property: color, background-color, border-color, box-shadow;
    transition-timing-function: cubic-bezier(0, 0, 0.96, 1.03);
    transition-duration: 0.25s;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    background-color: var(--btn-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--btn-noise);
    border: var(--border) solid var(--btn-border);
    box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 8%)) inset, var(--btn-shadow);
    --size: calc(var(--size-field, 0.25rem) * 9.5);
    --btn-bg: var(--btn-color, var(--color-neutral));
    --btn-fg: var(--color-neutral-content);
    --btn-p: 1rem;
    --btn-border: var(--btn-bg);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
    }
    --btn-shadow: 0px 1px 3px 0px var(--color-base-300),
    0px 1px 2px -1px var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-shadow: 0px 1px 3px 0px color-mix(in oklab, var(--color-base-300) 40%, #0000),
    0px 1px 2px -1px color-mix(in oklab, var(--color-base-300) 40%, #0000);
    }
    --btn-noise: var(--fx-noise);
    @media (hover: hover) {
      &:hover {
        --btn-bg: var(--btn-color, var(--color-neutral));
        @supports (color: color-mix(in lab, red, red)) {
          --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 90%, #000);
        }
      }
    }
    &:active:hover:not(.btn-active), &:active:focus:not(.btn-active) {
      --tw-scale-x: 95%;
      --tw-scale-y: 95%;
      --tw-scale-z: 95%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
      transition-property: transform, translate, scale, rotate;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-timing-function: ease-out;
      transition-duration: var(--tw-duration, var(--default-transition-duration));
      transition-duration: 300ms;
      --tw-duration: 300ms;
    }
    &:focus-visible {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)), #000 10%);
      }
      outline-width: 2px;
      outline-style: solid;
    }
    &:is(:disabled, [disabled], .btn-disabled) {
      pointer-events: none;
      opacity: 50%;
      --tw-shadow: 0 0 #0000;
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:is(input[type="checkbox"], input[type="radio"]) {
      appearance: none;
      &::after {
        content: attr(aria-label);
      }
      &:checked {
        background: var(--color-primary);
        color: var(--color-primary-content);
        outline-color: var(--color-primary);
        --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
        isolation: isolate;
      }
    }
  }
  .btn {
    display: inline-flex;
    flex-shrink: 0;
    cursor: pointer;
    flex-wrap: nowrap;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 2);
    text-align: center;
    vertical-align: middle;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    text-decoration-line: none;
    webkit-user-select: none;
    user-select: none;
    @media (prefers-reduced-motion: reduce) {
      transition-property: none;
    }
    padding-inline: var(--btn-p);
    color: var(--btn-fg);
    height: var(--size);
    outline-color: var(--btn-color, var(--color-neutral));
    @supports (color: color-mix(in lab, red, red)) {
      outline-color: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, var(--color-base-100));
    }
    transition-property: color, background-color, border-color, box-shadow;
    transition-timing-function: cubic-bezier(0, 0, 0.96, 1.03);
    transition-duration: 0.25s;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    background-color: var(--btn-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--btn-noise);
    border: var(--border) solid var(--btn-border);
    box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 8%)) inset, var(--btn-shadow);
    --size: calc(var(--size-field, 0.25rem) * 9.5);
    --btn-bg: var(--btn-color, var(--color-neutral));
    --btn-fg: var(--color-neutral-content);
    --btn-p: 1rem;
    --btn-border: var(--btn-bg);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
    }
    --btn-shadow: 0px 1px 3px 0px var(--color-base-300),
    0px 1px 2px -1px var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-shadow: 0px 1px 3px 0px color-mix(in oklab, var(--color-base-300) 40%, #0000),
    0px 1px 2px -1px color-mix(in oklab, var(--color-base-300) 40%, #0000);
    }
    --btn-noise: var(--fx-noise);
    @media (hover: hover) {
      &:hover {
        --btn-bg: var(--btn-color, var(--color-neutral));
        @supports (color: color-mix(in lab, red, red)) {
          --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 90%, #000);
        }
      }
    }
    &:active:hover:not(.btn-active), &:active:focus:not(.btn-active) {
      --tw-scale-x: 95%;
      --tw-scale-y: 95%;
      --tw-scale-z: 95%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
      transition-property: transform, translate, scale, rotate;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-timing-function: ease-out;
      transition-duration: var(--tw-duration, var(--default-transition-duration));
      transition-duration: 300ms;
      --tw-duration: 300ms;
    }
    &:focus-visible {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)), #000 10%);
      }
      outline-width: 2px;
      outline-style: solid;
    }
    &:is(:disabled, [disabled], .btn-disabled) {
      pointer-events: none;
      opacity: 50%;
      --tw-shadow: 0 0 #0000;
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:is(input[type="checkbox"], input[type="radio"]) {
      appearance: none;
      &::after {
        content: attr(aria-label);
      }
      &:checked {
        background: var(--color-primary);
        color: var(--color-primary-content);
        outline-color: var(--color-primary);
        --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
        isolation: isolate;
      }
    }
  }
  .pin-input {
    border-radius: var(--radius-field);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
    }
    background-color: var(--color-base-100);
    text-align: center;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    &::placeholder {
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
      }
    }
    height: var(--size);
    width: var(--size);
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    --size: calc(var(--size-field, 0.25rem) * 9.5);
    &:hover:not(:focus, :focus-within) {
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
      }
    }
    &:focus, &:focus-within {
      border-color: var(--color-primary);
      --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-shadow-color: var(--color-primary);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--color-primary) 30%, #0000);
      }
      outline: 1px solid var(--color-primary);
      isolation: isolate;
    }
    &.pin-input-underline {
      border-radius: 0;
      border-style: var(--tw-border-style);
      border-width: 0px;
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 1px;
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
      }
      background-color: transparent;
      &:focus, &:focus-within {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 2px;
        border-color: var(--color-primary);
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        --tw-outline-style: none;
        outline-style: none;
      }
    }
    &.disabled, &:disabled, &[disabled] {
      pointer-events: none;
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
      }
      background-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
      }
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
      }
      &::placeholder {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
        }
      }
    }
  }
  .pin-input {
    border-radius: var(--radius-field);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
    }
    background-color: var(--color-base-100);
    text-align: center;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    &::placeholder {
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
      }
    }
    height: var(--size);
    width: var(--size);
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    --size: calc(var(--size-field, 0.25rem) * 9.5);
    &:hover:not(:focus, :focus-within) {
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
      }
    }
    &:focus, &:focus-within {
      border-color: var(--color-primary);
      --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-shadow-color: var(--color-primary);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--color-primary) 30%, #0000);
      }
      outline: 1px solid var(--color-primary);
      isolation: isolate;
    }
    &.pin-input-underline {
      border-radius: 0;
      border-style: var(--tw-border-style);
      border-width: 0px;
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 1px;
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
      }
      background-color: transparent;
      &:focus, &:focus-within {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 2px;
        border-color: var(--color-primary);
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        --tw-outline-style: none;
        outline-style: none;
      }
    }
    &.disabled, &:disabled, &[disabled] {
      pointer-events: none;
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
      }
      background-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
      }
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
      }
      &::placeholder {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
        }
      }
    }
  }
  .dropdown-item {
    clear: both;
    display: flex;
    width: 100%;
    align-items: center;
    column-gap: calc(0.25rem * 2);
    border-radius: var(--radius-field);
    background-color: transparent;
    padding-inline: calc(0.25rem * 4);
    padding-block: calc(0.25rem * 2.5);
    color: var(--color-base-content);
    text-decoration-line: none;
    text-decoration-thickness: 0px;
    text-align: inherit;
    &:hover, &:focus, &:focus-within, &:focus-visible {
      background-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
      }
      --tw-outline-style: none;
      outline-style: none;
    }
    &.dropdown-disabled, &:disabled, &[disabled] {
      pointer-events: none;
      background-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral) 5%, transparent);
      }
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
      }
    }
    &:active {
      background-color: var(--color-primary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
      }
      color: var(--color-primary);
    }
  }
  .dropdown-item {
    clear: both;
    display: flex;
    width: 100%;
    align-items: center;
    column-gap: calc(0.25rem * 2);
    border-radius: var(--radius-field);
    background-color: transparent;
    padding-inline: calc(0.25rem * 4);
    padding-block: calc(0.25rem * 2.5);
    color: var(--color-base-content);
    text-decoration-line: none;
    text-decoration-thickness: 0px;
    text-align: inherit;
    &:hover, &:focus, &:focus-within, &:focus-visible {
      background-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
      }
      --tw-outline-style: none;
      outline-style: none;
    }
    &.dropdown-disabled, &:disabled, &[disabled] {
      pointer-events: none;
      background-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral) 5%, transparent);
      }
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
      }
    }
    &:active {
      background-color: var(--color-primary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
      }
      color: var(--color-primary);
    }
  }
  .loading {
    pointer-events: none;
    display: inline-block;
    aspect-ratio: 1 / 1;
    background-color: currentColor;
    vertical-align: middle;
    width: calc(var(--size-selector, 0.25rem) * 6);
    mask-size: 100%;
    mask-repeat: no-repeat;
    mask-position: center;
    mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
  }
  .loading {
    pointer-events: none;
    display: inline-block;
    aspect-ratio: 1 / 1;
    background-color: currentColor;
    vertical-align: middle;
    width: calc(var(--size-selector, 0.25rem) * 6);
    mask-size: 100%;
    mask-repeat: no-repeat;
    mask-position: center;
    mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
  }
  .modal-content {
    pointer-events: auto;
    display: flex;
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
    flex-direction: column;
    border-radius: var(--radius-lg);
    background-color: var(--color-base-100);
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-timing-function: var(--ease-out);
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    transition-duration: 300ms;
    --tw-duration: 300ms;
    --tw-ease: var(--ease-out);
    max-height: calc(100vh - 2rem);
    overscroll-behavior: contain;
  }
  .modal-content {
    pointer-events: auto;
    display: flex;
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
    flex-direction: column;
    border-radius: var(--radius-lg);
    background-color: var(--color-base-100);
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-timing-function: var(--ease-out);
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    transition-duration: 300ms;
    --tw-duration: 300ms;
    --tw-ease: var(--ease-out);
    max-height: calc(100vh - 2rem);
    overscroll-behavior: contain;
  }
  .accordion-toggle {
    width: 100%;
    cursor: pointer;
    padding-inline: calc(0.25rem * 5);
    padding-block: calc(0.25rem * 4);
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-base-content);
    &:disabled {
      pointer-events: none;
      opacity: 50%;
    }
  }
  .accordion-toggle {
    width: 100%;
    cursor: pointer;
    padding-inline: calc(0.25rem * 5);
    padding-block: calc(0.25rem * 4);
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-base-content);
    &:disabled {
      pointer-events: none;
      opacity: 50%;
    }
  }
  .disabled {
    .carousel-prev& {
      pointer-events: none;
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 30%, transparent);
      }
    }
    .carousel-next& {
      pointer-events: none;
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 30%, transparent);
      }
    }
  }
  .disabled {
    .carousel-prev& {
      pointer-events: none;
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 30%, transparent);
      }
    }
    .carousel-next& {
      pointer-events: none;
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 30%, transparent);
      }
    }
  }
  .disabled {
    .range& {
      pointer-events: none;
      opacity: 30%;
    }
  }
  .disabled {
    .range& {
      pointer-events: none;
      opacity: 30%;
    }
  }
  .tooltip-content {
    visibility: hidden;
    position: absolute;
    display: inline-block;
    padding: calc(0.25rem * 2);
    opacity: 0%;
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    width: max-content;
    z-index: 20;
  }
  .tooltip-content {
    visibility: hidden;
    position: absolute;
    display: inline-block;
    padding: calc(0.25rem * 2);
    opacity: 0%;
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    width: max-content;
    z-index: 20;
  }
  .collapse {
    visibility: collapse;
  }
  .collapse {
    &:not(td):not(tr):not(colgroup) {
      visibility: visible;
    }
  }
  .collapse {
    &:not(td):not(tr):not(colgroup) {
      visibility: visible;
    }
  }
  .invisible {
    visibility: hidden;
  }
  .select-floating-label {
    position: absolute;
    inset-inline-start: calc(0.25rem * 0);
    top: calc(0.25rem * 0);
    margin-inline-start: calc(0.25rem * 3);
    width: fit-content;
    overflow: hidden;
    background-color: var(--color-base-100);
    padding-inline: calc(0.25rem * 1);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    text-overflow: ellipsis;
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
    }
    scale: 0.75;
    translate: -12.5% calc(-50% - 0.125em);
  }
  .select-floating-label {
    position: absolute;
    inset-inline-start: calc(0.25rem * 0);
    top: calc(0.25rem * 0);
    margin-inline-start: calc(0.25rem * 3);
    width: fit-content;
    overflow: hidden;
    background-color: var(--color-base-100);
    padding-inline: calc(0.25rem * 1);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    text-overflow: ellipsis;
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
    }
    scale: 0.75;
    translate: -12.5% calc(-50% - 0.125em);
  }
  .chat {
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    column-gap: calc(0.25rem * 4);
    padding-block: calc(0.25rem * 1);
    .chat-avatar {
      grid-row: span 2 / span 2;
      align-self: flex-end;
    }
    .chat-header {
      grid-row-start: 1;
      margin-bottom: calc(0.25rem * 1);
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
    .chat-footer {
      grid-row-start: 3;
      margin-top: calc(0.25rem * 1);
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
    .chat-bubble {
      position: relative;
      display: block;
      width: fit-content;
      border-radius: var(--radius-box);
      padding: calc(0.25rem * 3);
      max-width: 90%;
      min-height: 2.75rem;
      min-width: 2.75rem;
      &:before {
        position: absolute;
        bottom: calc(0.25rem * 0);
        width: calc(0.25rem * 4);
        height: calc(0.25rem * 4);
        background-color: inherit;
        content: "";
        mask-size: contain;
        mask-repeat: no-repeat;
        mask-position: center;
      }
    }
    &.chat-receiver {
      place-items: start;
      grid-template-columns: auto 1fr;
      .chat-header {
        grid-column-start: 2;
      }
      .chat-footer {
        grid-column-start: 2;
      }
      .chat-avatar {
        grid-column-start: 1;
      }
      .chat-bubble {
        grid-column-start: 2;
        border-end-start-radius: 0;
        background-color: var(--color-base-100);
        color: var(--color-base-content);
        &:before {
          inset-inline-start: -0.749rem;
          mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
        }
        [dir="rtl"] &:before {
          mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
        }
      }
    }
    &.chat-sender {
      place-items: end;
      grid-template-columns: 1fr auto;
      .chat-header {
        grid-column-start: 1;
      }
      .chat-footer {
        grid-column-start: 1;
      }
      .chat-avatar {
        grid-column-start: 2;
      }
      .chat-bubble {
        grid-column-start: 1;
        border-end-end-radius: 0;
        background-color: var(--color-primary);
        text-align: end;
        color: var(--color-primary-content);
        &:before {
          inset-inline-start: 99.9%;
          mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
        }
        [dir="rtl"] &:before {
          mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
        }
      }
    }
  }
  .chat {
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    column-gap: calc(0.25rem * 4);
    padding-block: calc(0.25rem * 1);
    .chat-avatar {
      grid-row: span 2 / span 2;
      align-self: flex-end;
    }
    .chat-header {
      grid-row-start: 1;
      margin-bottom: calc(0.25rem * 1);
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
    .chat-footer {
      grid-row-start: 3;
      margin-top: calc(0.25rem * 1);
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
    .chat-bubble {
      position: relative;
      display: block;
      width: fit-content;
      border-radius: var(--radius-box);
      padding: calc(0.25rem * 3);
      max-width: 90%;
      min-height: 2.75rem;
      min-width: 2.75rem;
      &:before {
        position: absolute;
        bottom: calc(0.25rem * 0);
        width: calc(0.25rem * 4);
        height: calc(0.25rem * 4);
        background-color: inherit;
        content: "";
        mask-size: contain;
        mask-repeat: no-repeat;
        mask-position: center;
      }
    }
    &.chat-receiver {
      place-items: start;
      grid-template-columns: auto 1fr;
      .chat-header {
        grid-column-start: 2;
      }
      .chat-footer {
        grid-column-start: 2;
      }
      .chat-avatar {
        grid-column-start: 1;
      }
      .chat-bubble {
        grid-column-start: 2;
        border-end-start-radius: 0;
        background-color: var(--color-base-100);
        color: var(--color-base-content);
        &:before {
          inset-inline-start: -0.749rem;
          mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
        }
        [dir="rtl"] &:before {
          mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
        }
      }
    }
    &.chat-sender {
      place-items: end;
      grid-template-columns: 1fr auto;
      .chat-header {
        grid-column-start: 1;
      }
      .chat-footer {
        grid-column-start: 1;
      }
      .chat-avatar {
        grid-column-start: 2;
      }
      .chat-bubble {
        grid-column-start: 1;
        border-end-end-radius: 0;
        background-color: var(--color-primary);
        text-align: end;
        color: var(--color-primary-content);
        &:before {
          inset-inline-start: 99.9%;
          mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
        }
        [dir="rtl"] &:before {
          mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
        }
      }
    }
  }
  .table {
    position: relative;
    width: 100%;
    overflow-x: hidden;
    overflow-y: auto;
    border-radius: var(--radius-box);
    text-align: left;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      text-align: right;
    }
    tr.row-hover {
      &, &:nth-child(even) {
        &:hover {
          @media (hover: hover) {
            background-color: var(--color-base-200);
            @supports (color: color-mix(in lab, red, red)) {
              background-color: color-mix(in oklab, var(--color-base-200) 80%, transparent);
            }
          }
        }
      }
    }
    tr.row-active {
      &, &:nth-child(even) {
        background-color: var(--color-base-200);
      }
    }
    :where(th, td) {
      padding-inline: calc(0.25rem * 5);
      padding-block: calc(0.25rem * 3);
      vertical-align: middle;
      text-wrap: nowrap;
    }
    :where(thead, tfoot) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
      white-space: nowrap;
      color: var(--color-base-content);
      text-transform: uppercase;
      letter-spacing: 1px;
    }
    :where(th) {
      --tw-font-weight: var(--font-weight-medium);
      font-weight: var(--font-weight-medium);
    }
    :where(.table-pin-rows thead tr) {
      position: sticky;
      top: calc(0.25rem * 0);
      z-index: 1;
      background-color: var(--color-base-100);
    }
    :where(.table-pin-rows tfoot tr) {
      position: sticky;
      bottom: calc(0.25rem * 0);
      z-index: 1;
      background-color: var(--color-base-100);
    }
    :where(.table-pin-cols tr th) {
      position: sticky;
      right: calc(0.25rem * 0);
      left: calc(0.25rem * 0);
      background-color: var(--color-base-100);
    }
    :where(thead tr) {
      border-bottom: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 25%, #0000);
      }
    }
    :where(tbody tr:not(:last-child)) {
      border-bottom: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 10%, #0000);
      }
    }
    :where(tfoot) {
      border-top: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-top: var(--border) solid color-mix(in oklch, var(--color-base-content) 25%, #0000);
      }
    }
  }
  .table {
    position: relative;
    width: 100%;
    overflow-x: hidden;
    overflow-y: auto;
    border-radius: var(--radius-box);
    text-align: left;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      text-align: right;
    }
    tr.row-hover {
      &, &:nth-child(even) {
        &:hover {
          @media (hover: hover) {
            background-color: var(--color-base-200);
            @supports (color: color-mix(in lab, red, red)) {
              background-color: color-mix(in oklab, var(--color-base-200) 80%, transparent);
            }
          }
        }
      }
    }
    tr.row-active {
      &, &:nth-child(even) {
        background-color: var(--color-base-200);
      }
    }
    :where(th, td) {
      padding-inline: calc(0.25rem * 5);
      padding-block: calc(0.25rem * 3);
      vertical-align: middle;
      text-wrap: nowrap;
    }
    :where(thead, tfoot) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
      white-space: nowrap;
      color: var(--color-base-content);
      text-transform: uppercase;
      letter-spacing: 1px;
    }
    :where(th) {
      --tw-font-weight: var(--font-weight-medium);
      font-weight: var(--font-weight-medium);
    }
    :where(.table-pin-rows thead tr) {
      position: sticky;
      top: calc(0.25rem * 0);
      z-index: 1;
      background-color: var(--color-base-100);
    }
    :where(.table-pin-rows tfoot tr) {
      position: sticky;
      bottom: calc(0.25rem * 0);
      z-index: 1;
      background-color: var(--color-base-100);
    }
    :where(.table-pin-cols tr th) {
      position: sticky;
      right: calc(0.25rem * 0);
      left: calc(0.25rem * 0);
      background-color: var(--color-base-100);
    }
    :where(thead tr) {
      border-bottom: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 25%, #0000);
      }
    }
    :where(tbody tr:not(:last-child)) {
      border-bottom: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 10%, #0000);
      }
    }
    :where(tfoot) {
      border-top: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-top: var(--border) solid color-mix(in oklch, var(--color-base-content) 25%, #0000);
      }
    }
  }
  .tabs-lifted {
    & > .tab:focus-visible {
      border-end-end-radius: 0;
      border-end-start-radius: 0;
    }
    & > .tab {
      @media (hover:hover) {
        &:hover {
          @media (hover: hover) {
            border-color: var(--color-primary);
            @supports (color: color-mix(in lab, red, red)) {
              border-color: color-mix(in oklab, var(--color-primary) 30%, transparent);
            }
          }
        }
      }
      @media (hover:hover) {
        &:hover {
          @media (hover: hover) {
            color: var(--color-primary);
          }
        }
      }
      border: var(--tab-border, 1px) solid transparent;
      border-width: 0 0 var(--tab-border, 1px) 0;
      border-radius: var(--radius-field, 0.375rem);
      border-bottom-color: var(--tab-border-color);
      padding-inline-start: var(--tab-p, 1rem);
      padding-inline-end: var(--tab-p, 1rem);
      padding-top: var(--tab-border, 1px);
    }
    & > .tab.tab-active:not([disabled]) {
      background-color: var(--tab-bg);
      border-width: var(--tab-border, 1px) var(--tab-border, 1px) 0 var(--tab-border, 1px);
      border-color: var(--tab-border-color);
      border-end-start-radius: 0;
      border-end-end-radius: 0;
      padding-inline-start: calc(var(--tab-p, 1rem) - var(--tab-border, 1px));
      padding-inline-end: calc(var(--tab-p, 1rem) - var(--tab-border, 1px));
      padding-bottom: var(--tab-border, 1px);
      padding-top: 0;
    }
    & > .tab.tab-active:not([disabled]):before {
      content: "";
      display: block;
      position: absolute;
      z-index: 1;
      width: calc(100% + var(--radius-field, 0.375rem) * 2);
      height: var(--radius-field, 0.375rem);
      bottom: 0;
      background-size: var(--radius-field, 0.375rem);
      background-repeat: no-repeat;
      background-position: top left, top right;
      --tab-grad: calc(69% - var(--tab-border, 1px));
      --radius-start: radial-gradient(
    circle at top left,
    transparent var(--tab-grad),
    var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
    var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
    var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px)
  );
      --radius-end: radial-gradient(
    circle at top right,
    transparent var(--tab-grad),
    var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
    var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
    var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px)
  );
      background-image: var(--radius-start), var(--radius-end);
    }
    & > .tab.tab-active:not([disabled]):first-child:before {
      background-image: var(--radius-end);
      background-position: top right;
    }
    & > .tab.tab-active:not([disabled]):last-child:before {
      background-image: var(--radius-start);
      background-position: top left;
    }
    [dir="rtl"] & > .tab.tab-active:not([disabled]):first-child:before {
      background-image: var(--radius-start);
      background-position: top left;
    }
    [dir="rtl"] & > .tab.tab-active:not([disabled]):last-child:before {
      background-image: var(--radius-end);
      background-position: top right;
    }
    & > .tab-active:not([disabled]) + .tabs-lifted .tab-active:not([disabled]) {
      &:before {
        background-image: var(--radius-end);
        background-position: top right;
      }
    }
    .tabs-lifted > .tab-active:not([disabled]) + & .tab-active:not([disabled]) {
      &:before {
        background-image: var(--radius-end);
        background-position: top right;
      }
    }
    &:has(.tab-content[class^="rounded-"]) .tab:first-child:not(.tab-active), &:has(.tab-content[class*=" rounded-"]) .tab:first-child:not(.tab-active) {
      border-bottom-color: transparent;
    }
  }
  .tabs-lifted {
    & > .tab:focus-visible {
      border-end-end-radius: 0;
      border-end-start-radius: 0;
    }
    & > .tab {
      @media (hover:hover) {
        &:hover {
          @media (hover: hover) {
            border-color: var(--color-primary);
            @supports (color: color-mix(in lab, red, red)) {
              border-color: color-mix(in oklab, var(--color-primary) 30%, transparent);
            }
          }
        }
      }
      @media (hover:hover) {
        &:hover {
          @media (hover: hover) {
            color: var(--color-primary);
          }
        }
      }
      border: var(--tab-border, 1px) solid transparent;
      border-width: 0 0 var(--tab-border, 1px) 0;
      border-radius: var(--radius-field, 0.375rem);
      border-bottom-color: var(--tab-border-color);
      padding-inline-start: var(--tab-p, 1rem);
      padding-inline-end: var(--tab-p, 1rem);
      padding-top: var(--tab-border, 1px);
    }
    & > .tab.tab-active:not([disabled]) {
      background-color: var(--tab-bg);
      border-width: var(--tab-border, 1px) var(--tab-border, 1px) 0 var(--tab-border, 1px);
      border-color: var(--tab-border-color);
      border-end-start-radius: 0;
      border-end-end-radius: 0;
      padding-inline-start: calc(var(--tab-p, 1rem) - var(--tab-border, 1px));
      padding-inline-end: calc(var(--tab-p, 1rem) - var(--tab-border, 1px));
      padding-bottom: var(--tab-border, 1px);
      padding-top: 0;
    }
    & > .tab.tab-active:not([disabled]):before {
      content: "";
      display: block;
      position: absolute;
      z-index: 1;
      width: calc(100% + var(--radius-field, 0.375rem) * 2);
      height: var(--radius-field, 0.375rem);
      bottom: 0;
      background-size: var(--radius-field, 0.375rem);
      background-repeat: no-repeat;
      background-position: top left, top right;
      --tab-grad: calc(69% - var(--tab-border, 1px));
      --radius-start: radial-gradient(
    circle at top left,
    transparent var(--tab-grad),
    var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
    var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
    var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px)
  );
      --radius-end: radial-gradient(
    circle at top right,
    transparent var(--tab-grad),
    var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
    var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
    var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px)
  );
      background-image: var(--radius-start), var(--radius-end);
    }
    & > .tab.tab-active:not([disabled]):first-child:before {
      background-image: var(--radius-end);
      background-position: top right;
    }
    & > .tab.tab-active:not([disabled]):last-child:before {
      background-image: var(--radius-start);
      background-position: top left;
    }
    [dir="rtl"] & > .tab.tab-active:not([disabled]):first-child:before {
      background-image: var(--radius-start);
      background-position: top left;
    }
    [dir="rtl"] & > .tab.tab-active:not([disabled]):last-child:before {
      background-image: var(--radius-end);
      background-position: top right;
    }
    & > .tab-active:not([disabled]) + .tabs-lifted .tab-active:not([disabled]) {
      &:before {
        background-image: var(--radius-end);
        background-position: top right;
      }
    }
    .tabs-lifted > .tab-active:not([disabled]) + & .tab-active:not([disabled]) {
      &:before {
        background-image: var(--radius-end);
        background-position: top right;
      }
    }
    &:has(.tab-content[class^="rounded-"]) .tab:first-child:not(.tab-active), &:has(.tab-content[class*=" rounded-"]) .tab:first-child:not(.tab-active) {
      border-bottom-color: transparent;
    }
  }
  .select {
    position: relative;
    display: inline-flex;
    width: 100%;
    flex-shrink: 1;
    cursor: pointer;
    appearance: none;
    background-color: var(--color-base-100);
    padding-inline-start: calc(0.25rem * 3);
    padding-inline-end: calc(0.25rem * 10);
    vertical-align: middle;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-base-content);
    webkit-user-select: none;
    user-select: none;
    height: var(--size);
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' viewBox='0 0 24 24'><path fill='none' stroke='%239293AE' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 9l6 6l6-6'/></svg>");
    background-size: 1.3em;
    background-position: calc(100% - 0.5rem) center;
    background-repeat: no-repeat;
    text-overflow: ellipsis;
    border: var(--border) solid #0000;
    border-color: var(--input-color);
    --input-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-base-content) 40%, #0000);
    }
    --size: calc(var(--size-field, 0.25rem) * 9.5);
    [dir="rtl"] & {
      background-position: calc(0% + 1.3em) center;
    }
    select {
      margin-inline-end: calc(0.25rem * -10);
      height: 100%;
      width: calc(100% + 2.75rem);
      appearance: none;
      padding-inline-start: calc(0.25rem * 3);
      padding-inline-end: calc(0.25rem * 10);
      background-color: transparent;
      border-style: none;
      &:focus, &:focus-within {
        --tw-outline-style: none;
        outline-style: none;
      }
    }
    &[multiple] {
      background-image: none;
    }
    &:focus, &:focus-within {
      --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --input-color: var(--color-primary);
      --tw-shadow-color: var(--input-color);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--input-color) 30%, #0000);
      }
      outline: 1px solid var(--input-color);
      border-color: var(--input-color);
      isolation: isolate;
    }
    &:has(> select[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed;
      border-style: var(--tw-border-style);
      border-width: 0px;
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
      }
      background-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
      }
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
      }
      &::placeholder {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
      }
    }
    &:has(> select[disabled]) > select[disabled] {
      cursor: not-allowed;
    }
    .input > & {
      height: auto;
      border-style: var(--tw-border-style);
      border-width: 0px;
      &:focus, &:focus-within {
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        outline-style: var(--tw-outline-style);
        outline-width: 0px;
      }
    }
    &:has(> .select-floating) select {
      &::placeholder {
        color: transparent;
      }
      &:focus {
        &::placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
      }
    }
  }
  .select {
    position: relative;
    display: inline-flex;
    width: 100%;
    flex-shrink: 1;
    cursor: pointer;
    appearance: none;
    background-color: var(--color-base-100);
    padding-inline-start: calc(0.25rem * 3);
    padding-inline-end: calc(0.25rem * 10);
    vertical-align: middle;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-base-content);
    webkit-user-select: none;
    user-select: none;
    height: var(--size);
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' viewBox='0 0 24 24'><path fill='none' stroke='%239293AE' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 9l6 6l6-6'/></svg>");
    background-size: 1.3em;
    background-position: calc(100% - 0.5rem) center;
    background-repeat: no-repeat;
    text-overflow: ellipsis;
    border: var(--border) solid #0000;
    border-color: var(--input-color);
    --input-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-base-content) 40%, #0000);
    }
    --size: calc(var(--size-field, 0.25rem) * 9.5);
    [dir="rtl"] & {
      background-position: calc(0% + 1.3em) center;
    }
    select {
      margin-inline-end: calc(0.25rem * -10);
      height: 100%;
      width: calc(100% + 2.75rem);
      appearance: none;
      padding-inline-start: calc(0.25rem * 3);
      padding-inline-end: calc(0.25rem * 10);
      background-color: transparent;
      border-style: none;
      &:focus, &:focus-within {
        --tw-outline-style: none;
        outline-style: none;
      }
    }
    &[multiple] {
      background-image: none;
    }
    &:focus, &:focus-within {
      --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --input-color: var(--color-primary);
      --tw-shadow-color: var(--input-color);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--input-color) 30%, #0000);
      }
      outline: 1px solid var(--input-color);
      border-color: var(--input-color);
      isolation: isolate;
    }
    &:has(> select[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed;
      border-style: var(--tw-border-style);
      border-width: 0px;
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
      }
      background-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
      }
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
      }
      &::placeholder {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
      }
    }
    &:has(> select[disabled]) > select[disabled] {
      cursor: not-allowed;
    }
    .input > & {
      height: auto;
      border-style: var(--tw-border-style);
      border-width: 0px;
      &:focus, &:focus-within {
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        outline-style: var(--tw-outline-style);
        outline-width: 0px;
      }
    }
    &:has(> .select-floating) select {
      &::placeholder {
        color: transparent;
      }
      &:focus {
        &::placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
      }
    }
  }
  .advance-select-toggle {
    position: relative;
    display: inline-flex;
    width: 100%;
    flex-shrink: 1;
    cursor: pointer;
    appearance: none;
    align-items: center;
    background-color: var(--color-base-100);
    padding-inline-start: calc(0.25rem * 3);
    padding-inline-end: calc(0.25rem * 10);
    vertical-align: middle;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-base-content);
    webkit-user-select: none;
    user-select: none;
    height: var(--size);
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    text-overflow: ellipsis;
    border: var(--border) solid #0000;
    border-color: var(--input-color);
    --input-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-base-content) 40%, #0000);
    }
    --size: calc(var(--size-field, 0.25rem) * 9.5);
    &:focus, &:focus-within {
      --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --input-color: var(--color-primary);
      --tw-shadow-color: var(--input-color);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--input-color) 30%, #0000);
      }
      outline: 1px solid var(--input-color);
      border-color: var(--input-color);
      isolation: isolate;
    }
    &:focus-visible {
      outline: unset;
    }
  }
  .advance-select-toggle {
    position: relative;
    display: inline-flex;
    width: 100%;
    flex-shrink: 1;
    cursor: pointer;
    appearance: none;
    align-items: center;
    background-color: var(--color-base-100);
    padding-inline-start: calc(0.25rem * 3);
    padding-inline-end: calc(0.25rem * 10);
    vertical-align: middle;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-base-content);
    webkit-user-select: none;
    user-select: none;
    height: var(--size);
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    text-overflow: ellipsis;
    border: var(--border) solid #0000;
    border-color: var(--input-color);
    --input-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-base-content) 40%, #0000);
    }
    --size: calc(var(--size-field, 0.25rem) * 9.5);
    &:focus, &:focus-within {
      --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --input-color: var(--color-primary);
      --tw-shadow-color: var(--input-color);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--input-color) 30%, #0000);
      }
      outline: 1px solid var(--input-color);
      border-color: var(--input-color);
      isolation: isolate;
    }
    &:focus-visible {
      outline: unset;
    }
  }
  .card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--radius-box);
    --tw-border-style: solid;
    border-style: solid;
    border-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
    background-color: var(--color-base-100);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
    --tw-outline-style: none;
    outline-style: none;
    box-shadow: var( --card-shadow, 0 1px 3px 0 var(--color-base-300), 0 1px 2px -1px var(--color-base-300) );
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: var( --card-shadow, 0 1px 3px 0 color-mix(in oklab, var(--color-base-300) 20%, #0000), 0 1px 2px -1px color-mix(in oklab, var(--color-base-300) 20%, #0000) );
    }
    border-width: var(--card-border, 0px);
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    :where(figure:first-child) {
      overflow: hidden;
      border-start-start-radius: inherit;
      border-start-end-radius: inherit;
      border-end-start-radius: unset;
      border-end-end-radius: unset;
    }
    :where(figure:last-child) {
      overflow: hidden;
      border-start-start-radius: unset;
      border-start-end-radius: unset;
      border-end-start-radius: inherit;
      border-end-end-radius: inherit;
    }
    &:where(.card-border) {
      border: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border: var(--border) solid color-mix(in oklab, var(--color-base-content) 20%, transparent);
      }
    }
    &.image-full {
      display: grid;
      &:before {
        position: relative;
        grid-column-start: 1;
        grid-row-start: 1;
        border-radius: var(--radius-box);
        background-color: var(--color-neutral);
        opacity: 75%;
        content: "";
      }
      > * {
        grid-column-start: 1;
        grid-row-start: 1;
      }
      > .card-body {
        position: relative;
        color: var(--color-neutral-content);
      }
      :where(figure) {
        overflow: hidden;
        border-radius: inherit;
      }
      > figure img {
        height: 100%;
        object-fit: cover;
      }
    }
    figure {
      display: flex;
      align-items: center;
      justify-content: center;
    }
    &:has(> input:is(input[type="checkbox"], input[type="radio"])) {
      cursor: pointer;
      user-select: none;
    }
    &:has(> :checked) {
      outline: 2px solid currentColor;
    }
    & .card-alert {
      border-radius: 0;
      &:first-child {
        border-top-left-radius: var(--radius-box);
        border-top-right-radius: var(--radius-box);
      }
      &:last-child {
        border-bottom-right-radius: var(--radius-box);
        border-bottom-left-radius: var(--radius-box);
      }
    }
  }
  .card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--radius-box);
    --tw-border-style: solid;
    border-style: solid;
    border-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
    background-color: var(--color-base-100);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
    --tw-outline-style: none;
    outline-style: none;
    box-shadow: var( --card-shadow, 0 1px 3px 0 var(--color-base-300), 0 1px 2px -1px var(--color-base-300) );
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: var( --card-shadow, 0 1px 3px 0 color-mix(in oklab, var(--color-base-300) 20%, #0000), 0 1px 2px -1px color-mix(in oklab, var(--color-base-300) 20%, #0000) );
    }
    border-width: var(--card-border, 0px);
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    :where(figure:first-child) {
      overflow: hidden;
      border-start-start-radius: inherit;
      border-start-end-radius: inherit;
      border-end-start-radius: unset;
      border-end-end-radius: unset;
    }
    :where(figure:last-child) {
      overflow: hidden;
      border-start-start-radius: unset;
      border-start-end-radius: unset;
      border-end-start-radius: inherit;
      border-end-end-radius: inherit;
    }
    &:where(.card-border) {
      border: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border: var(--border) solid color-mix(in oklab, var(--color-base-content) 20%, transparent);
      }
    }
    &.image-full {
      display: grid;
      &:before {
        position: relative;
        grid-column-start: 1;
        grid-row-start: 1;
        border-radius: var(--radius-box);
        background-color: var(--color-neutral);
        opacity: 75%;
        content: "";
      }
      > * {
        grid-column-start: 1;
        grid-row-start: 1;
      }
      > .card-body {
        position: relative;
        color: var(--color-neutral-content);
      }
      :where(figure) {
        overflow: hidden;
        border-radius: inherit;
      }
      > figure img {
        height: 100%;
        object-fit: cover;
      }
    }
    figure {
      display: flex;
      align-items: center;
      justify-content: center;
    }
    &:has(> input:is(input[type="checkbox"], input[type="radio"])) {
      cursor: pointer;
      user-select: none;
    }
    &:has(> :checked) {
      outline: 2px solid currentColor;
    }
    & .card-alert {
      border-radius: 0;
      &:first-child {
        border-top-left-radius: var(--radius-box);
        border-top-right-radius: var(--radius-box);
      }
      &:last-child {
        border-bottom-right-radius: var(--radius-box);
        border-bottom-left-radius: var(--radius-box);
      }
    }
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .menu-horizontal {
    display: inline-flex;
    flex-direction: row;
    & > li:not(.menu-title) > .collapse > ul {
      position: absolute;
      margin-inline-start: calc(0.25rem * 0);
      margin-top: calc(0.25rem * 4);
      padding-block: calc(0.25rem * 2);
      padding-inline-end: calc(0.25rem * 2);
    }
    & > li > .collapse > ul {
      &:before {
        content: none;
      }
    }
    :where(& > li:not(.menu-title) > .collapse > ul) {
      border-radius: var(--radius-box);
      background-color: var(--color-base-100);
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-shadow-color: var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .menu-horizontal {
    display: inline-flex;
    flex-direction: row;
    & > li:not(.menu-title) > .collapse > ul {
      position: absolute;
      margin-inline-start: calc(0.25rem * 0);
      margin-top: calc(0.25rem * 4);
      padding-block: calc(0.25rem * 2);
      padding-inline-end: calc(0.25rem * 2);
    }
    & > li > .collapse > ul {
      &:before {
        content: none;
      }
    }
    :where(& > li:not(.menu-title) > .collapse > ul) {
      border-radius: var(--radius-box);
      background-color: var(--color-base-100);
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-shadow-color: var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .checkbox {
    position: relative;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    border-radius: var(--radius-selector);
    padding: calc(0.25rem * 1);
    vertical-align: middle;
    color: var(--color-neutral-content);
    border: var(--border) solid var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border: var(--border) solid color-mix(in oklab, var(--color-base-content) 40%, #0000);
    }
    --input-color: var(--color-neutral);
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 0 #0000 inset, 0 0 #0000;
    transition: background-color 0.2s, box-shadow 0.2s;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: var(--size);
    height: var(--size);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    &:before {
      --tw-content: "";
      content: var(--tw-content);
      display: block;
      width: 100%;
      height: 100%;
      rotate: 45deg;
      background-color: currentColor;
      opacity: 0%;
      transition: clip-path 0.3s, opacity 0.1s, rotate 0.3s, translate 0.3s;
      transition-delay: 0.1s;
      clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);
      box-shadow: 0px 3px 0 0px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
      font-size: 1rem;
      line-height: 0.75;
    }
    &:focus-visible {
      outline: 2px solid var(--input-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        outline: 2px solid color-mix(in oklab, var(--input-color, var(--color-neutral)) 30%, #0000);
      }
      outline-offset: 0px;
    }
    &:checked, &[aria-checked="true"] {
      background-color: var(--input-color, #0000);
      border-color: var(--input-color, #0000);
      box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px 2px 0 var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px 2px 0 color-mix(in oklab, var(--color-base-300) 20%, #0000);
      }
      &:before {
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);
        opacity: 100%;
      }
      @media (forced-colors: active) {
        &:before {
          rotate: 0deg;
          background-color: transparent;
          --tw-content: "✔︎";
          clip-path: none;
        }
      }
      @media print {
        &:before {
          rotate: 0deg;
          background-color: transparent;
          --tw-content: "✔︎";
          clip-path: none;
        }
      }
    }
    &:indeterminate {
      background-color: var(--color-neutral);
      &:before {
        rotate: 0deg;
        opacity: 100%;
        translate: 0 -35%;
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 80% 80%, 80% 100%);
      }
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 40%;
    }
  }
  .checkbox {
    position: relative;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    border-radius: var(--radius-selector);
    padding: calc(0.25rem * 1);
    vertical-align: middle;
    color: var(--color-neutral-content);
    border: var(--border) solid var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border: var(--border) solid color-mix(in oklab, var(--color-base-content) 40%, #0000);
    }
    --input-color: var(--color-neutral);
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 0 #0000 inset, 0 0 #0000;
    transition: background-color 0.2s, box-shadow 0.2s;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: var(--size);
    height: var(--size);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    &:before {
      --tw-content: "";
      content: var(--tw-content);
      display: block;
      width: 100%;
      height: 100%;
      rotate: 45deg;
      background-color: currentColor;
      opacity: 0%;
      transition: clip-path 0.3s, opacity 0.1s, rotate 0.3s, translate 0.3s;
      transition-delay: 0.1s;
      clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);
      box-shadow: 0px 3px 0 0px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
      font-size: 1rem;
      line-height: 0.75;
    }
    &:focus-visible {
      outline: 2px solid var(--input-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        outline: 2px solid color-mix(in oklab, var(--input-color, var(--color-neutral)) 30%, #0000);
      }
      outline-offset: 0px;
    }
    &:checked, &[aria-checked="true"] {
      background-color: var(--input-color, #0000);
      border-color: var(--input-color, #0000);
      box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px 2px 0 var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px 2px 0 color-mix(in oklab, var(--color-base-300) 20%, #0000);
      }
      &:before {
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);
        opacity: 100%;
      }
      @media (forced-colors: active) {
        &:before {
          rotate: 0deg;
          background-color: transparent;
          --tw-content: "✔︎";
          clip-path: none;
        }
      }
      @media print {
        &:before {
          rotate: 0deg;
          background-color: transparent;
          --tw-content: "✔︎";
          clip-path: none;
        }
      }
    }
    &:indeterminate {
      background-color: var(--color-neutral);
      &:before {
        rotate: 0deg;
        opacity: 100%;
        translate: 0 -35%;
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 80% 80%, 80% 100%);
      }
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 40%;
    }
  }
  .radio {
    position: relative;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    border-radius: calc(infinity * 1px);
    padding: calc(0.25rem * 1);
    vertical-align: middle;
    border: var(--border) solid var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border: var(--border) solid color-mix(in oklab, var(--color-base-content) 40%, #0000);
    }
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: var(--size);
    height: var(--size);
    color: var(--input-color, var(--color-neutral));
    &:before {
      display: block;
      width: 100%;
      height: 100%;
      border-radius: calc(infinity * 1px);
      --tw-content: "";
      content: var(--tw-content);
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--fx-noise);
    }
    &:focus-visible {
      outline: 2px solid var(--input-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        outline: 2px solid color-mix(in oklab, var(--input-color, var(--color-neutral)) 30%, #0000);
      }
      outline-offset: 0px;
    }
    &:checked, &[aria-checked="true"] {
      animation: radio 0.2s ease-out;
      border-color: currentColor;
      background-color: var(--color-base-100);
      box-shadow: 0 1px 2px 0 var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 1px 2px 0 color-mix(in oklab, var(--color-base-300) 30%, #0000);
      }
      &:before {
        background-color: currentColor;
        box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
      }
      @media (forced-colors: active) {
        &:before {
          outline-style: var(--tw-outline-style);
          outline-width: 1px;
          outline-offset: calc(1px * -1);
        }
      }
      @media print {
        &:before {
          outline: 0.25rem solid;
          outline-offset: -1rem;
        }
      }
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 20%;
    }
  }
  .radio {
    position: relative;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    border-radius: calc(infinity * 1px);
    padding: calc(0.25rem * 1);
    vertical-align: middle;
    border: var(--border) solid var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border: var(--border) solid color-mix(in oklab, var(--color-base-content) 40%, #0000);
    }
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: var(--size);
    height: var(--size);
    color: var(--input-color, var(--color-neutral));
    &:before {
      display: block;
      width: 100%;
      height: 100%;
      border-radius: calc(infinity * 1px);
      --tw-content: "";
      content: var(--tw-content);
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--fx-noise);
    }
    &:focus-visible {
      outline: 2px solid var(--input-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        outline: 2px solid color-mix(in oklab, var(--input-color, var(--color-neutral)) 30%, #0000);
      }
      outline-offset: 0px;
    }
    &:checked, &[aria-checked="true"] {
      animation: radio 0.2s ease-out;
      border-color: currentColor;
      background-color: var(--color-base-100);
      box-shadow: 0 1px 2px 0 var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 1px 2px 0 color-mix(in oklab, var(--color-base-300) 30%, #0000);
      }
      &:before {
        background-color: currentColor;
        box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
      }
      @media (forced-colors: active) {
        &:before {
          outline-style: var(--tw-outline-style);
          outline-width: 1px;
          outline-offset: calc(1px * -1);
        }
      }
      @media print {
        &:before {
          outline: 0.25rem solid;
          outline-offset: -1rem;
        }
      }
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 20%;
    }
  }
  .modal-header {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: calc(0.25rem * 6);
    :where(&) + .modal-body {
      padding-top: 0;
    }
  }
  .modal-header {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: calc(0.25rem * 6);
    :where(&) + .modal-body {
      padding-top: 0;
    }
  }
  .carousel {
    position: relative;
    width: 100%;
    overflow: hidden;
    border-radius: var(--radius-2xl);
  }
  .carousel {
    position: relative;
    width: 100%;
    overflow: hidden;
    border-radius: var(--radius-2xl);
  }
  .alert {
    position: relative;
    width: 100%;
    border-radius: var(--radius-box);
    padding: calc(0.25rem * 4);
    color: var(--color-neutral-content);
    text-align: start;
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    background-color: var(--alert-bg);
    border: var(--border) solid var(--alert-border);
    box-shadow: 0 0.1875rem 0 -0.125rem oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset;
    --alert-bg: var(--alert-color, var(--color-neutral));
    --alert-border: var(--alert-color, var(--color-neutral));
    &.alert-outline {
      color: var(--alert-color, var(--color-neutral));
      --alert-bg: transparent;
      box-shadow: none;
      background-image: none;
    }
    &.alert-soft {
      color: var(--alert-color, var(--color-neutral));
      --alert-bg: var(--alert-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --alert-bg: color-mix(in oklab, var(--alert-color, var(--color-neutral)) 10%, var(--color-base-100));
      }
      box-shadow: none;
      background-image: none;
    }
  }
  .alert {
    position: relative;
    width: 100%;
    border-radius: var(--radius-box);
    padding: calc(0.25rem * 4);
    color: var(--color-neutral-content);
    text-align: start;
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    background-color: var(--alert-bg);
    border: var(--border) solid var(--alert-border);
    box-shadow: 0 0.1875rem 0 -0.125rem oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset;
    --alert-bg: var(--alert-color, var(--color-neutral));
    --alert-border: var(--alert-color, var(--color-neutral));
    &.alert-outline {
      color: var(--alert-color, var(--color-neutral));
      --alert-bg: transparent;
      box-shadow: none;
      background-image: none;
    }
    &.alert-soft {
      color: var(--alert-color, var(--color-neutral));
      --alert-bg: var(--alert-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --alert-bg: color-mix(in oklab, var(--alert-color, var(--color-neutral)) 10%, var(--color-base-100));
      }
      box-shadow: none;
      background-image: none;
    }
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .end-3 {
    inset-inline-end: calc(var(--spacing) * 3);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-2 {
    top: calc(var(--spacing) * 2);
  }
  .top-3 {
    top: calc(var(--spacing) * 3);
  }
  .top-full {
    top: 100%;
  }
  .right-2 {
    right: calc(var(--spacing) * 2);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-full {
    bottom: 100%;
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .input {
    display: inline-flex;
    width: 100%;
    flex-shrink: 1;
    cursor: text;
    appearance: none;
    background-color: var(--color-base-100);
    padding-inline: calc(0.25rem * 3);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
    color: var(--color-base-content);
    &::placeholder {
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
      }
    }
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
    border: var(--border) solid #0000;
    height: var(--size);
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    border-color: var(--input-color);
    --input-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-base-content) 40%, #0000);
    }
    --size: calc(var(--size-field, 0.25rem) * 9.5);
    &:hover:not(:focus, :focus-within), &:has(:hover):not(:focus, :focus-within) {
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
      }
    }
    &:where(input) {
      display: inline-block;
    }
    :where(input:not([type="checkbox"]):not([type="radio"])) {
      display: inline-block;
      height: 100%;
      width: 100%;
      appearance: none;
      background-color: transparent;
      border: none;
      &:focus, &:focus-within, &:focus-visible {
        --tw-outline-style: none;
        outline-style: none;
      }
    }
    &:focus, &:focus-within {
      --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --input-color: var(--color-primary);
      --tw-shadow-color: var(--input-color);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--input-color) 30%, #0000);
      }
      outline: 1px solid var(--input-color);
      isolation: isolate;
    }
    &:has(> input[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed;
      border-style: var(--tw-border-style);
      border-width: 0px;
      background-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
      }
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
      }
      box-shadow: none;
    }
    &:has(> input[disabled]) > input[disabled] {
      cursor: not-allowed;
    }
    &::-webkit-date-and-time-value {
      text-align: inherit;
    }
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -3);
        margin-inline-end: calc(0.25rem * -3);
      }
    }
    &:has(> .input-floating) input {
      &::placeholder {
        color: transparent;
      }
      &:focus {
        &::placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
      }
    }
  }
  .input {
    display: inline-flex;
    width: 100%;
    flex-shrink: 1;
    cursor: text;
    appearance: none;
    background-color: var(--color-base-100);
    padding-inline: calc(0.25rem * 3);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
    color: var(--color-base-content);
    &::placeholder {
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
      }
    }
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
    border: var(--border) solid #0000;
    height: var(--size);
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    border-color: var(--input-color);
    --input-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-base-content) 40%, #0000);
    }
    --size: calc(var(--size-field, 0.25rem) * 9.5);
    &:hover:not(:focus, :focus-within), &:has(:hover):not(:focus, :focus-within) {
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
      }
    }
    &:where(input) {
      display: inline-block;
    }
    :where(input:not([type="checkbox"]):not([type="radio"])) {
      display: inline-block;
      height: 100%;
      width: 100%;
      appearance: none;
      background-color: transparent;
      border: none;
      &:focus, &:focus-within, &:focus-visible {
        --tw-outline-style: none;
        outline-style: none;
      }
    }
    &:focus, &:focus-within {
      --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --input-color: var(--color-primary);
      --tw-shadow-color: var(--input-color);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--input-color) 30%, #0000);
      }
      outline: 1px solid var(--input-color);
      isolation: isolate;
    }
    &:has(> input[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed;
      border-style: var(--tw-border-style);
      border-width: 0px;
      background-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
      }
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
      }
      box-shadow: none;
    }
    &:has(> input[disabled]) > input[disabled] {
      cursor: not-allowed;
    }
    &::-webkit-date-and-time-value {
      text-align: inherit;
    }
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -3);
        margin-inline-end: calc(0.25rem * -3);
      }
    }
    &:has(> .input-floating) input {
      &::placeholder {
        color: transparent;
      }
      &:focus {
        &::placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
      }
    }
  }
  .textarea {
    display: inline-flex;
    min-height: calc(0.25rem * 20);
    width: 100%;
    flex-shrink: 1;
    appearance: none;
    border-radius: var(--radius-field);
    background-color: var(--color-base-100);
    padding-inline: calc(0.25rem * 4);
    padding-block: calc(0.25rem * 2);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-base-content);
    &::placeholder {
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
      }
    }
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
        }
      }
    }
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
    border: var(--border) solid #0000;
    border-color: var(--input-color);
    --input-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-base-content) 40%, #0000);
    }
    :where(textarea) {
      appearance: none;
      background-color: transparent;
      border: none;
      &:focus, &:focus-within {
        --tw-outline-style: none;
        outline-style: none;
      }
    }
    &:focus, &:focus-within {
      --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --input-color: var(--color-primary);
      --tw-shadow-color: var(--input-color);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--input-color) 30%, #0000);
      }
      outline: 1px solid var(--input-color);
      border-color: var(--input-color);
      isolation: isolate;
    }
    &:has(> textarea[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed;
      border-color: var(--color-base-200);
      background-color: var(--color-base-200);
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
      }
      &::placeholder {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
    }
    &:has(> textarea[disabled]) > textarea[disabled] {
      cursor: not-allowed;
    }
    &:has(> textarea) {
      padding: calc(0.25rem * 0);
      textarea {
        height: auto;
        min-height: calc(0.25rem * 20);
        width: 100%;
        &:first-child {
          padding-block: calc(0.25rem * 2);
          padding-inline-start: calc(0.25rem * 4);
        }
        &:nth-child(2) {
          padding-block: calc(0.25rem * 2);
        }
        &:last-child {
          padding-block: calc(0.25rem * 2);
          padding-inline-end: calc(0.25rem * 4);
        }
      }
    }
    &:has(> .textarea-floating) {
      padding: calc(0.25rem * 0);
      :where(.textarea-floating:first-child) > textarea {
        padding-block: calc(0.25rem * 2);
        padding-inline-start: calc(0.25rem * 4);
      }
      :where(.textarea-floating:nth-child(2)) > textarea {
        padding-block: calc(0.25rem * 2);
      }
      :where(.textarea-floating:last-child) > textarea {
        padding-block: calc(0.25rem * 2);
        padding-inline-end: calc(0.25rem * 4);
      }
      :where(.textarea-floating:nth-child(2)) .textarea-floating-label, :where(.textarea-floating:last-child) .textarea-floating-label {
        margin-inline-start: calc(0.25rem * 0);
      }
      & * > textarea {
        width: 100%;
        height: 100%;
        min-height: calc(0.25rem * 20);
      }
    }
    &:has(> .textarea-floating) textarea {
      &::placeholder {
        color: transparent;
      }
      &:focus {
        &::placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
      }
    }
  }
  .textarea {
    display: inline-flex;
    min-height: calc(0.25rem * 20);
    width: 100%;
    flex-shrink: 1;
    appearance: none;
    border-radius: var(--radius-field);
    background-color: var(--color-base-100);
    padding-inline: calc(0.25rem * 4);
    padding-block: calc(0.25rem * 2);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-base-content);
    &::placeholder {
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
      }
    }
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
        }
      }
    }
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
    border: var(--border) solid #0000;
    border-color: var(--input-color);
    --input-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-base-content) 40%, #0000);
    }
    :where(textarea) {
      appearance: none;
      background-color: transparent;
      border: none;
      &:focus, &:focus-within {
        --tw-outline-style: none;
        outline-style: none;
      }
    }
    &:focus, &:focus-within {
      --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --input-color: var(--color-primary);
      --tw-shadow-color: var(--input-color);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--input-color) 30%, #0000);
      }
      outline: 1px solid var(--input-color);
      border-color: var(--input-color);
      isolation: isolate;
    }
    &:has(> textarea[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed;
      border-color: var(--color-base-200);
      background-color: var(--color-base-200);
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
      }
      &::placeholder {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
    }
    &:has(> textarea[disabled]) > textarea[disabled] {
      cursor: not-allowed;
    }
    &:has(> textarea) {
      padding: calc(0.25rem * 0);
      textarea {
        height: auto;
        min-height: calc(0.25rem * 20);
        width: 100%;
        &:first-child {
          padding-block: calc(0.25rem * 2);
          padding-inline-start: calc(0.25rem * 4);
        }
        &:nth-child(2) {
          padding-block: calc(0.25rem * 2);
        }
        &:last-child {
          padding-block: calc(0.25rem * 2);
          padding-inline-end: calc(0.25rem * 4);
        }
      }
    }
    &:has(> .textarea-floating) {
      padding: calc(0.25rem * 0);
      :where(.textarea-floating:first-child) > textarea {
        padding-block: calc(0.25rem * 2);
        padding-inline-start: calc(0.25rem * 4);
      }
      :where(.textarea-floating:nth-child(2)) > textarea {
        padding-block: calc(0.25rem * 2);
      }
      :where(.textarea-floating:last-child) > textarea {
        padding-block: calc(0.25rem * 2);
        padding-inline-end: calc(0.25rem * 4);
      }
      :where(.textarea-floating:nth-child(2)) .textarea-floating-label, :where(.textarea-floating:last-child) .textarea-floating-label {
        margin-inline-start: calc(0.25rem * 0);
      }
      & * > textarea {
        width: 100%;
        height: 100%;
        min-height: calc(0.25rem * 20);
      }
    }
    &:has(> .textarea-floating) textarea {
      &::placeholder {
        color: transparent;
      }
      &:focus {
        &::placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
      }
    }
  }
  .btn-active {
    --btn-bg: var(--btn-color, var(--color-neutral));
    @supports (color: color-mix(in lab, red, red)) {
      --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 90%, #000);
    }
    isolation: isolate;
    .btn-soft& {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
      }
    }
    .btn-outline& {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
      }
    }
    .btn-text& {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
      }
    }
    .btn-gradient& {
      --btn-shadow: 0px 4px 6px -1px var(--btn-color, var(--color-neutral)),
    0px 2px 4px -2px var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-shadow: 0px 4px 6px -1px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000),
    0px 2px 4px -2px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000);
      }
      background-position: 99% center;
    }
  }
  .btn-active {
    --btn-bg: var(--btn-color, var(--color-neutral));
    @supports (color: color-mix(in lab, red, red)) {
      --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 90%, #000);
    }
    isolation: isolate;
    .btn-soft& {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
      }
    }
    .btn-outline& {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
      }
    }
    .btn-text& {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
      }
    }
    .btn-gradient& {
      --btn-shadow: 0px 4px 6px -1px var(--btn-color, var(--color-neutral)),
    0px 2px 4px -2px var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-shadow: 0px 4px 6px -1px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000),
    0px 2px 4px -2px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000);
      }
      background-position: 99% center;
    }
  }
  .dropdown-menu {
    z-index: 10;
    margin-top: calc(0.25rem * 2);
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(0.25rem * 1) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(0.25rem * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
    border-radius: var(--radius-box);
    background-color: var(--color-base-100);
    padding: calc(0.25rem * 2);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    text-wrap: nowrap;
    opacity: 0%;
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
    }
    transition-property: opacity,margin;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    transition-duration: 300ms;
    --tw-duration: 300ms;
  }
  .dropdown-menu {
    z-index: 10;
    margin-top: calc(0.25rem * 2);
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(0.25rem * 1) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(0.25rem * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
    border-radius: var(--radius-box);
    background-color: var(--color-base-100);
    padding: calc(0.25rem * 2);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    text-wrap: nowrap;
    opacity: 0%;
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
    }
    transition-property: opacity,margin;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    transition-duration: 300ms;
    --tw-duration: 300ms;
  }
  .z-40 {
    z-index: 40;
  }
  .z-50 {
    z-index: 50;
  }
  .col-span-2 {
    grid-column: span 2 / span 2;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .m-auto {
    margin: auto;
  }
  .filter {
    display: flex;
    flex-wrap: wrap;
    input[type="radio"] {
      width: auto;
    }
    input {
      overflow: hidden;
      opacity: 100%;
      scale: 1;
      transition: margin 0.1s, opacity 0.3s, padding 0.3s, border-width 0.1s;
      &:not(:last-child) {
        margin-inline-end: calc(0.25rem * 1);
      }
      &.filter-reset {
        aspect-ratio: 1 / 1;
        &::after {
          content: "×";
        }
      }
    }
    &:not(:has(input:checked:not(.filter-reset))) {
      .filter-reset, input[type="reset"] {
        scale: 0;
        border-width: 0;
        margin-inline: calc(0.25rem * 0);
        width: calc(0.25rem * 0);
        padding-inline: calc(0.25rem * 0);
        opacity: 0%;
      }
    }
    &:has(input:checked:not(.filter-reset)) {
      input:not(:checked, .filter-reset, input[type="reset"]) {
        scale: 0;
        border-width: 0;
        margin-inline: calc(0.25rem * 0);
        width: calc(0.25rem * 0);
        padding-inline: calc(0.25rem * 0);
        opacity: 0%;
      }
    }
  }
  .filter {
    display: flex;
    flex-wrap: wrap;
    input[type="radio"] {
      width: auto;
    }
    input {
      overflow: hidden;
      opacity: 100%;
      scale: 1;
      transition: margin 0.1s, opacity 0.3s, padding 0.3s, border-width 0.1s;
      &:not(:last-child) {
        margin-inline-end: calc(0.25rem * 1);
      }
      &.filter-reset {
        aspect-ratio: 1 / 1;
        &::after {
          content: "×";
        }
      }
    }
    &:not(:has(input:checked:not(.filter-reset))) {
      .filter-reset, input[type="reset"] {
        scale: 0;
        border-width: 0;
        margin-inline: calc(0.25rem * 0);
        width: calc(0.25rem * 0);
        padding-inline: calc(0.25rem * 0);
        opacity: 0%;
      }
    }
    &:has(input:checked:not(.filter-reset)) {
      input:not(:checked, .filter-reset, input[type="reset"]) {
        scale: 0;
        border-width: 0;
        margin-inline: calc(0.25rem * 0);
        width: calc(0.25rem * 0);
        padding-inline: calc(0.25rem * 0);
        opacity: 0%;
      }
    }
  }
  .modal-dialog {
    margin-inline: auto;
    width: 100%;
    opacity: 0%;
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    transition-duration: 500ms;
    --tw-duration: 500ms;
    @media (width >= 40rem) {
      max-width: calc(0.25rem * 128);
    }
  }
  .modal-dialog {
    margin-inline: auto;
    width: 100%;
    opacity: 0%;
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    transition-duration: 500ms;
    --tw-duration: 500ms;
    @media (width >= 40rem) {
      max-width: calc(0.25rem * 128);
    }
  }
  .mx-auto {
    margin-inline: auto;
  }
  .input-lg {
    padding-inline: calc(0.25rem * 4);
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    --size: calc(var(--size-field, 0.25rem) * 11.5);
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -3);
        margin-inline-end: calc(0.25rem * -3);
      }
    }
  }
  .input-lg {
    padding-inline: calc(0.25rem * 4);
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    --size: calc(var(--size-field, 0.25rem) * 11.5);
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -3);
        margin-inline-end: calc(0.25rem * -3);
      }
    }
  }
  .input-md {
    padding-inline: calc(0.25rem * 3);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --size: calc(var(--size-field, 0.25rem) * 9.5);
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -3);
        margin-inline-end: calc(0.25rem * -3);
      }
    }
  }
  .input-md {
    padding-inline: calc(0.25rem * 3);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --size: calc(var(--size-field, 0.25rem) * 9.5);
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -3);
        margin-inline-end: calc(0.25rem * -3);
      }
    }
  }
  .input-sm {
    padding-inline: calc(0.25rem * 2.5);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --size: calc(var(--size-field, 0.25rem) * 7.5);
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -2);
        margin-inline-end: calc(0.25rem * -3);
      }
    }
  }
  .input-sm {
    padding-inline: calc(0.25rem * 2.5);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --size: calc(var(--size-field, 0.25rem) * 7.5);
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -2);
        margin-inline-end: calc(0.25rem * -3);
      }
    }
  }
  .input-xl {
    padding-inline: calc(0.25rem * 4.5);
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    --size: calc(var(--size-field, 0.25rem) * 14);
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -4);
        margin-inline-end: calc(0.25rem * -3);
      }
    }
  }
  .input-xl {
    padding-inline: calc(0.25rem * 4.5);
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    --size: calc(var(--size-field, 0.25rem) * 14);
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -4);
        margin-inline-end: calc(0.25rem * -3);
      }
    }
  }
  .my-auto {
    margin-block: auto;
  }
  .\!ms-auto {
    margin-inline-start: auto !important;
  }
  .ms-2 {
    margin-inline-start: calc(var(--spacing) * 2);
  }
  .input {
    &::file-selector-button {
      margin-inline-end: calc(0.25rem * 4);
      display: inline-flex;
      height: 100%;
      flex-shrink: 0;
      cursor: pointer;
      flex-wrap: wrap;
      align-items: center;
      justify-content: center;
      border-style: var(--tw-border-style);
      border-width: 0px;
      background-color: var(--color-primary);
      padding-inline: calc(0.25rem * 4);
      text-align: center;
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
      --tw-leading: 1;
      --tw-font-weight: var(--font-weight-semibold);
      font-weight: var(--font-weight-semibold);
      color: var(--color-primary-content);
      text-transform: uppercase;
      text-decoration-line: none;
      webkit-user-select: none;
      user-select: none;
      --input-color: var(--color-primary);
      &.input-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
      }
      &.input-md {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
      }
      &.input-lg {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
      }
      &.input-xl {
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height));
      }
    }
    &[type="file"] {
      overflow: hidden;
      padding-inline-start: calc(0.25rem * 0);
    }
    .input-floating &::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-inline-end: var(--border) solid color-mix(in oklab, var(--color-base-content) 40%, #0000);
      }
      outline: none;
    }
  }
  .input {
    &::file-selector-button {
      margin-inline-end: calc(0.25rem * 4);
      display: inline-flex;
      height: 100%;
      flex-shrink: 0;
      cursor: pointer;
      flex-wrap: wrap;
      align-items: center;
      justify-content: center;
      border-style: var(--tw-border-style);
      border-width: 0px;
      background-color: var(--color-primary);
      padding-inline: calc(0.25rem * 4);
      text-align: center;
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
      --tw-leading: 1;
      --tw-font-weight: var(--font-weight-semibold);
      font-weight: var(--font-weight-semibold);
      color: var(--color-primary-content);
      text-transform: uppercase;
      text-decoration-line: none;
      webkit-user-select: none;
      user-select: none;
      --input-color: var(--color-primary);
      &.input-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
      }
      &.input-md {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
      }
      &.input-lg {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
      }
      &.input-xl {
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height));
      }
    }
    &[type="file"] {
      overflow: hidden;
      padding-inline-start: calc(0.25rem * 0);
    }
    .input-floating &::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-inline-end: var(--border) solid color-mix(in oklab, var(--color-base-content) 40%, #0000);
      }
      outline: none;
    }
  }
  .\!me-1\.5 {
    margin-inline-end: calc(var(--spacing) * 1.5) !important;
  }
  .me-3 {
    margin-inline-end: calc(var(--spacing) * 3);
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-16 {
    margin-top: calc(var(--spacing) * 16);
  }
  .mt-24 {
    margin-top: calc(var(--spacing) * 24);
  }
  .mt-60 {
    margin-top: calc(var(--spacing) * 60);
  }
  .mb-0 {
    margin-bottom: calc(var(--spacing) * 0);
  }
  .mb-0\.5 {
    margin-bottom: calc(var(--spacing) * 0.5);
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .ml-16 {
    margin-left: calc(var(--spacing) * 16);
  }
  .status {
    display: inline-block;
    aspect-ratio: 1 / 1;
    width: calc(0.25rem * 2.5);
    height: calc(0.25rem * 2.5);
    border-radius: calc(infinity * 1px);
    background-color: var(--color-neutral);
    background-position: center;
    background-repeat: no-repeat;
    vertical-align: middle;
    color: var(--color-neutral);
    background-image: radial-gradient(circle at 35% 30%, oklch(1 0 0 / calc(var(--depth) * 0.5)), #0000);
    box-shadow: 0 2px 3px -1px currentColor;
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: 0 2px 3px -1px color-mix(in oklab, currentColor calc(var(--depth) * 100%), #0000);
    }
  }
  .status {
    display: inline-block;
    aspect-ratio: 1 / 1;
    width: calc(0.25rem * 2.5);
    height: calc(0.25rem * 2.5);
    border-radius: calc(infinity * 1px);
    background-color: var(--color-neutral);
    background-position: center;
    background-repeat: no-repeat;
    vertical-align: middle;
    color: var(--color-neutral);
    background-image: radial-gradient(circle at 35% 30%, oklch(1 0 0 / calc(var(--depth) * 0.5)), #0000);
    box-shadow: 0 2px 3px -1px currentColor;
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: 0 2px 3px -1px color-mix(in oklab, currentColor calc(var(--depth) * 100%), #0000);
    }
  }
  .badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 1.5);
    border-radius: var(--radius-selector);
    text-align: center;
    vertical-align: middle;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    border: var(--border) solid var(--badge-border);
    padding-inline: calc(0.25rem * 3 - var(--border));
    width: fit-content;
    color: var(--badge-fg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    background-color: var(--badge-bg);
    --badge-border: var(--badge-color, var(--color-neutral));
    --badge-bg: var(--badge-color, var(--color-neutral));
    --badge-fg: var(--color-neutral-content);
    --size: calc(var(--size-selector, 0.25rem) * 6);
    height: var(--size);
    &.badge-outline {
      --badge-fg: var(--badge-color, var(--color-neutral));
      --badge-bg: transparent;
      background-image: none;
    }
    &.badge-soft {
      --badge-border: none;
      --badge-fg: var(--badge-color, var(--color-neutral));
      --badge-bg: var(--badge-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --badge-bg: color-mix(in oklab, var(--badge-color, var(--color-neutral)) 10%, var(--color-base-100));
      }
      background-image: none;
    }
  }
  .badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 1.5);
    border-radius: var(--radius-selector);
    text-align: center;
    vertical-align: middle;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    border: var(--border) solid var(--badge-border);
    padding-inline: calc(0.25rem * 3 - var(--border));
    width: fit-content;
    color: var(--badge-fg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    background-color: var(--badge-bg);
    --badge-border: var(--badge-color, var(--color-neutral));
    --badge-bg: var(--badge-color, var(--color-neutral));
    --badge-fg: var(--color-neutral-content);
    --size: calc(var(--size-selector, 0.25rem) * 6);
    height: var(--size);
    &.badge-outline {
      --badge-fg: var(--badge-color, var(--color-neutral));
      --badge-bg: transparent;
      background-image: none;
    }
    &.badge-soft {
      --badge-border: none;
      --badge-fg: var(--badge-color, var(--color-neutral));
      --badge-bg: var(--badge-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --badge-bg: color-mix(in oklab, var(--badge-color, var(--color-neutral)) 10%, var(--color-base-100));
      }
      background-image: none;
    }
  }
  .progress {
    display: flex;
    height: calc(0.25rem * 1.5);
    width: 100%;
    overflow: hidden;
    border-radius: var(--radius-box);
    background-color: var(--color-base-200);
  }
  .progress {
    display: flex;
    height: calc(0.25rem * 1.5);
    width: 100%;
    overflow: hidden;
    border-radius: var(--radius-box);
    background-color: var(--color-base-200);
  }
  .icon-\[bxs--key\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M3.433 17.325L3.079 19.8a1 1 0 0 0 1.131 1.131l2.475-.354C7.06 20.524 8 18 8 18s.472.405.665.466c.412.13.813-.274.948-.684L10 16.01s.577.292.786.335c.266.055.524-.109.707-.293a1 1 0 0 0 .241-.391L12 14.01s.675.187.906.214c.263.03.519-.104.707-.293l1.138-1.137a5.5 5.5 0 0 0 5.581-1.338a5.507 5.507 0 0 0 0-7.778a5.507 5.507 0 0 0-7.778 0a5.5 5.5 0 0 0-1.338 5.581l-7.501 7.5a1 1 0 0 0-.282.566M18.504 5.506a2.92 2.92 0 0 1 0 4.122l-4.122-4.122a2.92 2.92 0 0 1 4.122 0'/%3E%3C/svg%3E");
  }
  .icon-\[bxs--user-check\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M8 12.052c1.995 0 3.5-1.505 3.5-3.5s-1.505-3.5-3.5-3.5s-3.5 1.505-3.5 3.5s1.505 3.5 3.5 3.5M9 13H7c-2.757 0-5 2.243-5 5v1h12v-1c0-2.757-2.243-5-5-5m11.294-4.708l-4.3 4.292l-1.292-1.292l-1.414 1.414l2.706 2.704l5.712-5.702z'/%3E%3C/svg%3E");
  }
  .icon-\[bxs--user-detail\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M15 11h7v2h-7zm1 4h6v2h-6zm-2-8h8v2h-8zM4 19h10v-1c0-2.757-2.243-5-5-5H7c-2.757 0-5 2.243-5 5v1zm4-7c1.995 0 3.5-1.505 3.5-3.5S9.995 5 8 5S4.5 6.505 4.5 8.5S6.005 12 8 12'/%3E%3C/svg%3E");
  }
  .icon-\[clarity--users-solid\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 36 36' width='36' height='36'%3E%3Cpath fill='black' d='M12 16.14h-.87a8.67 8.67 0 0 0-6.43 2.52l-.24.28v8.28h4.08v-4.7l.55-.62l.25-.29a11 11 0 0 1 4.71-2.86A6.6 6.6 0 0 1 12 16.14' class='clr-i-solid clr-i-solid-path-1'/%3E%3Cpath fill='black' d='M31.34 18.63a8.67 8.67 0 0 0-6.43-2.52a11 11 0 0 0-1.09.06a6.6 6.6 0 0 1-2 2.45a10.9 10.9 0 0 1 5 3l.25.28l.54.62v4.71h3.94v-8.32Z' class='clr-i-solid clr-i-solid-path-2'/%3E%3Cpath fill='black' d='M11.1 14.19h.31a6.45 6.45 0 0 1 3.11-6.29a4.09 4.09 0 1 0-3.42 6.33Z' class='clr-i-solid clr-i-solid-path-3'/%3E%3Cpath fill='black' d='M24.43 13.44a7 7 0 0 1 0 .69a4 4 0 0 0 .58.05h.19A4.09 4.09 0 1 0 21.47 8a6.53 6.53 0 0 1 2.96 5.44' class='clr-i-solid clr-i-solid-path-4'/%3E%3Ccircle cx='17.87' cy='13.45' r='4.47' fill='black' class='clr-i-solid clr-i-solid-path-5'/%3E%3Cpath fill='black' d='M18.11 20.3A9.7 9.7 0 0 0 11 23l-.25.28v6.33a1.57 1.57 0 0 0 1.6 1.54h11.49a1.57 1.57 0 0 0 1.6-1.54V23.3l-.24-.3a9.58 9.58 0 0 0-7.09-2.7' class='clr-i-solid clr-i-solid-path-6'/%3E%3Cpath fill='none' d='M0 0h36v36H0z'/%3E%3C/svg%3E");
  }
  .icon-\[cuida--calendar-outline\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg class='calendar-outline'%3E%3Cg fill='black' class='Vector'%3E%3Cpath fill-rule='evenodd' d='M6 4h12a4 4 0 0 1 4 4v10a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4V8a4 4 0 0 1 4-4m0 2a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2z' clip-rule='evenodd'/%3E%3Cpath fill-rule='evenodd' d='M3 10a1 1 0 0 1 1-1h16a1 1 0 1 1 0 2H4a1 1 0 0 1-1-1m5-8a1 1 0 0 1 1 1v4a1 1 0 0 1-2 0V3a1 1 0 0 1 1-1m8 0a1 1 0 0 1 1 1v4a1 1 0 1 1-2 0V3a1 1 0 0 1 1-1' clip-rule='evenodd'/%3E%3Cpath d='M8 13a1 1 0 1 1-2 0a1 1 0 0 1 2 0m0 4a1 1 0 1 1-2 0a1 1 0 0 1 2 0m5-4a1 1 0 1 1-2 0a1 1 0 0 1 2 0m0 4a1 1 0 1 1-2 0a1 1 0 0 1 2 0m5-4a1 1 0 1 1-2 0a1 1 0 0 1 2 0m0 4a1 1 0 1 1-2 0a1 1 0 0 1 2 0'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
  }
  .icon-\[entypo--users\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' width='20' height='20'%3E%3Cpath fill='black' d='M15.989 19.129c0-2.246-2.187-3.389-4.317-4.307c-2.123-.914-2.801-1.684-2.801-3.334c0-.989.648-.667.932-2.481c.12-.752.692-.012.802-1.729c0-.684-.313-.854-.313-.854s.159-1.013.221-1.793c.064-.817-.398-2.56-2.301-3.095c-.332-.341-.557-.882.467-1.424c-2.24-.104-2.761 1.068-3.954 1.93c-1.015.756-1.289 1.953-1.24 2.59c.065.78.223 1.793.223 1.793s-.314.17-.314.854c.11 1.718.684.977.803 1.729c.284 1.814.933 1.492.933 2.481c0 1.65-.212 2.21-2.336 3.124C.663 15.53 0 17 .011 19.129C.014 19.766 0 20 0 20h16s-.011-.234-.011-.871m2.539-5.764c-1.135-.457-1.605-1.002-1.605-2.066c0-.641.418-.432.602-1.603c.077-.484.447-.008.518-1.115c0-.441-.202-.551-.202-.551s.103-.656.143-1.159c.05-.627-.364-2.247-2.268-2.247s-2.318 1.62-2.269 2.247c.042.502.144 1.159.144 1.159s-.202.109-.202.551c.071 1.107.441.631.518 1.115c.184 1.172.602.963.602 1.603c0 1.064-.438 1.562-1.809 2.152c-.069.029-.12.068-.183.102c1.64.712 4.226 1.941 4.838 4.447H20v-2.318c0-1-.273-1.834-1.472-2.317'/%3E%3C/svg%3E");
  }
  .icon-\[fa--group\] {
    display: inline-block;
    width: 1.08em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1920 1792' width='1920' height='1792'%3E%3Cpath fill='black' d='M593 896q-162 5-265 128H194q-82 0-138-40.5T0 865q0-353 124-353q6 0 43.5 21t97.5 42.5T384 597q67 0 133-23q-5 37-5 66q0 139 81 256m1071 637q0 120-73 189.5t-194 69.5H523q-121 0-194-69.5T256 1533q0-53 3.5-103.5t14-109T300 1212t43-97.5t62-81t85.5-53.5T602 960q10 0 43 21.5t73 48t107 48t135 21.5t135-21.5t107-48t73-48t43-21.5q61 0 111.5 20t85.5 53.5t62 81t43 97.5t26.5 108.5t14 109t3.5 103.5M640 256q0 106-75 181t-181 75t-181-75t-75-181t75-181T384 0t181 75t75 181m704 384q0 159-112.5 271.5T960 1024T688.5 911.5T576 640t112.5-271.5T960 256t271.5 112.5T1344 640m576 225q0 78-56 118.5t-138 40.5h-134q-103-123-265-128q81-117 81-256q0-29-5-66q66 23 133 23q59 0 119-21.5t97.5-42.5t43.5-21q124 0 124 353m-128-609q0 106-75 181t-181 75t-181-75t-75-181t75-181t181-75t181 75t75 181'/%3E%3C/svg%3E");
  }
  .icon-\[fa-solid--user-cog\] {
    display: inline-block;
    width: 1.25em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 640 512' width='640' height='512'%3E%3Cpath fill='black' d='M610.5 373.3c2.6-14.1 2.6-28.5 0-42.6l25.8-14.9c3-1.7 4.3-5.2 3.3-8.5c-6.7-21.6-18.2-41.2-33.2-57.4c-2.3-2.5-6-3.1-9-1.4l-25.8 14.9c-10.9-9.3-23.4-16.5-36.9-21.3v-29.8c0-3.4-2.4-6.4-5.7-7.1c-22.3-5-45-4.8-66.2 0c-3.3.7-5.7 3.7-5.7 7.1v29.8c-13.5 4.8-26 12-36.9 21.3l-25.8-14.9c-2.9-1.7-6.7-1.1-9 1.4c-15 16.2-26.5 35.8-33.2 57.4c-1 3.3.4 6.8 3.3 8.5l25.8 14.9c-2.6 14.1-2.6 28.5 0 42.6l-25.8 14.9c-3 1.7-4.3 5.2-3.3 8.5c6.7 21.6 18.2 41.1 33.2 57.4c2.3 2.5 6 3.1 9 1.4l25.8-14.9c10.9 9.3 23.4 16.5 36.9 21.3v29.8c0 3.4 2.4 6.4 5.7 7.1c22.3 5 45 4.8 66.2 0c3.3-.7 5.7-3.7 5.7-7.1v-29.8c13.5-4.8 26-12 36.9-21.3l25.8 14.9c2.9 1.7 6.7 1.1 9-1.4c15-16.2 26.5-35.8 33.2-57.4c1-3.3-.4-6.8-3.3-8.5zM496 400.5c-26.8 0-48.5-21.8-48.5-48.5s21.8-48.5 48.5-48.5s48.5 21.8 48.5 48.5s-21.7 48.5-48.5 48.5M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0S96 57.3 96 128s57.3 128 128 128m201.2 226.5c-2.3-1.2-4.6-2.6-6.8-3.9l-7.9 4.6c-6 3.4-12.8 5.3-19.6 5.3c-10.9 0-21.4-4.6-28.9-12.6c-18.3-19.8-32.3-43.9-40.2-69.6c-5.5-17.7 1.9-36.4 17.9-45.7l7.9-4.6q-.15-3.9 0-7.8l-7.9-4.6c-16-9.2-23.4-28-17.9-45.7c.9-2.9 2.2-5.8 3.2-8.7c-3.8-.3-7.5-1.2-11.4-1.2h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c10.1 0 19.5-3.2 27.2-8.5c-1.2-3.8-2-7.7-2-11.8z'/%3E%3C/svg%3E");
  }
  .icon-\[fa-solid--users\] {
    display: inline-block;
    width: 1.25em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 640 512' width='640' height='512'%3E%3Cpath fill='black' d='M96 224c35.3 0 64-28.7 64-64s-28.7-64-64-64s-64 28.7-64 64s28.7 64 64 64m448 0c35.3 0 64-28.7 64-64s-28.7-64-64-64s-64 28.7-64 64s28.7 64 64 64m32 32h-64c-17.6 0-33.5 7.1-45.1 18.6c40.3 22.1 68.9 62 75.1 109.4h66c17.7 0 32-14.3 32-32v-32c0-35.3-28.7-64-64-64m-256 0c61.9 0 112-50.1 112-112S381.9 32 320 32S208 82.1 208 144s50.1 112 112 112m76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C179.6 288 128 339.6 128 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2m-223.7-13.4C161.5 263.1 145.6 256 128 256H64c-35.3 0-64 28.7-64 64v32c0 17.7 14.3 32 32 32h65.9c6.3-47.4 34.9-87.3 75.2-109.4'/%3E%3C/svg%3E");
  }
  .icon-\[fa6-solid--hands-holding-child\] {
    display: inline-block;
    width: 1.25em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 640 512' width='640' height='512'%3E%3Cpath fill='black' d='M320 0a40 40 0 1 1 0 80a40 40 0 1 1 0-80m44.7 164.3l11.1 88.7c1.6 13.2-7.7 25.1-20.8 26.8s-25.1-7.7-26.8-20.8l-4.4-35h-7.6l-4.4 35c-1.6 13.2-13.6 22.5-26.8 20.8s-22.5-13.6-20.8-26.8l11.1-88.8l-19.8 16.8c-10.1 8.6-25.3 7.3-33.8-2.8s-7.3-25.3 2.8-33.8l27.9-23.6c18.9-16 42.9-24.8 67.6-24.8s48.7 8.8 67.6 24.7l27.9 23.6c10.1 8.6 11.4 23.7 2.8 33.8s-23.7 11.4-33.8 2.8l-19.8-16.7zM40 64c22.1 0 40 17.9 40 40v160.2c0 17 6.7 33.3 18.7 45.3l51.1 51.1c8.3 8.3 21.3 9.6 31 3.1c12.9-8.6 14.7-26.9 3.7-37.8l-15.2-15.2l-32-32c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l32 32l15.2 15.2l25.3 25.3c21 21 32.8 49.5 32.8 79.2V464c0 26.5-21.5 48-48 48h-66.7c-17 0-33.3-6.7-45.3-18.7l-99.8-99.9C10.1 375.4 0 351 0 325.5V104c0-22.1 17.9-40 40-40m560 0c22.1 0 40 17.9 40 40v221.5c0 25.5-10.1 49.9-28.1 67.9L512 493.3c-12 12-28.3 18.7-45.3 18.7H400c-26.5 0-48-21.5-48-48v-78.9c0-29.7 11.8-58.2 32.8-79.2l25.3-25.3l15.2-15.2l32-32c12.5-12.5 32.8-12.5 45.3 0s12.5 32.8 0 45.3l-32 32l-15.2 15.2c-11 11-9.2 29.2 3.7 37.8c9.7 6.5 22.7 5.2 31-3.1l51.1-51.1c12-12 18.7-28.3 18.7-45.3V104c0-22.1 17.9-40 40-40z'/%3E%3C/svg%3E");
  }
  .icon-\[fluent--print-32-regular\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' width='32' height='32'%3E%3Cpath fill='black' d='M24 6.5V8h1a5 5 0 0 1 5 5v7.5a3.5 3.5 0 0 1-3.5 3.5H25v1.5a3.5 3.5 0 0 1-3.5 3.5h-11A3.5 3.5 0 0 1 7 25.5V24H5.5A3.5 3.5 0 0 1 2 20.5V13a5 5 0 0 1 5-5h1V6.5A3.5 3.5 0 0 1 11.5 3h9A3.5 3.5 0 0 1 24 6.5m-14 0V8h12V6.5A1.5 1.5 0 0 0 20.5 5h-9A1.5 1.5 0 0 0 10 6.5m-1 19a1.5 1.5 0 0 0 1.5 1.5h11a1.5 1.5 0 0 0 1.5-1.5v-6a1.5 1.5 0 0 0-1.5-1.5h-11A1.5 1.5 0 0 0 9 19.5zM25 22h1.5a1.5 1.5 0 0 0 1.5-1.5V13a3 3 0 0 0-3-3H7a3 3 0 0 0-3 3v7.5A1.5 1.5 0 0 0 5.5 22H7v-2.5a3.5 3.5 0 0 1 3.5-3.5h11a3.5 3.5 0 0 1 3.5 3.5z'/%3E%3C/svg%3E");
  }
  .icon-\[fluent-mdl2--reminder-group\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2048 2048' width='2048' height='2048'%3E%3Cpath fill='black' d='m2029 1453l-557 558l-269-270l90-90l179 178l467-466zm-1293 9q66 33 119 81t90 107t58 128t21 142H896q0-79-30-149t-82-122t-123-83t-149-30q-80 0-149 30t-122 82t-83 123t-30 149H0q0-73 20-142t58-128t91-107t119-81q-75-54-117-135t-43-175q0-79 30-149t82-122t122-83t150-30q94 0 175 42t135 118q38-76 98-136t136-98q-75-54-117-135t-43-175q0-79 30-149t82-122t122-83t150-30q79 0 149 30t122 82t83 123t30 149q0 94-42 175t-118 135q66 33 119 81t90 107t58 128t21 142h-128q0-79-30-149t-82-122t-123-83t-149-30q-80 0-149 30t-122 82t-83 123t-30 149q0 94-42 175t-118 135m288-1078q0 53 20 99t55 82t81 55t100 20q53 0 99-20t82-55t55-81t20-100q0-53-20-99t-55-82t-81-55t-100-20q-53 0-99 20t-82 55t-55 81t-20 100m-768 768q0 53 20 99t55 82t81 55t100 20q53 0 99-20t82-55t55-81t20-100q0-53-20-99t-55-82t-81-55t-100-20q-53 0-99 20t-82 55t-55 81t-20 100'/%3E%3C/svg%3E");
  }
  .icon-\[healthicons--i-groups-perspective-crowd\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48' width='48' height='48'%3E%3Cg fill='black'%3E%3Cpath d='M18 16.5a4.5 4.5 0 0 1-4.5 4.5A4.5 4.5 0 0 1 9 16.5c0-2.486 2.014-4.5 4.5-4.5s4.5 2.014 4.5 4.5M4 28.333C4 24.787 10.33 23 13.5 23s9.5 1.787 9.5 5.333V36H4zM39 16.5a4.5 4.5 0 0 1-4.5 4.5a4.5 4.5 0 0 1-4.5-4.5c0-2.486 2.014-4.5 4.5-4.5s4.5 2.014 4.5 4.5M27 15a3 3 0 1 1-6 0a3 3 0 1 1 6 0m-2 13.333C25 24.787 31.33 23 34.5 23s9.5 1.787 9.5 5.333V36H25z'/%3E%3Cpath fill-rule='evenodd' d='M28.75 22.185q-.4.147-.788.313c-1.17.5-2.353 1.176-3.272 2.08c-.246.243-.48.508-.69.797a6.5 6.5 0 0 0-.69-.797c-.919-.904-2.101-1.58-3.273-2.08a17 17 0 0 0-.788-.313C20.772 21.396 22.73 21 24 21s3.228.396 4.75 1.185' clip-rule='evenodd'/%3E%3C/g%3E%3C/svg%3E");
  }
  .icon-\[heroicons--computer-desktop\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M9 17.25v1.007a3 3 0 0 1-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0 1 15 18.257V17.25m6-12V15a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 15V5.25m18 0A2.25 2.25 0 0 0 18.75 3H5.25A2.25 2.25 0 0 0 3 5.25m18 0V12a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 12V5.25'/%3E%3C/svg%3E");
  }
  .icon-\[heroicons--user-group-20-solid\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' width='20' height='20'%3E%3Cpath fill='black' d='M10 9a3 3 0 1 0 0-6a3 3 0 0 0 0 6M6 8a2 2 0 1 1-4 0a2 2 0 0 1 4 0m-4.51 7.326a.78.78 0 0 1-.358-.442a3 3 0 0 1 4.308-3.516a6.48 6.48 0 0 0-1.905 3.959q-.034.335.025.654a5 5 0 0 1-2.07-.655m14.95.654a5 5 0 0 0 2.07-.654a.78.78 0 0 0 .357-.442a3 3 0 0 0-4.308-3.517a6.48 6.48 0 0 1 1.907 3.96a2.3 2.3 0 0 1-.026.654M18 8a2 2 0 1 1-4 0a2 2 0 0 1 4 0M5.304 16.19a.84.84 0 0 1-.277-.71a5 5 0 0 1 9.947 0a.84.84 0 0 1-.277.71A6.98 6.98 0 0 1 10 18a6.97 6.97 0 0 1-4.696-1.81'/%3E%3C/svg%3E");
  }
  .icon-\[ic--baseline-groups-2\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M10.27 12h3.46a1.5 1.5 0 0 0 1.48-1.75l-.3-1.79a2.951 2.951 0 0 0-5.82.01l-.3 1.79c-.15.91.55 1.74 1.48 1.74m-8.61-.89c-.13.26-.18.57-.1.88c.16.69.76 1.03 1.53 1h1.95c.83 0 1.51-.58 1.51-1.29c0-.14-.03-.27-.07-.4c-.01-.03-.01-.05.01-.08c.09-.16.14-.34.14-.53c0-.31-.14-.6-.36-.82c-.03-.03-.03-.06-.02-.1c.07-.2.07-.43.01-.65a1.12 1.12 0 0 0-.99-.74a.1.1 0 0 1-.07-.03C5.03 8.14 4.72 8 4.37 8c-.3 0-.57.1-.75.26c-.03.03-.06.03-.09.02a1.24 1.24 0 0 0-1.7 1.03q0 .03-.03.06c-.29.26-.46.65-.41 1.05c.03.22.12.43.25.6c.03.02.03.06.02.09m14.58 2.54c-1.17-.52-2.61-.9-4.24-.9s-3.07.39-4.24.9A2.99 2.99 0 0 0 6 16.39V18h12v-1.61c0-1.18-.68-2.26-1.76-2.74m-15.02.93A2.01 2.01 0 0 0 0 16.43V18h4.5v-1.61c0-.83.23-1.61.63-2.29c-.37-.06-.74-.1-1.13-.1c-.99 0-1.93.21-2.78.58m21.56 0A6.95 6.95 0 0 0 20 14c-.39 0-.76.04-1.13.1c.4.68.63 1.46.63 2.29V18H24v-1.57c0-.81-.48-1.53-1.22-1.85M22 11v-.5c0-1.1-.9-2-2-2h-2c-.42 0-.65.48-.39.81l.7.63c-.19.31-.31.67-.31 1.06c0 1.1.9 2 2 2s2-.9 2-2'/%3E%3C/svg%3E");
  }
  .icon-\[icon-park-solid--women\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48' width='48' height='48'%3E%3Cpath fill='black' stroke='black' stroke-linejoin='round' stroke-width='4' d='M19.225 6.37c-3.183 0-8.063 1.837-6.366 13.213q.04.258.095.557c.31 1.711.788 4.36-2.254 6.544c2.069 1.698 5.016 3.395 8.597 4.13a28 28 0 0 1-.532 2.414c-.291 1.068-.901 1.825-1.991 2.148c-.96.284-1.966.514-2.996.75q-.398.09-.8.184c-1.285.299-2.595.63-3.756 1.098c-1.164.47-2.246 1.103-3.028 2.047c-.796.963-1.222 2.177-1.193 3.695c.01.472.414.85.91.85h36.178c.496 0 .9-.378.91-.85c.029-1.518-.396-2.732-1.193-3.695c-.781-.944-1.864-1.578-3.027-2.047c-1.162-.469-2.472-.8-3.758-1.099l-.798-.183c-1.031-.236-2.037-.466-2.997-.75c-1.09-.323-1.7-1.08-1.991-2.148a27 27 0 0 1-.606-2.88c2.738-.824 5.648-2.305 8.671-4.67l-.014-.014c-1.419-1.358-4.079-3.904-4.268-9.948c0-8.322-5.306-15.637-13.793-9.347Z'/%3E%3C/svg%3E");
  }
  .icon-\[mage--user-fill\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M20.37 21.25a.75.75 0 0 1-.75.75H4.38a.75.75 0 0 1-.75-.75c0-4.1 4.5-7.28 8.37-7.28s8.37 3.18 8.37 7.28M17.1 7.11A5.1 5.1 0 1 1 12 2a5.11 5.11 0 0 1 5.1 5.11'/%3E%3C/svg%3E");
  }
  .icon-\[material-symbols--group\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M1 20v-2.8q0-.85.438-1.562T2.6 14.55q1.55-.775 3.15-1.162T9 13t3.25.388t3.15 1.162q.725.375 1.163 1.088T17 17.2V20zm18 0v-3q0-1.1-.612-2.113T16.65 13.15q1.275.15 2.4.513t2.1.887q.9.5 1.375 1.112T23 17v3zM9 12q-1.65 0-2.825-1.175T5 8t1.175-2.825T9 4t2.825 1.175T13 8t-1.175 2.825T9 12m10-4q0 1.65-1.175 2.825T15 12q-.275 0-.7-.062t-.7-.138q.675-.8 1.038-1.775T15 8t-.362-2.025T13.6 4.2q.35-.125.7-.163T15 4q1.65 0 2.825 1.175T19 8'/%3E%3C/svg%3E");
  }
  .icon-\[material-symbols--star-rounded\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='m12 17.275l-4.15 2.5q-.275.175-.575.15t-.525-.2t-.35-.437t-.05-.588l1.1-4.725L3.775 10.8q-.25-.225-.312-.513t.037-.562t.3-.45t.55-.225l4.85-.425l1.875-4.45q.125-.3.388-.45t.537-.15t.537.15t.388.45l1.875 4.45l4.85.425q.35.05.55.225t.3.45t.038.563t-.313.512l-3.675 3.175l1.1 4.725q.075.325-.05.588t-.35.437t-.525.2t-.575-.15z'/%3E%3C/svg%3E");
  }
  .icon-\[material-symbols-light--exit-to-app\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M5.616 20q-.691 0-1.153-.462T4 18.384V15.27h1v3.115q0 .231.192.424t.423.192h12.77q.23 0 .423-.192t.192-.424V5.616q0-.231-.192-.424T18.384 5H5.616q-.231 0-.424.192T5 5.616V8.73H4V5.616q0-.691.463-1.153T5.616 4h12.769q.69 0 1.153.463T20 5.616v12.769q0 .69-.462 1.153T18.384 20zm5.23-4.077l-.707-.72l2.703-2.703H4v-1h8.842L10.14 8.796l.707-.719L14.77 12z'/%3E%3C/svg%3E");
  }
  .icon-\[mdi--format-list-group-add\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M17 14v3h-3v2h3v3h2v-3h3v-2h-3v-3m1-3v1.3c-.6-.2-1.3-.3-2-.3c-1.2 0-2.4.4-3.3 1H7v-2zm-7.9 6H7v-2h5.8c-.3.6-.6 1.3-.7 2M7 7h13v2H7zM5 19h2v2H3V3h4v2H5z'/%3E%3C/svg%3E");
  }
  .icon-\[mdi--user-star\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M15 14c-2.67 0-8 1.33-8 4v2h16v-2c0-2.67-5.33-4-8-4m0-2a4 4 0 0 0 4-4a4 4 0 0 0-4-4a4 4 0 0 0-4 4a4 4 0 0 0 4 4M5 13.28l2.45 1.49l-.65-2.81L9 10.08l-2.89-.25L5 7.19L3.87 9.83L1 10.08l2.18 1.88l-.68 2.81z'/%3E%3C/svg%3E");
  }
  .icon-\[mingcute--user-add-line\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cpath d='m12.593 23.258l-.011.002l-.071.035l-.02.004l-.014-.004l-.071-.035q-.016-.005-.024.005l-.004.01l-.017.428l.005.02l.01.013l.104.074l.015.004l.012-.004l.104-.074l.012-.016l.004-.017l-.017-.427q-.004-.016-.017-.018m.265-.113l-.013.002l-.185.093l-.01.01l-.003.011l.018.43l.005.012l.008.007l.201.093q.019.005.029-.008l.004-.014l-.034-.614q-.005-.018-.02-.022m-.715.002a.02.02 0 0 0-.027.006l-.006.014l-.034.614q.001.018.017.024l.015-.002l.201-.093l.01-.008l.004-.011l.017-.43l-.003-.012l-.01-.01z'/%3E%3Cpath fill='black' d='M16 14a5 5 0 0 1 5 5v2a1 1 0 1 1-2 0v-2a3 3 0 0 0-3-3H8a3 3 0 0 0-3 3v2a1 1 0 1 1-2 0v-2a5 5 0 0 1 5-5zm4-6a1 1 0 0 1 1 1v1h1a1 1 0 1 1 0 2h-1v1a1 1 0 1 1-2 0v-1h-1a1 1 0 1 1 0-2h1V9a1 1 0 0 1 1-1m-8-6a5 5 0 1 1 0 10a5 5 0 0 1 0-10m0 2a3 3 0 1 0 0 6a3 3 0 0 0 0-6'/%3E%3C/g%3E%3C/svg%3E");
  }
  .icon-\[mynaui--users-solid\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M9 13c-1.915 0-3.603.965-4.792 2.245c-1.182 1.273-1.958 2.948-1.958 4.505c0 .414.336.75.75.75h12a.75.75 0 0 0 .75-.75c0-1.558-.775-3.232-1.958-4.505C12.602 13.965 10.915 13 9 13m8.204.301a.75.75 0 0 0-.408 1.444c.933.264 1.801 1.019 2.45 2.014c.647.995 1.004 2.122 1.004 2.99a.75.75 0 0 0 1.5 0c0-1.22-.478-2.627-1.248-3.808c-.769-1.181-1.9-2.244-3.298-2.64M9 3.5A3.75 3.75 0 1 0 9 11a3.75 3.75 0 0 0 0-7.5m6 0a.75.75 0 0 0-.75.75v6c0 .414.336.75.75.75a3.75 3.75 0 1 0 0-7.5'/%3E%3C/svg%3E");
  }
  .icon-\[oui--calendar\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='16' height='16'%3E%3Cpath fill='black' fill-rule='evenodd' d='M14 4v-.994C14 2.45 13.55 2 12.994 2H11v1h-1V2H6v1H5V2H3.006C2.45 2 2 2.45 2 3.006v9.988C2 13.55 2.45 14 3.006 14h9.988C13.55 14 14 13.55 14 12.994V5H2V4zm-3-3h1.994C14.102 1 15 1.897 15 3.006v9.988A2.005 2.005 0 0 1 12.994 15H3.006A2.005 2.005 0 0 1 1 12.994V3.006C1 1.898 1.897 1 3.006 1H5V0h1v1h4V0h1zM4 7h2v1H4zm3 0h2v1H7zm3 0h2v1h-2zM4 9h2v1H4zm3 0h2v1H7zm3 0h2v1h-2zm-6 2h2v1H4zm3 0h2v1H7zm3 0h2v1h-2z'/%3E%3C/svg%3E");
  }
  .icon-\[raphael--user\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' width='32' height='32'%3E%3Cpath fill='black' d='M20.77 12.364s.85-3.51 0-4.7c-.85-1.188-1.188-1.98-3.057-2.547s-1.188-.454-2.547-.396s-2.492.793-2.492 1.19c0 0-.85.056-1.188.396c-.34.34-.906 1.924-.906 2.32s.283 3.06.566 3.625l-.337.114c-.284 3.283 1.13 3.68 1.13 3.68c.51 3.058 1.02 1.756 1.02 2.548s-.51.51-.51.51s-.452 1.245-1.584 1.698s-7.416 2.886-7.927 3.396c-.512.51-.454 2.888-.454 2.888h26.947s.06-2.377-.452-2.888c-.51-.51-6.795-2.944-7.927-3.396c-1.132-.453-1.584-1.698-1.584-1.698s-.51.282-.51-.51s.51.51 1.02-2.548c0 0 1.413-.397 1.13-3.68h-.34z'/%3E%3C/svg%3E");
  }
  .icon-\[si--user-fill\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M6.25 7a5.75 5.75 0 1 1 11.5 0a5.75 5.75 0 0 1-11.5 0m5.548 7.261a1 1 0 0 1 .13-.011h.144q.066 0 .13.011l7.295 1.283l.038.008c1.344.31 2.788 1.163 3.069 2.82l.004.029l.114.877v.002c.264 2.009-1.329 3.47-3.21 3.47a1 1 0 0 1-.124-.01h-14.9c-1.881 0-3.475-1.462-3.21-3.472l.114-.869l.005-.03c.28-1.627 1.736-2.528 3.077-2.819l.029-.006z'/%3E%3C/svg%3E");
  }
  .icon-\[solar--calendar-bold\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M7.75 2.5a.75.75 0 0 0-1.5 0v1.58c-1.44.115-2.384.397-3.078 1.092c-.695.694-.977 1.639-1.093 3.078h19.842c-.116-1.44-.398-2.384-1.093-3.078c-.694-.695-1.639-.977-3.078-1.093V2.5a.75.75 0 0 0-1.5 0v1.513C15.585 4 14.839 4 14 4h-4c-.839 0-1.585 0-2.25.013z'/%3E%3Cpath fill='black' fill-rule='evenodd' d='M2 12c0-.839 0-1.585.013-2.25h19.974C22 10.415 22 11.161 22 12v2c0 3.771 0 5.657-1.172 6.828S17.771 22 14 22h-4c-3.771 0-5.657 0-6.828-1.172S2 17.771 2 14zm15 2a1 1 0 1 0 0-2a1 1 0 0 0 0 2m0 4a1 1 0 1 0 0-2a1 1 0 0 0 0 2m-4-5a1 1 0 1 1-2 0a1 1 0 0 1 2 0m0 4a1 1 0 1 1-2 0a1 1 0 0 1 2 0m-6-3a1 1 0 1 0 0-2a1 1 0 0 0 0 2m0 4a1 1 0 1 0 0-2a1 1 0 0 0 0 2' clip-rule='evenodd'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--chevron-down\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 9l6 6l6-6'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--chevron-up\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 15l6-6l6 6'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--home\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M5 12H3l9-9l9 9h-2M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-7'/%3E%3Cpath d='M9 21v-6a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v6'/%3E%3C/g%3E%3C/svg%3E");
  }
  .icon-\[tabler--pencil\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 20h4L18.5 9.5a2.828 2.828 0 1 0-4-4L4 16zm9.5-13.5l4 4'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--search\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 10a7 7 0 1 0 14 0a7 7 0 1 0-14 0m18 11l-6-6'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--trash\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 7h16m-10 4v6m4-6v6M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2l1-12M9 7V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v3'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--trending-down\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m3 7l6 6l4-4l8 8'/%3E%3Cpath d='M21 10v7h-7'/%3E%3C/g%3E%3C/svg%3E");
  }
  .icon-\[tabler--trending-up\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m3 17l6-6l4 4l8-8'/%3E%3Cpath d='M14 7h7v7'/%3E%3C/g%3E%3C/svg%3E");
  }
  .icon-\[tabler--x\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M18 6L6 18M6 6l12 12'/%3E%3C/svg%3E");
  }
  .icon-\[tdesign--user-filled\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M6.5 7.5a5.5 5.5 0 1 1 11 0a5.5 5.5 0 0 1-11 0M3 19a5 5 0 0 1 5-5h8a5 5 0 0 1 5 5v3H3z'/%3E%3C/svg%3E");
  }
  .tabs {
    display: flex;
    --tabs-height: auto;
    --tabs-direction: row;
    height: var(--tabs-height);
    flex-direction: var(--tabs-direction);
  }
  .tabs {
    display: flex;
    --tabs-height: auto;
    --tabs-direction: row;
    height: var(--tabs-height);
    flex-direction: var(--tabs-direction);
  }
  .progress-bar {
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    border-radius: var(--radius-box);
    background-color: var(--color-neutral);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    white-space: nowrap;
    color: var(--color-neutral-content);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-timing-function: var(--ease-in-out);
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    transition-duration: 500ms;
    --tw-duration: 500ms;
    --tw-ease: var(--ease-in-out);
    &.progress-indeterminate {
      width: 100%;
      background: linear-gradient(90deg, rgba(0, 0, 0, 0) 50%, var(--progress-color) 50%);
      background-size: 50% 100%;
      background-repeat: no-repeat;
      animation: indeterminate-progress 4s infinite ease-in-out;
    }
  }
  .progress-bar {
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    border-radius: var(--radius-box);
    background-color: var(--color-neutral);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    white-space: nowrap;
    color: var(--color-neutral-content);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-timing-function: var(--ease-in-out);
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    transition-duration: 500ms;
    --tw-duration: 500ms;
    --tw-ease: var(--ease-in-out);
    &.progress-indeterminate {
      width: 100%;
      background: linear-gradient(90deg, rgba(0, 0, 0, 0) 50%, var(--progress-color) 50%);
      background-size: 50% 100%;
      background-repeat: no-repeat;
      animation: indeterminate-progress 4s infinite ease-in-out;
    }
  }
  .card-body {
    display: flex;
    flex: auto;
    flex-direction: column;
    gap: calc(0.25rem * 2);
    padding: var(--card-p, 1.5rem);
    :where(p) {
      flex-grow: 1;
    }
    :where(.card-header) + & {
      padding-top: 0;
    }
    :where(&) + .card-footer {
      padding-top: 0;
    }
  }
  .card-body {
    display: flex;
    flex: auto;
    flex-direction: column;
    gap: calc(0.25rem * 2);
    padding: var(--card-p, 1.5rem);
    :where(p) {
      flex-grow: 1;
    }
    :where(.card-header) + & {
      padding-top: 0;
    }
    :where(&) + .card-footer {
      padding-top: 0;
    }
  }
  .label-text {
    display: block;
    cursor: pointer;
    padding: calc(0.25rem * 1);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--color-base-content);
  }
  .label-text {
    display: block;
    cursor: pointer;
    padding: calc(0.25rem * 1);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--color-base-content);
  }
  .carousel-body {
    display: flex;
    flex-wrap: nowrap;
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    transition-duration: 700ms;
    --tw-duration: 700ms;
  }
  .carousel-body {
    display: flex;
    flex-wrap: nowrap;
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    transition-duration: 700ms;
    --tw-duration: 700ms;
  }
  .validate {
    & *:valid ~ .success-message {
      display: block;
    }
    & *:has(:valid) ~ .success-message {
      display: block;
    }
    & *:invalid ~ .error-message {
      display: block;
    }
    & *:has(:invalid) ~ .error-message {
      display: block;
    }
    & .input:valid::file-selector-button {
      background-color: var(--color-success);
      color: var(--color-success-content);
      --input-color: var(--color-success);
    }
    & .input:invalid::file-selector-button {
      background-color: var(--color-error);
      color: var(--color-error-content);
      --input-color: var(--color-error);
    }
    & .input-floating > .input:valid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-success);
    }
    & .input-floating > .input:invalid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-error);
    }
    & .label-text:has(~ :valid) {
      color: var(--color-success);
    }
    & .label-text:has(~ * :valid) {
      color: var(--color-success);
    }
    & :is(:valid) ~ .helper-text {
      color: var(--color-success);
    }
    & *:has(:valid) ~ .helper-text {
      color: var(--color-success);
    }
    & :is(:valid) ~ .label-text {
      color: var(--color-success);
    }
    & :is(:valid) ~ .label-text * {
      color: var(--color-success);
    }
    & :is(:valid) ~ * >.label-text {
      color: var(--color-success);
    }
    & .label-text:has(~ :invalid) {
      color: var(--color-error);
    }
    & .label-text:has(~ * :invalid) {
      color: var(--color-error);
    }
    & :is(:invalid) ~ .helper-text {
      color: var(--color-error);
    }
    & *:has(:invalid) ~ .helper-text {
      color: var(--color-error);
    }
    & :is(:invalid) ~ .label-text {
      color: var(--color-error);
    }
    & :is(:invalid) ~ .label-text * {
      color: var(--color-error);
    }
    & :is(:invalid) ~ * >.label-text {
      color: var(--color-error);
    }
    & select:has(~ * > .selected) + .advance-select-toggle {
      --input-color: var(--color-success);
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
    & select:not(:has(~ * > .selected)) + .advance-select-toggle {
      --input-color: var(--color-error);
      &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
    & .input-floating:has(:valid) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-success);
        }
      }
      .input-floating-label {
        color: var(--color-success);
      }
      &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
        .input-floating-label {
          color: var(--color-success);
        }
      }
    }
    & .input-floating:has(:invalid) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-error);
        }
      }
      .input-floating-label {
        color: var(--color-error);
      }
      &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
        .input-floating-label {
          color: var(--color-error);
        }
      }
    }
    & .textarea-floating:has(:valid) {
      .textarea-floating-label {
        color: var(--color-success);
      }
      &:focus-within, &:not(:has(textarea:placeholder-shown)), &:has(.textarea:focus) {
        .textarea-floating-label {
          color: var(--color-success);
        }
      }
    }
    & .textarea-floating:has(:invalid) {
      .textarea-floating-label {
        color: var(--color-error);
      }
      &:focus-within, &:not(:has(textarea:placeholder-shown)), &:has(.textarea:focus) {
        .textarea-floating-label {
          color: var(--color-error);
        }
      }
    }
    & .select-floating:has(:valid) {
      .select-floating-label {
        color: var(--color-success);
      }
      &:focus-within, &:not(:has(select:placeholder-shown)), &:has(.select:focus) {
        .select-floating-label {
          color: var(--color-success);
        }
      }
    }
    & .select-floating:has(:invalid) {
      .select-floating-label {
        color: var(--color-error);
      }
      &:focus-within, &:not(:has(select:placeholder-shown)), &:has(.select:focus) {
        .select-floating-label {
          color: var(--color-error);
        }
      }
    }
  }
  .validate {
    & *:valid ~ .success-message {
      display: block;
    }
    & *:has(:valid) ~ .success-message {
      display: block;
    }
    & *:invalid ~ .error-message {
      display: block;
    }
    & *:has(:invalid) ~ .error-message {
      display: block;
    }
    & .input:valid::file-selector-button {
      background-color: var(--color-success);
      color: var(--color-success-content);
      --input-color: var(--color-success);
    }
    & .input:invalid::file-selector-button {
      background-color: var(--color-error);
      color: var(--color-error-content);
      --input-color: var(--color-error);
    }
    & .input-floating > .input:valid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-success);
    }
    & .input-floating > .input:invalid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-error);
    }
    & .label-text:has(~ :valid) {
      color: var(--color-success);
    }
    & .label-text:has(~ * :valid) {
      color: var(--color-success);
    }
    & :is(:valid) ~ .helper-text {
      color: var(--color-success);
    }
    & *:has(:valid) ~ .helper-text {
      color: var(--color-success);
    }
    & :is(:valid) ~ .label-text {
      color: var(--color-success);
    }
    & :is(:valid) ~ .label-text * {
      color: var(--color-success);
    }
    & :is(:valid) ~ * >.label-text {
      color: var(--color-success);
    }
    & .label-text:has(~ :invalid) {
      color: var(--color-error);
    }
    & .label-text:has(~ * :invalid) {
      color: var(--color-error);
    }
    & :is(:invalid) ~ .helper-text {
      color: var(--color-error);
    }
    & *:has(:invalid) ~ .helper-text {
      color: var(--color-error);
    }
    & :is(:invalid) ~ .label-text {
      color: var(--color-error);
    }
    & :is(:invalid) ~ .label-text * {
      color: var(--color-error);
    }
    & :is(:invalid) ~ * >.label-text {
      color: var(--color-error);
    }
    & select:has(~ * > .selected) + .advance-select-toggle {
      --input-color: var(--color-success);
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
    & select:not(:has(~ * > .selected)) + .advance-select-toggle {
      --input-color: var(--color-error);
      &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
    & .input-floating:has(:valid) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-success);
        }
      }
      .input-floating-label {
        color: var(--color-success);
      }
      &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
        .input-floating-label {
          color: var(--color-success);
        }
      }
    }
    & .input-floating:has(:invalid) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-error);
        }
      }
      .input-floating-label {
        color: var(--color-error);
      }
      &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
        .input-floating-label {
          color: var(--color-error);
        }
      }
    }
    & .textarea-floating:has(:valid) {
      .textarea-floating-label {
        color: var(--color-success);
      }
      &:focus-within, &:not(:has(textarea:placeholder-shown)), &:has(.textarea:focus) {
        .textarea-floating-label {
          color: var(--color-success);
        }
      }
    }
    & .textarea-floating:has(:invalid) {
      .textarea-floating-label {
        color: var(--color-error);
      }
      &:focus-within, &:not(:has(textarea:placeholder-shown)), &:has(.textarea:focus) {
        .textarea-floating-label {
          color: var(--color-error);
        }
      }
    }
    & .select-floating:has(:valid) {
      .select-floating-label {
        color: var(--color-success);
      }
      &:focus-within, &:not(:has(select:placeholder-shown)), &:has(.select:focus) {
        .select-floating-label {
          color: var(--color-success);
        }
      }
    }
    & .select-floating:has(:invalid) {
      .select-floating-label {
        color: var(--color-error);
      }
      &:focus-within, &:not(:has(select:placeholder-shown)), &:has(.select:focus) {
        .select-floating-label {
          color: var(--color-error);
        }
      }
    }
  }
  .helper-text {
    display: block;
    padding: calc(0.25rem * 1);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
    webkit-user-select: none;
    user-select: none;
  }
  .helper-text {
    display: block;
    padding: calc(0.25rem * 1);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
    webkit-user-select: none;
    user-select: none;
  }
  .tooltip {
    display: inline-block;
    text-align: center;
  }
  .tooltip {
    display: inline-block;
    text-align: center;
  }
  .\!flex {
    display: flex !important;
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .table {
    display: table;
  }
  .btn-circle {
    border-radius: calc(infinity * 1px);
    padding-inline: calc(0.25rem * 0);
    width: var(--size);
    height: var(--size);
  }
  .btn-circle {
    border-radius: calc(infinity * 1px);
    padding-inline: calc(0.25rem * 0);
    width: var(--size);
    height: var(--size);
  }
  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
  .size-5 {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }
  .size-6 {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
  }
  .size-8 {
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
  }
  .size-16 {
    width: calc(var(--spacing) * 16);
    height: calc(var(--spacing) * 16);
  }
  .size-28 {
    width: calc(var(--spacing) * 28);
    height: calc(var(--spacing) * 28);
  }
  .input {
    & > .select {
      height: auto;
      border-style: var(--tw-border-style);
      border-width: 0px;
      &:focus, &:focus-within {
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        outline-style: var(--tw-outline-style);
        outline-width: 0px;
      }
    }
  }
  .input {
    & > .select {
      height: auto;
      border-style: var(--tw-border-style);
      border-width: 0px;
      &:focus, &:focus-within {
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        outline-style: var(--tw-outline-style);
        outline-width: 0px;
      }
    }
  }
  .\!h-2\.5 {
    height: calc(var(--spacing) * 2.5) !important;
  }
  .h-1 {
    height: calc(var(--spacing) * 1);
  }
  .h-1\/2 {
    height: calc(1/2 * 100%);
  }
  .h-2 {
    height: calc(var(--spacing) * 2);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-14 {
    height: calc(var(--spacing) * 14);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-20 {
    height: calc(var(--spacing) * 20);
  }
  .h-24 {
    height: calc(var(--spacing) * 24);
  }
  .h-32 {
    height: calc(var(--spacing) * 32);
  }
  .h-48 {
    height: calc(var(--spacing) * 48);
  }
  .h-auto {
    height: auto;
  }
  .h-full {
    height: 100%;
  }
  .h-screen {
    height: 100vh;
  }
  .max-h-32 {
    max-height: calc(var(--spacing) * 32);
  }
  .max-h-\[90vh\] {
    max-height: 90vh;
  }
  .min-h-32 {
    min-height: calc(var(--spacing) * 32);
  }
  .progress-indeterminate {
    .progress-bar& {
      width: 100%;
      background: linear-gradient(90deg, rgba(0, 0, 0, 0) 50%, var(--progress-color) 50%);
      background-size: 50% 100%;
      background-repeat: no-repeat;
      animation: indeterminate-progress 4s infinite ease-in-out;
    }
  }
  .progress-indeterminate {
    .progress-bar& {
      width: 100%;
      background: linear-gradient(90deg, rgba(0, 0, 0, 0) 50%, var(--progress-color) 50%);
      background-size: 50% 100%;
      background-repeat: no-repeat;
      animation: indeterminate-progress 4s infinite ease-in-out;
    }
  }
  .advance-select-option {
    width: 100%;
    cursor: pointer;
    border-radius: var(--radius-field);
    padding-inline: calc(0.25rem * 4);
    padding-block: calc(0.25rem * 2.5);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
    color: var(--color-base-content);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
        }
      }
    }
    &:focus {
      background-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
      }
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .advance-select-option {
    width: 100%;
    cursor: pointer;
    border-radius: var(--radius-field);
    padding-inline: calc(0.25rem * 4);
    padding-block: calc(0.25rem * 2.5);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
    color: var(--color-base-content);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
        }
      }
    }
    &:focus {
      background-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
      }
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .tabs-bordered {
    & > .tab {
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
      }
      @media (hover:hover) {
        &:hover {
          @media (hover: hover) {
            border-color: var(--color-primary);
            @supports (color: color-mix(in lab, red, red)) {
              border-color: color-mix(in oklab, var(--color-primary) 30%, transparent);
            }
          }
        }
      }
      @media (hover:hover) {
        &:hover {
          @media (hover: hover) {
            color: var(--color-primary);
          }
        }
      }
      border-style: solid;
      border-bottom-width: calc(var(--border, 1px) + 1px);
    }
    &.tabs-vertical {
      --tabs-direction: column;
      & > .tab {
        width: 100%;
        justify-content: flex-start;
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 0px;
        border-inline-end-width: calc(var(--border, 1px) + 1px);
      }
    }
  }
  .tabs-bordered {
    & > .tab {
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
      }
      @media (hover:hover) {
        &:hover {
          @media (hover: hover) {
            border-color: var(--color-primary);
            @supports (color: color-mix(in lab, red, red)) {
              border-color: color-mix(in oklab, var(--color-primary) 30%, transparent);
            }
          }
        }
      }
      @media (hover:hover) {
        &:hover {
          @media (hover: hover) {
            color: var(--color-primary);
          }
        }
      }
      border-style: solid;
      border-bottom-width: calc(var(--border, 1px) + 1px);
    }
    &.tabs-vertical {
      --tabs-direction: column;
      & > .tab {
        width: 100%;
        justify-content: flex-start;
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 0px;
        border-inline-end-width: calc(var(--border, 1px) + 1px);
      }
    }
  }
  .modal-body {
    overflow-x: hidden;
    overflow-y: auto;
    padding: calc(0.25rem * 6);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
    &::-webkit-scrollbar {
      width: calc(0.25rem * 2);
    }
    :where(.modal-header) + & {
      padding-top: 0;
    }
    :where(&) + .modal-footer {
      padding-top: 0;
    }
  }
  .modal-body {
    overflow-x: hidden;
    overflow-y: auto;
    padding: calc(0.25rem * 6);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
    &::-webkit-scrollbar {
      width: calc(0.25rem * 2);
    }
    :where(.modal-header) + & {
      padding-top: 0;
    }
    :where(&) + .modal-footer {
      padding-top: 0;
    }
  }
  .\!w-2\.5 {
    width: calc(var(--spacing) * 2.5) !important;
  }
  .w-2 {
    width: calc(var(--spacing) * 2);
  }
  .w-2\/5 {
    width: calc(2/5 * 100%);
  }
  .w-3 {
    width: calc(var(--spacing) * 3);
  }
  .w-3\/5 {
    width: calc(3/5 * 100%);
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-32 {
    width: calc(var(--spacing) * 32);
  }
  .w-64 {
    width: calc(var(--spacing) * 64);
  }
  .w-80 {
    width: calc(var(--spacing) * 80);
  }
  .w-auto {
    width: auto;
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .w-screen {
    width: 100vw;
  }
  .w-xl {
    width: var(--container-xl);
  }
  .max-w-60 {
    max-width: calc(var(--spacing) * 60);
  }
  .max-w-full {
    max-width: 100%;
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .max-w-sm {
    max-width: var(--container-sm);
  }
  .min-w-24 {
    min-width: calc(var(--spacing) * 24);
  }
  .min-w-28 {
    min-width: calc(var(--spacing) * 28);
  }
  .min-w-48 {
    min-width: calc(var(--spacing) * 48);
  }
  .min-w-full {
    min-width: 100%;
  }
  .flex-shrink {
    flex-shrink: 1;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .-translate-x-full {
    --tw-translate-x: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .scale-95 {
    --tw-scale-x: 95%;
    --tw-scale-y: 95%;
    --tw-scale-z: 95%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-100 {
    --tw-scale-x: 100%;
    --tw-scale-y: 100%;
    --tw-scale-z: 100%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .radio-inset {
    &:checked, &[aria-checked="true"] {
      animation: radio-inset 0.2s ease-out;
      background-color: currentColor;
      box-shadow: 0 6px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)), 0 1px 2px 0 var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 6px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)), 0 1px 2px 0 color-mix(in oklab, var(--color-base-content) 30%, #0000);
      }
      &:before {
        background-color: var(--color-base-100);
        box-shadow: none;
      }
    }
  }
  .radio-inset {
    &:checked, &[aria-checked="true"] {
      animation: radio-inset 0.2s ease-out;
      background-color: currentColor;
      box-shadow: 0 6px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)), 0 1px 2px 0 var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 6px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)), 0 1px 2px 0 color-mix(in oklab, var(--color-base-content) 30%, #0000);
      }
      &:before {
        background-color: var(--color-base-100);
        box-shadow: none;
      }
    }
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .resize-none {
    resize: none;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-nowrap {
    flex-wrap: nowrap;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .\!justify-between {
    justify-content: space-between !important;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-2\.5 {
    gap: calc(var(--spacing) * 2.5);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .gap-x-1 {
    column-gap: calc(var(--spacing) * 1);
  }
  .gap-x-2 {
    column-gap: calc(var(--spacing) * 2);
  }
  .gap-x-3 {
    column-gap: calc(var(--spacing) * 3);
  }
  .space-x-1 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .accordion {
    &:where(.accordion-bordered) {
      :where(& > :not(:last-child)) {
        --tw-divide-y-reverse: 0;
        border-bottom-style: var(--tw-border-style);
        border-top-style: var(--tw-border-style);
        border-top-width: calc(1px * var(--tw-divide-y-reverse));
        border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
        border-color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
        }
      }
      border-radius: var(--radius-box);
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
      }
      background-color: var(--color-base-100);
    }
  }
  .accordion {
    &:where(.accordion-bordered) {
      :where(& > :not(:last-child)) {
        --tw-divide-y-reverse: 0;
        border-bottom-style: var(--tw-border-style);
        border-top-style: var(--tw-border-style);
        border-top-width: calc(1px * var(--tw-divide-y-reverse));
        border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
        border-color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
        }
      }
      border-radius: var(--radius-box);
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
      }
      background-color: var(--color-base-100);
    }
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .overflow-x-scroll {
    overflow-x: scroll;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .card-alert {
    .card & {
      border-radius: 0;
      &:first-child {
        border-top-left-radius: var(--radius-box);
        border-top-right-radius: var(--radius-box);
      }
      &:last-child {
        border-bottom-right-radius: var(--radius-box);
        border-bottom-left-radius: var(--radius-box);
      }
    }
  }
  .card-alert {
    .card & {
      border-radius: 0;
      &:first-child {
        border-top-left-radius: var(--radius-box);
        border-top-right-radius: var(--radius-box);
      }
      &:last-child {
        border-bottom-right-radius: var(--radius-box);
        border-bottom-left-radius: var(--radius-box);
      }
    }
  }
  .skeleton {
    border-radius: var(--radius-box);
    background-color: var(--color-base-200);
    will-change: background-position;
    background-image: linear-gradient(105deg, #0000 0% 40%, var(--color-base-100) 50%, #0000 60% 100%);
    background-size: 200% auto;
    background-repeat: no-repeat;
    background-position-x: -50%;
  }
  .skeleton {
    border-radius: var(--radius-box);
    background-color: var(--color-base-200);
    will-change: background-position;
    background-image: linear-gradient(105deg, #0000 0% 40%, var(--color-base-100) 50%, #0000 60% 100%);
    background-size: 200% auto;
    background-repeat: no-repeat;
    background-position-x: -50%;
  }
  .collapse {
    :where(.menu-horizontal > li:not(.menu-title) > & > ul) {
      border-radius: var(--radius-box);
      background-color: var(--color-base-100);
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-shadow-color: var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .collapse {
    :where(.menu-horizontal > li:not(.menu-title) > & > ul) {
      border-radius: var(--radius-box);
      background-color: var(--color-base-100);
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-shadow-color: var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .\!rounded-full {
    border-radius: calc(infinity * 1px) !important;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-box {
    border-radius: var(--radius-box);
  }
  .rounded-box {
    border-radius: var(--radius-box);
  }
  .rounded-box {
    border-radius: var(--radius-box);
  }
  .rounded-field {
    border-radius: var(--radius-field);
  }
  .rounded-field {
    border-radius: var(--radius-field);
  }
  .rounded-field {
    border-radius: var(--radius-field);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-t-lg {
    border-top-left-radius: var(--radius-lg);
    border-top-right-radius: var(--radius-lg);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .btn-text {
    --btn-shadow: "";
    color: var(--btn-color, var(--color-neutral));
    --btn-bg: "";
    --btn-border: "";
    --btn-noise: none;
    border-width: 0;
    outline-color: var(--btn-color, var(--color-neutral));
    @media (hover: hover) {
      &:hover {
        --btn-bg: var(--btn-color, var(--color-neutral));
        @supports (color: color-mix(in lab, red, red)) {
          --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
        }
      }
    }
    &:focus-visible {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
      }
    }
    &.btn-active {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
      }
    }
  }
  .btn-text {
    --btn-shadow: "";
    color: var(--btn-color, var(--color-neutral));
    --btn-bg: "";
    --btn-border: "";
    --btn-noise: none;
    border-width: 0;
    outline-color: var(--btn-color, var(--color-neutral));
    @media (hover: hover) {
      &:hover {
        --btn-bg: var(--btn-color, var(--color-neutral));
        @supports (color: color-mix(in lab, red, red)) {
          --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
        }
      }
    }
    &:focus-visible {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
      }
    }
    &.btn-active {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
      }
    }
  }
  .btn-soft {
    --btn-shadow: "";
    color: var(--btn-color, var(--color-neutral));
    --btn-bg: var(--btn-color, var(--color-neutral));
    @supports (color: color-mix(in lab, red, red)) {
      --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, var(--color-base-100));
    }
    border-width: 0;
    --btn-noise: none;
    &:focus-visible {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
      }
    }
    @media (hover: hover) {
      &:hover {
        --btn-bg: var(--btn-color, var(--color-neutral));
        @supports (color: color-mix(in lab, red, red)) {
          --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
        }
      }
    }
    &.btn-active {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
      }
    }
  }
  .btn-soft {
    --btn-shadow: "";
    color: var(--btn-color, var(--color-neutral));
    --btn-bg: var(--btn-color, var(--color-neutral));
    @supports (color: color-mix(in lab, red, red)) {
      --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, var(--color-base-100));
    }
    border-width: 0;
    --btn-noise: none;
    &:focus-visible {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
      }
    }
    @media (hover: hover) {
      &:hover {
        --btn-bg: var(--btn-color, var(--color-neutral));
        @supports (color: color-mix(in lab, red, red)) {
          --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
        }
      }
    }
    &.btn-active {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
      }
    }
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .\!border-none {
    --tw-border-style: none !important;
    border-style: none !important;
  }
  .input {
    &.is-valid, &:has(.is-valid), .validate &:valid, .validate &:has(:valid) {
      border-color: var(--color-success);
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-success);
        }
      }
      &:has(:hover):not(:focus, :focus-within) {
        border-color: var(--color-success);
      }
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
    &.is-invalid, &:has(.is-invalid), .validate &:invalid, .validate &:has(:invalid) {
      border-color: var(--color-error);
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-error);
        }
      }
      &:has(:hover):not(:focus, :focus-within) {
        border-color: var(--color-error);
      }
      &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
    &.is-valid::file-selector-button {
      background-color: var(--color-success);
      color: var(--color-success-content);
      --input-color: var(--color-success);
    }
    .validate &:valid::file-selector-button {
      background-color: var(--color-success);
      color: var(--color-success-content);
      --input-color: var(--color-success);
    }
    &.is-invalid::file-selector-button {
      background-color: var(--color-error);
      color: var(--color-error-content);
      --input-color: var(--color-error);
    }
    .validate &:invalid::file-selector-button {
      background-color: var(--color-error);
      color: var(--color-error-content);
      --input-color: var(--color-error);
    }
    .input-floating > &.is-valid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-success);
    }
    .validate .input-floating > &:valid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-success);
    }
    .input-floating > &.is-invalid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-error);
    }
    .validate .input-floating > &:invalid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-error);
    }
  }
  .input {
    &.is-valid, &:has(.is-valid), .validate &:valid, .validate &:has(:valid) {
      border-color: var(--color-success);
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-success);
        }
      }
      &:has(:hover):not(:focus, :focus-within) {
        border-color: var(--color-success);
      }
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
    &.is-invalid, &:has(.is-invalid), .validate &:invalid, .validate &:has(:invalid) {
      border-color: var(--color-error);
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-error);
        }
      }
      &:has(:hover):not(:focus, :focus-within) {
        border-color: var(--color-error);
      }
      &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
    &.is-valid::file-selector-button {
      background-color: var(--color-success);
      color: var(--color-success-content);
      --input-color: var(--color-success);
    }
    .validate &:valid::file-selector-button {
      background-color: var(--color-success);
      color: var(--color-success-content);
      --input-color: var(--color-success);
    }
    &.is-invalid::file-selector-button {
      background-color: var(--color-error);
      color: var(--color-error-content);
      --input-color: var(--color-error);
    }
    .validate &:invalid::file-selector-button {
      background-color: var(--color-error);
      color: var(--color-error-content);
      --input-color: var(--color-error);
    }
    .input-floating > &.is-valid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-success);
    }
    .validate .input-floating > &:valid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-success);
    }
    .input-floating > &.is-invalid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-error);
    }
    .validate .input-floating > &:invalid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-error);
    }
  }
  .input-floating {
    & > .input.is-valid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-success);
    }
    .validate & > .input:valid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-success);
    }
    & > .input.is-invalid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-error);
    }
    .validate & > .input:invalid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-error);
    }
    &:has(.is-valid) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-success);
        }
      }
      .input-floating-label {
        color: var(--color-success);
      }
      &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
        .input-floating-label {
          color: var(--color-success);
        }
      }
    }
    .validate &:has(:valid) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-success);
        }
      }
      .input-floating-label {
        color: var(--color-success);
      }
      &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
        .input-floating-label {
          color: var(--color-success);
        }
      }
    }
    &:has(.is-invalid) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-error);
        }
      }
      .input-floating-label {
        color: var(--color-error);
      }
      &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
        .input-floating-label {
          color: var(--color-error);
        }
      }
    }
    .validate &:has(:invalid) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-error);
        }
      }
      .input-floating-label {
        color: var(--color-error);
      }
      &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
        .input-floating-label {
          color: var(--color-error);
        }
      }
    }
  }
  .input-floating {
    & > .input.is-valid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-success);
    }
    .validate & > .input:valid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-success);
    }
    & > .input.is-invalid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-error);
    }
    .validate & > .input:invalid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-error);
    }
    &:has(.is-valid) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-success);
        }
      }
      .input-floating-label {
        color: var(--color-success);
      }
      &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
        .input-floating-label {
          color: var(--color-success);
        }
      }
    }
    .validate &:has(:valid) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-success);
        }
      }
      .input-floating-label {
        color: var(--color-success);
      }
      &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
        .input-floating-label {
          color: var(--color-success);
        }
      }
    }
    &:has(.is-invalid) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-error);
        }
      }
      .input-floating-label {
        color: var(--color-error);
      }
      &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
        .input-floating-label {
          color: var(--color-error);
        }
      }
    }
    .validate &:has(:invalid) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-error);
        }
      }
      .input-floating-label {
        color: var(--color-error);
      }
      &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
        .input-floating-label {
          color: var(--color-error);
        }
      }
    }
  }
  .is-invalid {
    .input&::file-selector-button {
      background-color: var(--color-error);
      color: var(--color-error-content);
      --input-color: var(--color-error);
    }
    .input-floating > .input&::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-error);
    }
    .label-text:has(~ &) {
      color: var(--color-error);
    }
    .label-text:has(~ * &) {
      color: var(--color-error);
    }
    :is(&) ~ .helper-text {
      color: var(--color-error);
    }
    *:has(&) ~ .helper-text {
      color: var(--color-error);
    }
    :is(&) ~ .label-text {
      color: var(--color-error);
    }
    :is(&) ~ .label-text * {
      color: var(--color-error);
    }
    :is(&) ~ * >.label-text {
      color: var(--color-error);
    }
    select& + .advance-select-toggle {
      --input-color: var(--color-error);
      &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
    .advance-select-tag:has(> &) {
      --input-color: var(--color-error);
      &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
    .input-floating:has(&) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-error);
        }
      }
      .input-floating-label {
        color: var(--color-error);
      }
      &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
        .input-floating-label {
          color: var(--color-error);
        }
      }
    }
    .textarea-floating:has(&) {
      .textarea-floating-label {
        color: var(--color-error);
      }
      &:focus-within, &:not(:has(textarea:placeholder-shown)), &:has(.textarea:focus) {
        .textarea-floating-label {
          color: var(--color-error);
        }
      }
    }
    .select-floating:has(&) {
      .select-floating-label {
        color: var(--color-error);
      }
      &:focus-within, &:not(:has(select:placeholder-shown)), &:has(.select:focus) {
        .select-floating-label {
          color: var(--color-error);
        }
      }
    }
  }
  .is-invalid {
    .input&::file-selector-button {
      background-color: var(--color-error);
      color: var(--color-error-content);
      --input-color: var(--color-error);
    }
    .input-floating > .input&::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-error);
    }
    .label-text:has(~ &) {
      color: var(--color-error);
    }
    .label-text:has(~ * &) {
      color: var(--color-error);
    }
    :is(&) ~ .helper-text {
      color: var(--color-error);
    }
    *:has(&) ~ .helper-text {
      color: var(--color-error);
    }
    :is(&) ~ .label-text {
      color: var(--color-error);
    }
    :is(&) ~ .label-text * {
      color: var(--color-error);
    }
    :is(&) ~ * >.label-text {
      color: var(--color-error);
    }
    select& + .advance-select-toggle {
      --input-color: var(--color-error);
      &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
    .advance-select-tag:has(> &) {
      --input-color: var(--color-error);
      &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
    .input-floating:has(&) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-error);
        }
      }
      .input-floating-label {
        color: var(--color-error);
      }
      &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
        .input-floating-label {
          color: var(--color-error);
        }
      }
    }
    .textarea-floating:has(&) {
      .textarea-floating-label {
        color: var(--color-error);
      }
      &:focus-within, &:not(:has(textarea:placeholder-shown)), &:has(.textarea:focus) {
        .textarea-floating-label {
          color: var(--color-error);
        }
      }
    }
    .select-floating:has(&) {
      .select-floating-label {
        color: var(--color-error);
      }
      &:focus-within, &:not(:has(select:placeholder-shown)), &:has(.select:focus) {
        .select-floating-label {
          color: var(--color-error);
        }
      }
    }
  }
  .is-valid {
    .input&::file-selector-button {
      background-color: var(--color-success);
      color: var(--color-success-content);
      --input-color: var(--color-success);
    }
    .input-floating > .input&::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-success);
    }
    .label-text:has(~ &) {
      color: var(--color-success);
    }
    .label-text:has(~ * &) {
      color: var(--color-success);
    }
    :is(&) ~ .helper-text {
      color: var(--color-success);
    }
    *:has(&) ~ .helper-text {
      color: var(--color-success);
    }
    :is(&) ~ .label-text {
      color: var(--color-success);
    }
    :is(&) ~ .label-text * {
      color: var(--color-success);
    }
    :is(&) ~ * >.label-text {
      color: var(--color-success);
    }
    select& + .advance-select-toggle {
      --input-color: var(--color-success);
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
    .advance-select-tag:has(> &) {
      --input-color: var(--color-success);
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
    .input-floating:has(&) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-success);
        }
      }
      .input-floating-label {
        color: var(--color-success);
      }
      &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
        .input-floating-label {
          color: var(--color-success);
        }
      }
    }
    .textarea-floating:has(&) {
      .textarea-floating-label {
        color: var(--color-success);
      }
      &:focus-within, &:not(:has(textarea:placeholder-shown)), &:has(.textarea:focus) {
        .textarea-floating-label {
          color: var(--color-success);
        }
      }
    }
    .select-floating:has(&) {
      .select-floating-label {
        color: var(--color-success);
      }
      &:focus-within, &:not(:has(select:placeholder-shown)), &:has(.select:focus) {
        .select-floating-label {
          color: var(--color-success);
        }
      }
    }
  }
  .is-valid {
    .input&::file-selector-button {
      background-color: var(--color-success);
      color: var(--color-success-content);
      --input-color: var(--color-success);
    }
    .input-floating > .input&::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-success);
    }
    .label-text:has(~ &) {
      color: var(--color-success);
    }
    .label-text:has(~ * &) {
      color: var(--color-success);
    }
    :is(&) ~ .helper-text {
      color: var(--color-success);
    }
    *:has(&) ~ .helper-text {
      color: var(--color-success);
    }
    :is(&) ~ .label-text {
      color: var(--color-success);
    }
    :is(&) ~ .label-text * {
      color: var(--color-success);
    }
    :is(&) ~ * >.label-text {
      color: var(--color-success);
    }
    select& + .advance-select-toggle {
      --input-color: var(--color-success);
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
    .advance-select-tag:has(> &) {
      --input-color: var(--color-success);
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
    .input-floating:has(&) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-success);
        }
      }
      .input-floating-label {
        color: var(--color-success);
      }
      &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
        .input-floating-label {
          color: var(--color-success);
        }
      }
    }
    .textarea-floating:has(&) {
      .textarea-floating-label {
        color: var(--color-success);
      }
      &:focus-within, &:not(:has(textarea:placeholder-shown)), &:has(.textarea:focus) {
        .textarea-floating-label {
          color: var(--color-success);
        }
      }
    }
    .select-floating:has(&) {
      .select-floating-label {
        color: var(--color-success);
      }
      &:focus-within, &:not(:has(select:placeholder-shown)), &:has(.select:focus) {
        .select-floating-label {
          color: var(--color-success);
        }
      }
    }
  }
  .checkbox {
    &.is-valid, &:has(.is-valid), .validate &:valid, .validate &:has(:valid) {
      --input-color: var(--color-success);
      border-color: var(--input-color);
      &:checked, &[aria-checked="true"], &:has(> input:checked) {
        --input-color: var(--color-success);
      }
    }
    &.is-invalid, &:has(.is-invalid), .validate &:invalid, .validate &:has(:invalid) {
      --input-color: var(--color-error);
      border-color: var(--input-color);
      &:checked, &[aria-checked="true"], &:has(> input:checked) {
        --input-color: var(--color-error);
      }
    }
    &.is-valid, &:has(.is-valid), .validate &:valid, .validate &:has(:valid) {
      color: var(--color-success-content);
    }
    &.is-invalid, &:has(.is-invalid), .validate &:invalid, .validate &:has(:invalid) {
      color: var(--color-error-content);
    }
  }
  .checkbox {
    &.is-valid, &:has(.is-valid), .validate &:valid, .validate &:has(:valid) {
      --input-color: var(--color-success);
      border-color: var(--input-color);
      &:checked, &[aria-checked="true"], &:has(> input:checked) {
        --input-color: var(--color-success);
      }
    }
    &.is-invalid, &:has(.is-invalid), .validate &:invalid, .validate &:has(:invalid) {
      --input-color: var(--color-error);
      border-color: var(--input-color);
      &:checked, &[aria-checked="true"], &:has(> input:checked) {
        --input-color: var(--color-error);
      }
    }
    &.is-valid, &:has(.is-valid), .validate &:valid, .validate &:has(:valid) {
      color: var(--color-success-content);
    }
    &.is-invalid, &:has(.is-invalid), .validate &:invalid, .validate &:has(:invalid) {
      color: var(--color-error-content);
    }
  }
  .select {
    &.is-valid, &:has(.is-valid), .validate &:valid, .validate &:has(:valid) {
      border-color: var(--color-success);
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-success);
        }
      }
      &:has(:hover):not(:focus, :focus-within) {
        border-color: var(--color-success);
      }
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
    &.is-invalid, &:has(.is-invalid), .validate &:invalid, .validate &:has(:invalid) {
      border-color: var(--color-error);
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-error);
        }
      }
      &:has(:hover):not(:focus, :focus-within) {
        border-color: var(--color-error);
      }
      &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
  }
  .select {
    &.is-valid, &:has(.is-valid), .validate &:valid, .validate &:has(:valid) {
      border-color: var(--color-success);
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-success);
        }
      }
      &:has(:hover):not(:focus, :focus-within) {
        border-color: var(--color-success);
      }
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
    &.is-invalid, &:has(.is-invalid), .validate &:invalid, .validate &:has(:invalid) {
      border-color: var(--color-error);
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-error);
        }
      }
      &:has(:hover):not(:focus, :focus-within) {
        border-color: var(--color-error);
      }
      &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
  }
  .textarea {
    &.is-valid, &:has(.is-valid), .validate &:valid, .validate &:has(:valid) {
      border-color: var(--color-success);
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-success);
        }
      }
      &:has(:hover):not(:focus, :focus-within) {
        border-color: var(--color-success);
      }
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
    &.is-invalid, &:has(.is-invalid), .validate &:invalid, .validate &:has(:invalid) {
      border-color: var(--color-error);
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-error);
        }
      }
      &:has(:hover):not(:focus, :focus-within) {
        border-color: var(--color-error);
      }
      &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
  }
  .textarea {
    &.is-valid, &:has(.is-valid), .validate &:valid, .validate &:has(:valid) {
      border-color: var(--color-success);
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-success);
        }
      }
      &:has(:hover):not(:focus, :focus-within) {
        border-color: var(--color-success);
      }
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
    &.is-invalid, &:has(.is-invalid), .validate &:invalid, .validate &:has(:invalid) {
      border-color: var(--color-error);
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-error);
        }
      }
      &:has(:hover):not(:focus, :focus-within) {
        border-color: var(--color-error);
      }
      &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
  }
  .radio {
    &.is-valid, &:has(.is-valid), .validate &:valid, .validate &:has(:valid) {
      --input-color: var(--color-success);
      border-color: var(--input-color);
      &:checked, &[aria-checked="true"], &:has(> input:checked) {
        --input-color: var(--color-success);
      }
    }
    &.is-invalid, &:has(.is-invalid), .validate &:invalid, .validate &:has(:invalid) {
      --input-color: var(--color-error);
      border-color: var(--input-color);
      &:checked, &[aria-checked="true"], &:has(> input:checked) {
        --input-color: var(--color-error);
      }
    }
  }
  .radio {
    &.is-valid, &:has(.is-valid), .validate &:valid, .validate &:has(:valid) {
      --input-color: var(--color-success);
      border-color: var(--input-color);
      &:checked, &[aria-checked="true"], &:has(> input:checked) {
        --input-color: var(--color-success);
      }
    }
    &.is-invalid, &:has(.is-invalid), .validate &:invalid, .validate &:has(:invalid) {
      --input-color: var(--color-error);
      border-color: var(--input-color);
      &:checked, &[aria-checked="true"], &:has(> input:checked) {
        --input-color: var(--color-error);
      }
    }
  }
  .radio-inset {
    &.is-valid, &:has(.is-valid), .validate &:valid, .validate &:has(:valid) {
      --input-color: var(--color-success);
      border-color: var(--input-color);
      &:checked, &[aria-checked="true"], &:has(> input:checked) {
        --input-color: var(--color-success);
      }
    }
    &.is-invalid, &:has(.is-invalid), .validate &:invalid, .validate &:has(:invalid) {
      --input-color: var(--color-error);
      border-color: var(--input-color);
      &:checked, &[aria-checked="true"], &:has(> input:checked) {
        --input-color: var(--color-error);
      }
    }
  }
  .radio-inset {
    &.is-valid, &:has(.is-valid), .validate &:valid, .validate &:has(:valid) {
      --input-color: var(--color-success);
      border-color: var(--input-color);
      &:checked, &[aria-checked="true"], &:has(> input:checked) {
        --input-color: var(--color-success);
      }
    }
    &.is-invalid, &:has(.is-invalid), .validate &:invalid, .validate &:has(:invalid) {
      --input-color: var(--color-error);
      border-color: var(--input-color);
      &:checked, &[aria-checked="true"], &:has(> input:checked) {
        --input-color: var(--color-error);
      }
    }
  }
  .\!border-base-content\/40 {
    border-color: var(--color-base-content) !important;
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-content) 40%, transparent) !important;
    }
  }
  .border-base-content {
    border-color: var(--color-base-content);
  }
  .border-base-content\/20 {
    border-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
  }
  .border-base-content\/25 {
    border-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
    }
  }
  .border-base-content\/40 {
    border-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
    }
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-sky-300 {
    border-color: var(--color-sky-300);
  }
  .border-sky-600 {
    border-color: var(--color-sky-600);
  }
  .border-sky-800 {
    border-color: var(--color-sky-800);
  }
  .input-floating {
    & .input::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-inline-end: var(--border) solid color-mix(in oklab, var(--color-base-content) 40%, #0000);
      }
      outline: none;
    }
  }
  .input-floating {
    & .input::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-inline-end: var(--border) solid color-mix(in oklab, var(--color-base-content) 40%, #0000);
      }
      outline: none;
    }
  }
  .progress-primary {
    background-color: var(--color-primary);
    color: var(--color-primary-content);
  }
  .progress-primary {
    background-color: var(--color-primary);
    color: var(--color-primary-content);
  }
  .\!bg-base-100 {
    background-color: var(--color-base-100) !important;
  }
  .bg-base-100 {
    background-color: var(--color-base-100);
  }
  .bg-base-300 {
    background-color: var(--color-base-300);
  }
  .bg-base-300\/60 {
    background-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-base-300) 60%, transparent);
    }
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-black\/15 {
    background-color: color-mix(in srgb, #000 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 15%, transparent);
    }
  }
  .bg-black\/50 {
    background-color: color-mix(in srgb, #000 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }
  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }
  .bg-blue-600\/15 {
    background-color: color-mix(in srgb, oklch(54.6% 0.245 262.881) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-600) 15%, transparent);
    }
  }
  .bg-blue-700 {
    background-color: var(--color-blue-700);
  }
  .bg-blue-700\/10 {
    background-color: color-mix(in srgb, oklch(48.8% 0.243 264.376) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-700) 10%, transparent);
    }
  }
  .bg-cyan-400 {
    background-color: var(--color-cyan-400);
  }
  .bg-cyan-600 {
    background-color: var(--color-cyan-600);
  }
  .bg-cyan-700 {
    background-color: var(--color-cyan-700);
  }
  .bg-emerald-600 {
    background-color: var(--color-emerald-600);
  }
  .bg-gray-800 {
    background-color: var(--color-gray-800);
  }
  .bg-green-500 {
    background-color: var(--color-green-500);
  }
  .bg-green-700 {
    background-color: var(--color-green-700);
  }
  .bg-orange-400 {
    background-color: var(--color-orange-400);
  }
  .bg-orange-500 {
    background-color: var(--color-orange-500);
  }
  .bg-red-400 {
    background-color: var(--color-red-400);
  }
  .bg-red-400\/30 {
    background-color: color-mix(in srgb, oklch(70.4% 0.191 22.216) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-red-400) 30%, transparent);
    }
  }
  .bg-red-500 {
    background-color: var(--color-red-500);
  }
  .bg-red-500\/80 {
    background-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-red-500) 80%, transparent);
    }
  }
  .bg-sky-200 {
    background-color: var(--color-sky-200);
  }
  .bg-sky-500 {
    background-color: var(--color-sky-500);
  }
  .bg-sky-600 {
    background-color: var(--color-sky-600);
  }
  .bg-sky-700 {
    background-color: var(--color-sky-700);
  }
  .bg-sky-800 {
    background-color: var(--color-sky-800);
  }
  .bg-sky-900 {
    background-color: var(--color-sky-900);
  }
  .bg-sky-900\/70 {
    background-color: color-mix(in srgb, oklch(39.1% 0.09 240.876) 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-sky-900) 70%, transparent);
    }
  }
  .bg-sky-950 {
    background-color: var(--color-sky-950);
  }
  .bg-slate-50 {
    background-color: var(--color-slate-50);
  }
  .bg-slate-100 {
    background-color: var(--color-slate-100);
  }
  .bg-slate-800 {
    background-color: var(--color-slate-800);
  }
  .bg-slate-800\/75 {
    background-color: color-mix(in srgb, oklch(27.9% 0.041 260.031) 75%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-slate-800) 75%, transparent);
    }
  }
  .bg-teal-400 {
    background-color: var(--color-teal-400);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .loading-spinner {
    mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
  }
  .loading-spinner {
    mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
  }
  .bg-cover {
    background-size: cover;
  }
  .bg-center {
    background-position: center;
  }
  .bg-no-repeat {
    background-repeat: no-repeat;
  }
  .mask-repeat {
    mask-repeat: repeat;
  }
  .fill-black {
    fill: var(--color-black);
  }
  .object-cover {
    object-fit: cover;
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-0\.5 {
    padding: calc(var(--spacing) * 0.5);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .badge-sm {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --size: calc(var(--size-selector, 0.25rem) * 5);
    padding-inline: calc(0.25rem * 2 - var(--border));
  }
  .badge-sm {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --size: calc(var(--size-selector, 0.25rem) * 5);
    padding-inline: calc(0.25rem * 2 - var(--border));
  }
  .\!px-2\.5 {
    padding-inline: calc(var(--spacing) * 2.5) !important;
  }
  .px-0 {
    padding-inline: calc(var(--spacing) * 0);
  }
  .px-0\.5 {
    padding-inline: calc(var(--spacing) * 0.5);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-2\.5 {
    padding-block: calc(var(--spacing) * 2.5);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-10 {
    padding-block: calc(var(--spacing) * 10);
  }
  .ps-5 {
    padding-inline-start: calc(var(--spacing) * 5);
  }
  .pt-3 {
    padding-top: calc(var(--spacing) * 3);
  }
  .text-center {
    text-align: center;
  }
  .align-bottom {
    vertical-align: bottom;
  }
  .align-middle {
    vertical-align: middle;
  }
  .modal-title {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-base-content);
  }
  .modal-title {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-base-content);
  }
  .btn-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --btn-p: 0.75rem;
    --size: calc(var(--size-field, 0.25rem) * 7.5);
  }
  .btn-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --btn-p: 0.75rem;
    --size: calc(var(--size-field, 0.25rem) * 7.5);
  }
  .tabs-lg {
    & :where(.tab) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
      --size: calc(var(--size-field, 0.25rem) * 11.5);
      --tab-p: 1.25rem;
    }
  }
  .tabs-lg {
    & :where(.tab) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
      --size: calc(var(--size-field, 0.25rem) * 11.5);
      --tab-p: 1.25rem;
    }
  }
  .tabs-md {
    & :where(.tab) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
      --size: calc(var(--size-field, 0.25rem) * 9.5);
      --tab-p: 1rem;
    }
  }
  .tabs-md {
    & :where(.tab) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
      --size: calc(var(--size-field, 0.25rem) * 9.5);
      --tab-p: 1rem;
    }
  }
  .tabs-sm {
    & :where(.tab) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
      --size: calc(var(--size-field, 0.25rem) * 7.5);
      --tab-p: 0.75rem;
    }
  }
  .tabs-sm {
    & :where(.tab) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
      --size: calc(var(--size-field, 0.25rem) * 7.5);
      --tab-p: 0.75rem;
    }
  }
  .tabs-xl {
    & :where(.tab) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
      --size: calc(var(--size-field, 0.25rem) * 14);
      --tab-p: 1.5rem;
    }
  }
  .tabs-xl {
    & :where(.tab) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
      --size: calc(var(--size-field, 0.25rem) * 14);
      --tab-p: 1.5rem;
    }
  }
  .tabs-xs {
    & :where(.tab) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
      --size: calc(var(--size-field, 0.25rem) * 6);
      --tab-p: 0.5rem;
    }
  }
  .tabs-xs {
    & :where(.tab) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
      --size: calc(var(--size-field, 0.25rem) * 6);
      --tab-p: 0.5rem;
    }
  }
  .\!text-sm {
    font-size: var(--text-sm) !important;
    line-height: var(--tw-leading, var(--text-sm--line-height)) !important;
  }
  .input-lg {
    &::file-selector-button {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .input-lg {
    &::file-selector-button {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .input-md {
    &::file-selector-button {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .input-md {
    &::file-selector-button {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .input-sm {
    &::file-selector-button {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .input-sm {
    &::file-selector-button {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .input-xl {
    &::file-selector-button {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .input-xl {
    &::file-selector-button {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-6xl {
    font-size: var(--text-6xl);
    line-height: var(--tw-leading, var(--text-6xl--line-height));
  }
  .text-7xl {
    font-size: var(--text-7xl);
    line-height: var(--tw-leading, var(--text-7xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .\!font-medium {
    --tw-font-weight: var(--font-weight-medium) !important;
    font-weight: var(--font-weight-medium) !important;
  }
  .\!font-semibold {
    --tw-font-weight: var(--font-weight-semibold) !important;
    font-weight: var(--font-weight-semibold) !important;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-wrap {
    text-wrap: wrap;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .label-text {
    &:has(~ .is-valid) {
      color: var(--color-success);
    }
    &:has(~ * .is-valid) {
      color: var(--color-success);
    }
    .validate &:has(~ :valid) {
      color: var(--color-success);
    }
    .validate &:has(~ * :valid) {
      color: var(--color-success);
    }
    :is(.is-valid) ~ & {
      color: var(--color-success);
    }
    :is(.is-valid) ~ & * {
      color: var(--color-success);
    }
    :is(.is-valid) ~ * >& {
      color: var(--color-success);
    }
    .validate :is(:valid) ~ & {
      color: var(--color-success);
    }
    .validate :is(:valid) ~ & * {
      color: var(--color-success);
    }
    .validate :is(:valid) ~ * >& {
      color: var(--color-success);
    }
    &:has(~ .is-invalid) {
      color: var(--color-error);
    }
    &:has(~ * .is-invalid) {
      color: var(--color-error);
    }
    .validate &:has(~ :invalid) {
      color: var(--color-error);
    }
    .validate &:has(~ * :invalid) {
      color: var(--color-error);
    }
    :is(.is-invalid) ~ & {
      color: var(--color-error);
    }
    :is(.is-invalid) ~ & * {
      color: var(--color-error);
    }
    :is(.is-invalid) ~ * >& {
      color: var(--color-error);
    }
    .validate :is(:invalid) ~ & {
      color: var(--color-error);
    }
    .validate :is(:invalid) ~ & * {
      color: var(--color-error);
    }
    .validate :is(:invalid) ~ * >& {
      color: var(--color-error);
    }
  }
  .label-text {
    &:has(~ .is-valid) {
      color: var(--color-success);
    }
    &:has(~ * .is-valid) {
      color: var(--color-success);
    }
    .validate &:has(~ :valid) {
      color: var(--color-success);
    }
    .validate &:has(~ * :valid) {
      color: var(--color-success);
    }
    :is(.is-valid) ~ & {
      color: var(--color-success);
    }
    :is(.is-valid) ~ & * {
      color: var(--color-success);
    }
    :is(.is-valid) ~ * >& {
      color: var(--color-success);
    }
    .validate :is(:valid) ~ & {
      color: var(--color-success);
    }
    .validate :is(:valid) ~ & * {
      color: var(--color-success);
    }
    .validate :is(:valid) ~ * >& {
      color: var(--color-success);
    }
    &:has(~ .is-invalid) {
      color: var(--color-error);
    }
    &:has(~ * .is-invalid) {
      color: var(--color-error);
    }
    .validate &:has(~ :invalid) {
      color: var(--color-error);
    }
    .validate &:has(~ * :invalid) {
      color: var(--color-error);
    }
    :is(.is-invalid) ~ & {
      color: var(--color-error);
    }
    :is(.is-invalid) ~ & * {
      color: var(--color-error);
    }
    :is(.is-invalid) ~ * >& {
      color: var(--color-error);
    }
    .validate :is(:invalid) ~ & {
      color: var(--color-error);
    }
    .validate :is(:invalid) ~ & * {
      color: var(--color-error);
    }
    .validate :is(:invalid) ~ * >& {
      color: var(--color-error);
    }
  }
  .helper-text {
    :is(.is-valid) ~ & {
      color: var(--color-success);
    }
    *:has(.is-valid) ~ & {
      color: var(--color-success);
    }
    .validate :is(:valid) ~ & {
      color: var(--color-success);
    }
    .validate *:has(:valid) ~ & {
      color: var(--color-success);
    }
    :is(.is-invalid) ~ & {
      color: var(--color-error);
    }
    *:has(.is-invalid) ~ & {
      color: var(--color-error);
    }
    .validate :is(:invalid) ~ & {
      color: var(--color-error);
    }
    .validate *:has(:invalid) ~ & {
      color: var(--color-error);
    }
  }
  .helper-text {
    :is(.is-valid) ~ & {
      color: var(--color-success);
    }
    *:has(.is-valid) ~ & {
      color: var(--color-success);
    }
    .validate :is(:valid) ~ & {
      color: var(--color-success);
    }
    .validate *:has(:valid) ~ & {
      color: var(--color-success);
    }
    :is(.is-invalid) ~ & {
      color: var(--color-error);
    }
    *:has(.is-invalid) ~ & {
      color: var(--color-error);
    }
    .validate :is(:invalid) ~ & {
      color: var(--color-error);
    }
    .validate *:has(:invalid) ~ & {
      color: var(--color-error);
    }
  }
  .text-base-content {
    color: var(--color-base-content);
  }
  .text-base-content\/50 {
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
    }
  }
  .text-base-content\/80 {
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
  }
  .text-error {
    color: var(--color-error);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-primary {
    color: var(--color-primary);
  }
  .text-red-400 {
    color: var(--color-red-400);
  }
  .text-sky-100 {
    color: var(--color-sky-100);
  }
  .text-sky-600 {
    color: var(--color-sky-600);
  }
  .text-sky-700 {
    color: var(--color-sky-700);
  }
  .text-sky-800 {
    color: var(--color-sky-800);
  }
  .text-sky-950 {
    color: var(--color-sky-950);
  }
  .text-slate-50 {
    color: var(--color-slate-50);
  }
  .text-success {
    color: var(--color-success);
  }
  .text-white {
    color: var(--color-white);
  }
  .lowercase {
    text-transform: lowercase;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .underline {
    text-decoration-line: underline;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-base-300 {
    --tw-shadow-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, var(--color-base-300) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-base-300\/20 {
    --tw-shadow-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .outline-0 {
    outline-style: var(--tw-outline-style);
    outline-width: 0px;
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .carousel-slide {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    transition-duration: 700ms;
    --tw-duration: 700ms;
  }
  .carousel-slide {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    transition-duration: 700ms;
    --tw-duration: 700ms;
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .advance-select-toggle {
    select.is-valid + & {
      --input-color: var(--color-success);
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
    .validate select:has(~ * > .selected) + & {
      --input-color: var(--color-success);
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
    select.is-invalid + & {
      --input-color: var(--color-error);
      &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
    .validate select:not(:has(~ * > .selected)) + & {
      --input-color: var(--color-error);
      &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
  }
  .advance-select-toggle {
    select.is-valid + & {
      --input-color: var(--color-success);
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
    .validate select:has(~ * > .selected) + & {
      --input-color: var(--color-success);
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
    select.is-invalid + & {
      --input-color: var(--color-error);
      &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
    .validate select:not(:has(~ * > .selected)) + & {
      --input-color: var(--color-error);
      &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
  }
  .badge-success {
    --badge-color: var(--color-success);
    --badge-fg: var(--color-success-content);
  }
  .badge-success {
    --badge-color: var(--color-success);
    --badge-fg: var(--color-success-content);
  }
  .btn-primary {
    --btn-color: var(--color-primary);
    --btn-fg: var(--color-primary-content);
  }
  .btn-primary {
    --btn-color: var(--color-primary);
    --btn-fg: var(--color-primary-content);
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .selected {
    .validate select:has(~ * > &) + .advance-select-toggle {
      --input-color: var(--color-success);
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
  }
  .selected {
    .validate select:has(~ * > &) + .advance-select-toggle {
      --input-color: var(--color-success);
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
  }
  .placeholder\:text-slate-300 {
    &::placeholder {
      color: var(--color-slate-300);
    }
  }
  .hover\:bg-blue-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-700);
      }
    }
  }
  .hover\:bg-blue-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-800);
      }
    }
  }
  .hover\:bg-green-700\/90 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(52.7% 0.154 150.069) 90%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-green-700) 90%, transparent);
        }
      }
    }
  }
  .hover\:bg-sky-600\/90 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(58.8% 0.158 241.966) 90%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-sky-600) 90%, transparent);
        }
      }
    }
  }
  .hover\:bg-sky-800\/90 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(44.3% 0.11 240.79) 90%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-sky-800) 90%, transparent);
        }
      }
    }
  }
  .hover\:bg-sky-950\/90 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(29.3% 0.066 243.157) 90%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-sky-950) 90%, transparent);
        }
      }
    }
  }
  .hover\:bg-slate-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-800);
      }
    }
  }
  .hover\:text-black {
    &:hover {
      @media (hover: hover) {
        color: var(--color-black);
      }
    }
  }
  .focus\:border-blue-300 {
    &:focus {
      border-color: var(--color-blue-300);
    }
  }
  .focus\:border-primary {
    &:focus {
      border-color: var(--color-primary);
    }
  }
  .focus\:ring {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-4 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-blue-300 {
    &:focus {
      --tw-ring-color: var(--color-blue-300);
    }
  }
  .focus\:outline-1 {
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .focus\:outline-primary {
    &:focus {
      outline-color: var(--color-primary);
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .max-md\:flex-wrap {
    @media (width < 48rem) {
      flex-wrap: wrap;
    }
  }
  .max-md\:justify-center {
    @media (width < 48rem) {
      justify-content: center;
    }
  }
  .sm\:mt-8 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 8);
    }
  }
  .sm\:grid {
    @media (width >= 40rem) {
      display: grid;
    }
  }
  .sm\:h-12 {
    @media (width >= 40rem) {
      height: calc(var(--spacing) * 12);
    }
  }
  .sm\:h-64 {
    @media (width >= 40rem) {
      height: calc(var(--spacing) * 64);
    }
  }
  .sm\:h-full {
    @media (width >= 40rem) {
      height: 100%;
    }
  }
  .sm\:w-64 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 64);
    }
  }
  .sm\:w-80 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 80);
    }
  }
  .sm\:grid-cols-3 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:flex-wrap {
    @media (width >= 40rem) {
      flex-wrap: wrap;
    }
  }
  .sm\:gap-0\.5 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 0.5);
    }
  }
  .sm\:gap-1 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 1);
    }
  }
  .sm\:gap-2 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 2);
    }
  }
  .sm\:rounded-lg {
    @media (width >= 40rem) {
      border-radius: var(--radius-lg);
    }
  }
  .md\:static {
    @media (width >= 48rem) {
      position: static;
    }
  }
  .md\:mt-24 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 24);
    }
  }
  .md\:flex {
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .md\:hidden {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .md\:h-40 {
    @media (width >= 48rem) {
      height: calc(var(--spacing) * 40);
    }
  }
  .md\:h-full {
    @media (width >= 48rem) {
      height: 100%;
    }
  }
  .md\:h-screen {
    @media (width >= 48rem) {
      height: 100vh;
    }
  }
  .md\:w-1\/2 {
    @media (width >= 48rem) {
      width: calc(1/2 * 100%);
    }
  }
  .md\:w-full {
    @media (width >= 48rem) {
      width: 100%;
    }
  }
  .md\:translate-x-0 {
    @media (width >= 48rem) {
      --tw-translate-x: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .md\:cursor-pointer {
    @media (width >= 48rem) {
      cursor: pointer;
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-3 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .md\:flex-col {
    @media (width >= 48rem) {
      flex-direction: column;
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:flex-nowrap {
    @media (width >= 48rem) {
      flex-wrap: nowrap;
    }
  }
  .md\:justify-center {
    @media (width >= 48rem) {
      justify-content: center;
    }
  }
  .md\:overflow-y-auto {
    @media (width >= 48rem) {
      overflow-y: auto;
    }
  }
  .md\:text-2xl {
    @media (width >= 48rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .md\:text-4xl {
    @media (width >= 48rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .md\:text-6xl {
    @media (width >= 48rem) {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  .md\:text-lg {
    @media (width >= 48rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .md\:text-sm {
    @media (width >= 48rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .lg\:h-24 {
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 24);
    }
  }
  .lg\:h-32 {
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 32);
    }
  }
  .lg\:w-auto {
    @media (width >= 64rem) {
      width: auto;
    }
  }
  .lg\:grid-cols-3 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .lg\:text-5xl {
    @media (width >= 64rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .lg\:text-6xl {
    @media (width >= 64rem) {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  .xl\:h-32 {
    @media (width >= 80rem) {
      height: calc(var(--spacing) * 32);
    }
  }
  .xl\:h-40 {
    @media (width >= 80rem) {
      height: calc(var(--spacing) * 40);
    }
  }
  .xl\:w-1\/2 {
    @media (width >= 80rem) {
      width: calc(1/2 * 100%);
    }
  }
  .xl\:w-96 {
    @media (width >= 80rem) {
      width: calc(var(--spacing) * 96);
    }
  }
  .xl\:w-full {
    @media (width >= 80rem) {
      width: 100%;
    }
  }
  .xl\:gap-2 {
    @media (width >= 80rem) {
      gap: calc(var(--spacing) * 2);
    }
  }
  .xl\:text-6xl {
    @media (width >= 80rem) {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  .xl\:text-7xl {
    @media (width >= 80rem) {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }
  .xl\:text-lg {
    @media (width >= 80rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .rtl\:\!mr-0 {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      margin-right: calc(var(--spacing) * 0) !important;
    }
  }
  .dark\:bg-blue-600 {
    @media (prefers-color-scheme: dark) {
      background-color: var(--color-blue-600);
    }
  }
  .dark\:hover\:bg-blue-700 {
    @media (prefers-color-scheme: dark) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-blue-700);
        }
      }
    }
  }
  .dark\:focus\:ring-blue-800 {
    @media (prefers-color-scheme: dark) {
      &:focus {
        --tw-ring-color: var(--color-blue-800);
      }
    }
  }
  .overlay-open\:mt-12 {
    &.open {
      margin-top: calc(var(--spacing) * 12);
    }
    .open & {
      margin-top: calc(var(--spacing) * 12);
    }
  }
  .overlay-open\:opacity-100 {
    &.open {
      opacity: 100%;
    }
    .open & {
      opacity: 100%;
    }
  }
  .overlay-open\:duration-300 {
    &.open {
      --tw-duration: 300ms;
      transition-duration: 300ms;
    }
    .open & {
      --tw-duration: 300ms;
      transition-duration: 300ms;
    }
  }
  .combo-box-selected\:block {
    &.selected {
      display: block;
    }
    .selected & {
      display: block;
    }
  }
  .combo-box-selected\:dropdown-active {
    &.selected {
      background-color: var(--color-primary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
      }
      color: var(--color-primary);
    }
    .selected & {
      background-color: var(--color-primary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
      }
      color: var(--color-primary);
    }
  }
  .combo-box-selected\:dropdown-active {
    &.selected {
      background-color: var(--color-primary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
      }
      color: var(--color-primary);
    }
    .selected & {
      background-color: var(--color-primary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
      }
      color: var(--color-primary);
    }
  }
  .datatable-ordering-asc\:block {
    &.dt-ordering-asc {
      display: block;
    }
    .dt-ordering-asc & {
      display: block;
    }
  }
  .datatable-ordering-desc\:block {
    &.dt-ordering-desc {
      display: block;
    }
    .dt-ordering-desc & {
      display: block;
    }
  }
  .file-upload-complete\:progress-success {
    &.complete {
      background-color: var(--color-success);
      color: var(--color-success-content);
    }
    .complete & {
      background-color: var(--color-success);
      color: var(--color-success-content);
    }
  }
  .file-upload-complete\:progress-success {
    &.complete {
      background-color: var(--color-success);
      color: var(--color-success-content);
    }
    .complete & {
      background-color: var(--color-success);
      color: var(--color-success-content);
    }
  }
  .\[\&\>\.active\]\:text-bg-soft-primary {
    &>.active {
      color: var(--color-primary);
      background-color: var(--color-primary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-primary) 10%, var(--color-base-100));
      }
    }
  }
  .\[\&\>\.active\]\:text-bg-soft-primary {
    &>.active {
      color: var(--color-primary);
      background-color: var(--color-primary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-primary) 10%, var(--color-base-100));
      }
    }
  }
}
.dt-layout-row:has(.dt-search), .dt-layout-row:has(.dt-length), .dt-layout-row:has(.dt-paging), .dt-scroll-body thead {
  display: none !important;
}
:root {
  --fc-page-bg-color: var(--color-base-100);
  --fc-neutral-bg-color: var(--color-neutral);
  @supports (color: color-mix(in lab, red, red)) {
    --fc-neutral-bg-color: color-mix(in oklab, var(--color-neutral) 30%, transparent);
  }
  --fc-neutral-text-color: var(--color-neutral-content);
  --fc-border-color: var(--color-base-content);
  @supports (color: color-mix(in lab, red, red)) {
    --fc-border-color: color-mix(in oklab, var(--color-base-content) 30%, transparent);
  }
  --fc-button-text-color: var(--color-primary);
  --fc-button-bg-color: var(--color-primary);
  @supports (color: color-mix(in lab, red, red)) {
    --fc-button-bg-color: color-mix(in oklab, var(--color-primary) 16%, transparent);
  }
  --fc-button-border-color: var(--color-primary);
  @supports (color: color-mix(in lab, red, red)) {
    --fc-button-border-color: color-mix(in oklab, var(--color-primary) 16%, transparent);
  }
  --fc-button-hover-bg-color: var(--color-primary);
  @supports (color: color-mix(in lab, red, red)) {
    --fc-button-hover-bg-color: color-mix(in oklab, var(--color-primary) 24%, transparent);
  }
  --fc-button-hover-border-color: var(--color-primary);
  @supports (color: color-mix(in lab, red, red)) {
    --fc-button-hover-border-color: color-mix(in oklab, var(--color-primary) 24%, transparent);
  }
  --fc-button-active-bg-color: var(--color-primary);
  @supports (color: color-mix(in lab, red, red)) {
    --fc-button-active-bg-color: color-mix(in oklab, var(--color-primary) 24%, transparent);
  }
  --fc-button-active-border-color: var(--color-primary);
  @supports (color: color-mix(in lab, red, red)) {
    --fc-button-active-border-color: color-mix(in oklab, var(--color-primary) 24%, transparent);
  }
  --fc-event-bg-color: var(--color-primary);
  @supports (color: color-mix(in lab, red, red)) {
    --fc-event-bg-color: color-mix(in oklab, var(--color-primary) 16%, transparent);
  }
  --fc-event-border-color: var(--color-primary);
  --fc-event-text-color: var(--color-primary);
  --fc-event-selected-overlay-color: var(--color-secondary);
  @supports (color: color-mix(in lab, red, red)) {
    --fc-event-selected-overlay-color: color-mix(in oklab, var(--color-secondary) 16%, transparent);
  }
  --fc-list-event-dot-width: 8px;
  --fc-list-event-hover-bg-color: var(--color-secondary);
  @supports (color: color-mix(in lab, red, red)) {
    --fc-list-event-hover-bg-color: color-mix(in oklab, var(--color-secondary) 16%, transparent);
  }
  --fc-more-link-bg-color: var(--color-secondary);
  @supports (color: color-mix(in lab, red, red)) {
    --fc-more-link-bg-color: color-mix(in oklab, var(--color-secondary) 16%, transparent);
  }
  --fc-more-link-text-color: var(--color-secondary);
  --fc-event-resizer-thickness: 8px;
  --fc-event-resizer-dot-total-width: 8px;
  --fc-event-resizer-dot-border-width: 1px;
  --fc-non-business-color: var(--color-info);
  @supports (color: color-mix(in lab, red, red)) {
    --fc-non-business-color: color-mix(in oklab, var(--color-info) 16%, transparent);
  }
  --fc-bg-event-color: var(--color-neutral);
  --fc-bg-event-opacity: 0.3;
  --fc-highlight-color: var(--color-secondary);
  @supports (color: color-mix(in lab, red, red)) {
    --fc-highlight-color: color-mix(in oklab, var(--color-secondary) 16%, transparent);
  }
  --fc-today-bg-color: var(--color-base-300);
  @supports (color: color-mix(in lab, red, red)) {
    --fc-today-bg-color: color-mix(in oklab, var(--color-base-300) 35%, transparent);
  }
  --fc-now-indicator-color: var(--color-warning);
}
.fc {
  .fc-button-primary:not(:disabled).fc-button-active:focus, .fc .fc-button-primary:not(:disabled):active:focus, .fc-button-primary:focus, .fc-button:focus {
    --tw-shadow: 0 0 #0000 !important;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow) !important;
  }
  .fc-button-primary, .fc-button-primary:not(:disabled).fc-button-active, .fc-button-primary:hover, .fc-button-primary:not(:disabled):active, .fc-button-primary:disabled {
    border-color: transparent;
  }
  .fc-toolbar .fc-button:not(.fc-next-button):not(.fc-prev-button) {
    padding-inline: calc(var(--spacing) * 3.5);
    padding-block: calc(var(--spacing) * 1.5);
  }
  .fc-toolbar .fc-toolbar-chunk {
    display: flex;
    align-items: center;
  }
  .fc-toolbar h2 {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .fc-toolbar .fc-prev-button, .fc-toolbar .fc-next-button {
    background-color: transparent;
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 0);
    color: var(--color-base-content) !important;
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 80%, transparent) !important;
    }
    &:hover {
      @media (hover: hover) {
        background-color: transparent;
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-base-content) !important;
      }
    }
    .fc-icon {
      margin-top: calc(var(--spacing) * -0.5);
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 110%;
          --tw-scale-y: 110%;
          --tw-scale-z: 110%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .fc-view-harness .fc-event {
    padding-inline: calc(var(--spacing) * 1.5);
    padding-block: calc(var(--spacing) * 0.5);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .fc-view-harness .fc-event .fc-daygrid-event-dot {
    display: none;
  }
  .fc-view-harness .fc-event .fc-event-title {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .fc-daygrid-event .fc-event-time {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .fc-event-primary {
    --fc-event-text-color: var(--color-primary);
    --fc-event-border-color: var(--color-primary);
    background-color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
    }
    color: var(--color-primary);
  }
  .fc-event-secondary {
    --fc-event-text-color: var(--color-secondary);
    --fc-event-border-color: var(--color-secondary);
    background-color: var(--color-secondary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-secondary) 20%, transparent);
    }
    color: var(--color-secondary);
  }
  .fc-event-error {
    --fc-event-text-color: var(--color-error);
    --fc-event-border-color: var(--color-error);
    background-color: var(--color-error);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-error) 20%, transparent);
    }
    color: var(--color-error);
  }
  .fc-event-warning {
    --fc-event-text-color: var(--color-warning);
    --fc-event-border-color: var(--color-warning);
    background-color: var(--color-warning);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-warning) 20%, transparent);
    }
    color: var(--color-warning);
  }
  .fc-event-success {
    --fc-event-text-color: var(--color-success);
    --fc-event-border-color: var(--color-success);
    background-color: var(--color-success);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-success) 20%, transparent);
    }
    color: var(--color-success);
  }
  .fc-event-info {
    --fc-event-text-color: var(--color-info);
    --fc-event-border-color: var(--color-info);
    background-color: var(--color-info);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-info) 20%, transparent);
    }
    color: var(--color-info);
  }
  .fc-daygrid-event-harness + .fc-daygrid-event-harness .fc-daygrid-event {
    margin-top: calc(var(--spacing) * 1.5);
  }
  .fc-h-event, .fc-v-event {
    --tw-border-style: none;
    border-style: none;
  }
  .fc-daygrid-day-bottom {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
    }
  }
  .fc-daygrid-more-link {
    margin-top: 3px;
  }
  .fc-popover .fc-popover-header {
    border-top-left-radius: var(--radius-field);
    border-top-right-radius: var(--radius-field);
    border-top-left-radius: var(--radius-field);
    border-top-right-radius: var(--radius-field);
    border-top-left-radius: var(--radius-field);
    border-top-right-radius: var(--radius-field);
    background-color: var(--color-base-200);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-base-200) 50%, transparent);
    }
    padding: calc(var(--spacing) * 2);
  }
  .fc-popover {
    border-radius: var(--radius-field);
    border-radius: var(--radius-field);
    border-radius: var(--radius-field);
    --tw-border-style: none !important;
    border-style: none !important;
  }
  .fc-more-popover .fc-popover-body {
    min-width: calc(var(--spacing) * 44) !important;
  }
  .fc-daygrid-dot-event {
    margin-top: calc(var(--spacing) * 1.5);
  }
  .fc-daygrid-block-event .fc-event-title {
    padding: calc(var(--spacing) * 0);
  }
  th {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
  }
  .fc-view-harness .fc-daygrid-body .fc-daygrid-day .fc-daygrid-day-top {
    flex-direction: row;
  }
  .fc-scroller {
    overflow-x: hidden;
    overflow-y: auto;
  }
  .fc-timegrid-divider {
    display: none;
  }
  .fc-daygrid-body-natural .fc-daygrid-day-events {
    margin-top: calc(var(--spacing) * 2) !important;
    margin-bottom: 0.3rem !important;
  }
  .fc-timegrid-col-events {
    margin: 1px !important;
  }
  .fc-timegrid-slot-label {
    border-right-style: var(--tw-border-style) !important;
    border-right-width: 0px !important;
    border-left-style: var(--tw-border-style) !important;
    border-left-width: 0px !important;
  }
  .fc-timegrid-slot-lane {
    border-right-style: var(--tw-border-style) !important;
    border-right-width: 0px !important;
    border-left-style: var(--tw-border-style) !important;
    border-left-width: 0px !important;
  }
  .fc-list-day-cushion, .fc-cell-shaded, .fc-day-disabled {
    background-color: var(--color-base-200) !important;
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-base-200) 50%, transparent) !important;
    }
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .fc-list-table {
    .fc-event-primary, .fc-event-secondary, .fc-event-error, .fc-event-warning, .fc-event-success, .fc-event-info {
      --fc-event-bg-color: var(--color-base-100);
      background-color: var(--color-base-100) !important;
    }
  }
}
.fc-direction-rtl .fc-toolbar-ltr {
  flex-direction: row !important;
}
.fc .fc-toolbar {
  flex-wrap: wrap;
  gap: calc(var(--spacing) * 3);
}
@layer base {
  :where(:root),:root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(97.8% 0.005 297.73);
    --color-base-300: oklch(37.01% 0.0069 297.49);
    --color-base-content: oklch(37.57% 0.022 281.8);
    --color-primary: oklch(57.59% 0.247 287.24);
    --color-primary-content: oklch(96.57% 0.017 289.61);
    --color-secondary: oklch(55.79% 0.022 301.91);
    --color-secondary-content: oklch(97.64% 0.001 286.38);
    --color-accent: oklch(62.31% 0.188 259.81);
    --color-accent-content: oklch(97.05% 0.014 254.6);
    --color-neutral: oklch(37.57% 0.0222 281.8);
    --color-neutral-content: oklch(0.98 0.0013 286.38);
    --color-info: oklch(71.48% 0.126 215.22);
    --color-info-content: oklch(98.41% 0.019 200.87);
    --color-success: oklch(73.11% 0.217 147.04);
    --color-success-content: oklch(98.1% 0.014 174.18);
    --color-warning: oklch(79.87% 0.164 73.09);
    --color-warning-content: oklch(99.34% 0.011 95.16);
    --color-error: oklch(65.39% 0.222 25.86);
    --color-error-content: oklch(98.76% 0.009 67.73);
    --radius-selector: 0.25rem;
    --radius-field: 0.375rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  @media (prefers-color-scheme: dark) {
    :root {
      color-scheme: dark;
      --color-base-100: oklch(31.23% 0.026 301.24);
      --color-base-200: oklch(25.39% 0.025 298.72);
      --color-base-300: oklch(23.44% 0.0194 298.63);
      --color-base-content: oklch(84.98% 0.014 295.28);
      --color-primary: oklch(53.93% 0.271 286.75);
      --color-primary-content: oklch(88.22% 0.062 290.17);
      --color-secondary: oklch(49.12% 0.021 303.05);
      --color-secondary-content: oklch(88.83% 0.007 304.23);
      --color-accent: oklch(54.61% 0.215 262.88);
      --color-accent-content: oklch(88.23% 0.057 254.13);
      --color-neutral: oklch(65.75% 0.022 294.95);
      --color-neutral-content: oklch(18.51% 0.017 301.92);
      --color-info: oklch(60.89% 0.111 221.72);
      --color-info-content: oklch(91.67% 0.077 205.04);
      --color-success: oklch(67.35% 0.201 146.84);
      --color-success-content: oklch(91.38% 0.069 168.24);
      --color-warning: oklch(72.59% 0.152 69.05);
      --color-warning-content: oklch(96.07% 0.057 93.2);
      --color-error: oklch(59.54% 0.208 26.28);
      --color-error-content: oklch(93.4% 0.039 54.86);
      --radius-selector: 0.25rem;
      --radius-field: 0.375rem;
      --radius-box: 0.5rem;
      --size-selector: 0.25rem;
      --size-field: 0.25rem;
      --border: 1px;
      --depth: 0;
      --noise: 0;
    }
  }
}
@layer base {
  :root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(97.8% 0.005 297.73);
    --color-base-300: oklch(37.01% 0.0069 297.49);
    --color-base-content: oklch(37.57% 0.022 281.8);
    --color-primary: oklch(57.59% 0.247 287.24);
    --color-primary-content: oklch(96.57% 0.017 289.61);
    --color-secondary: oklch(55.79% 0.022 301.91);
    --color-secondary-content: oklch(97.64% 0.001 286.38);
    --color-accent: oklch(62.31% 0.188 259.81);
    --color-accent-content: oklch(97.05% 0.014 254.6);
    --color-neutral: oklch(37.57% 0.0222 281.8);
    --color-neutral-content: oklch(0.98 0.0013 286.38);
    --color-info: oklch(71.48% 0.126 215.22);
    --color-info-content: oklch(98.41% 0.019 200.87);
    --color-success: oklch(73.11% 0.217 147.04);
    --color-success-content: oklch(98.1% 0.014 174.18);
    --color-warning: oklch(79.87% 0.164 73.09);
    --color-warning-content: oklch(99.34% 0.011 95.16);
    --color-error: oklch(65.39% 0.222 25.86);
    --color-error-content: oklch(98.76% 0.009 67.73);
    --radius-selector: 0.25rem;
    --radius-field: 0.375rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=dark]:checked),[data-theme=dark] {
    color-scheme: dark;
    --color-base-100: oklch(31.23% 0.026 301.24);
    --color-base-200: oklch(25.39% 0.025 298.72);
    --color-base-300: oklch(23.44% 0.0194 298.63);
    --color-base-content: oklch(84.98% 0.014 295.28);
    --color-primary: oklch(53.93% 0.271 286.75);
    --color-primary-content: oklch(88.22% 0.062 290.17);
    --color-secondary: oklch(49.12% 0.021 303.05);
    --color-secondary-content: oklch(88.83% 0.007 304.23);
    --color-accent: oklch(54.61% 0.215 262.88);
    --color-accent-content: oklch(88.23% 0.057 254.13);
    --color-neutral: oklch(65.75% 0.022 294.95);
    --color-neutral-content: oklch(18.51% 0.017 301.92);
    --color-info: oklch(60.89% 0.111 221.72);
    --color-info-content: oklch(91.67% 0.077 205.04);
    --color-success: oklch(67.35% 0.201 146.84);
    --color-success-content: oklch(91.38% 0.069 168.24);
    --color-warning: oklch(72.59% 0.152 69.05);
    --color-warning-content: oklch(96.07% 0.057 93.2);
    --color-error: oklch(59.54% 0.208 26.28);
    --color-error-content: oklch(93.4% 0.039 54.86);
    --radius-selector: 0.25rem;
    --radius-field: 0.375rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  @property --radialprogress {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
  }
}
@layer base {
  :root {
    scrollbar-color: currentColor #0000;
    @supports (color: color-mix(in lab, red, red)) {
      scrollbar-color: color-mix(in oklch, currentColor 20%, #0000) #0000;
    }
  }
}
@layer base {
  :root, [data-theme] {
    background-color: var(--root-bg, var(--color-base-100));
    color: var(--color-base-content);
  }
}
@layer base {
  :root {
    --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
  }
  .chat {
    --mask-chat: url("data:image/svg+xml,%3csvg width='13' height='13' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M0 11.5004C0 13.0004 2 13.0004 2 13.0004H12H13V0.00036329L12.5 0C12.5 0 11.977 2.09572 11.8581 2.50033C11.6075 3.35237 10.9149 4.22374 9 5.50036C6 7.50036 0 10.0004 0 11.5004Z'/%3e%3c/svg%3e");
  }
  .tooltip {
    --mask-tooltip: url("data:image/svg+xml,%3Csvg width='10' height='4' viewBox='0 0 8 4' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.500009 1C3.5 1 3.00001 4 5.00001 4C7 4 6.5 1 9.5 1C10 1 10 0.499897 10 0H0C-1.99338e-08 0.5 0 1 0.500009 1Z' fill='black'/%3E%3C/svg%3E%0A");
  }
}
@keyframes skeleton {
  0% {
    background-position: 150%;
  }
  100% {
    background-position: -50%;
  }
}
@keyframes indeterminate-progress {
  0% {
    background-position-x: -75%;
  }
  50% {
    background-position-x: 125%;
  }
  100% {
    background-position-x: -75%;
  }
}
@keyframes progress-bar-stripes {
  0% {
    background-position-x: 0.75rem;
  }
}
@keyframes radio {
  0% {
    padding: 5px;
  }
  50% {
    padding: 3px;
  }
}
@keyframes radio-inset {
  0% {
    padding: 1px;
  }
  50% {
    padding: 4px;
  }
}
@layer base {
  :where(:root),:root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(97.8% 0.005 297.73);
    --color-base-300: oklch(37.01% 0.0069 297.49);
    --color-base-content: oklch(37.57% 0.022 281.8);
    --color-primary: oklch(57.59% 0.247 287.24);
    --color-primary-content: oklch(96.57% 0.017 289.61);
    --color-secondary: oklch(55.79% 0.022 301.91);
    --color-secondary-content: oklch(97.64% 0.001 286.38);
    --color-accent: oklch(62.31% 0.188 259.81);
    --color-accent-content: oklch(97.05% 0.014 254.6);
    --color-neutral: oklch(37.57% 0.0222 281.8);
    --color-neutral-content: oklch(0.98 0.0013 286.38);
    --color-info: oklch(71.48% 0.126 215.22);
    --color-info-content: oklch(98.41% 0.019 200.87);
    --color-success: oklch(73.11% 0.217 147.04);
    --color-success-content: oklch(98.1% 0.014 174.18);
    --color-warning: oklch(79.87% 0.164 73.09);
    --color-warning-content: oklch(99.34% 0.011 95.16);
    --color-error: oklch(65.39% 0.222 25.86);
    --color-error-content: oklch(98.76% 0.009 67.73);
    --radius-selector: 0.25rem;
    --radius-field: 0.375rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  @media (prefers-color-scheme: dark) {
    :root {
      color-scheme: dark;
      --color-base-100: oklch(31.23% 0.026 301.24);
      --color-base-200: oklch(25.39% 0.025 298.72);
      --color-base-300: oklch(23.44% 0.0194 298.63);
      --color-base-content: oklch(84.98% 0.014 295.28);
      --color-primary: oklch(53.93% 0.271 286.75);
      --color-primary-content: oklch(88.22% 0.062 290.17);
      --color-secondary: oklch(49.12% 0.021 303.05);
      --color-secondary-content: oklch(88.83% 0.007 304.23);
      --color-accent: oklch(54.61% 0.215 262.88);
      --color-accent-content: oklch(88.23% 0.057 254.13);
      --color-neutral: oklch(65.75% 0.022 294.95);
      --color-neutral-content: oklch(18.51% 0.017 301.92);
      --color-info: oklch(60.89% 0.111 221.72);
      --color-info-content: oklch(91.67% 0.077 205.04);
      --color-success: oklch(67.35% 0.201 146.84);
      --color-success-content: oklch(91.38% 0.069 168.24);
      --color-warning: oklch(72.59% 0.152 69.05);
      --color-warning-content: oklch(96.07% 0.057 93.2);
      --color-error: oklch(59.54% 0.208 26.28);
      --color-error-content: oklch(93.4% 0.039 54.86);
      --radius-selector: 0.25rem;
      --radius-field: 0.375rem;
      --radius-box: 0.5rem;
      --size-selector: 0.25rem;
      --size-field: 0.25rem;
      --border: 1px;
      --depth: 0;
      --noise: 0;
    }
  }
}
@layer base {
  :root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(97.8% 0.005 297.73);
    --color-base-300: oklch(37.01% 0.0069 297.49);
    --color-base-content: oklch(37.57% 0.022 281.8);
    --color-primary: oklch(57.59% 0.247 287.24);
    --color-primary-content: oklch(96.57% 0.017 289.61);
    --color-secondary: oklch(55.79% 0.022 301.91);
    --color-secondary-content: oklch(97.64% 0.001 286.38);
    --color-accent: oklch(62.31% 0.188 259.81);
    --color-accent-content: oklch(97.05% 0.014 254.6);
    --color-neutral: oklch(37.57% 0.0222 281.8);
    --color-neutral-content: oklch(0.98 0.0013 286.38);
    --color-info: oklch(71.48% 0.126 215.22);
    --color-info-content: oklch(98.41% 0.019 200.87);
    --color-success: oklch(73.11% 0.217 147.04);
    --color-success-content: oklch(98.1% 0.014 174.18);
    --color-warning: oklch(79.87% 0.164 73.09);
    --color-warning-content: oklch(99.34% 0.011 95.16);
    --color-error: oklch(65.39% 0.222 25.86);
    --color-error-content: oklch(98.76% 0.009 67.73);
    --radius-selector: 0.25rem;
    --radius-field: 0.375rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=dark]:checked),[data-theme=dark] {
    color-scheme: dark;
    --color-base-100: oklch(31.23% 0.026 301.24);
    --color-base-200: oklch(25.39% 0.025 298.72);
    --color-base-300: oklch(23.44% 0.0194 298.63);
    --color-base-content: oklch(84.98% 0.014 295.28);
    --color-primary: oklch(53.93% 0.271 286.75);
    --color-primary-content: oklch(88.22% 0.062 290.17);
    --color-secondary: oklch(49.12% 0.021 303.05);
    --color-secondary-content: oklch(88.83% 0.007 304.23);
    --color-accent: oklch(54.61% 0.215 262.88);
    --color-accent-content: oklch(88.23% 0.057 254.13);
    --color-neutral: oklch(65.75% 0.022 294.95);
    --color-neutral-content: oklch(18.51% 0.017 301.92);
    --color-info: oklch(60.89% 0.111 221.72);
    --color-info-content: oklch(91.67% 0.077 205.04);
    --color-success: oklch(67.35% 0.201 146.84);
    --color-success-content: oklch(91.38% 0.069 168.24);
    --color-warning: oklch(72.59% 0.152 69.05);
    --color-warning-content: oklch(96.07% 0.057 93.2);
    --color-error: oklch(59.54% 0.208 26.28);
    --color-error-content: oklch(93.4% 0.039 54.86);
    --radius-selector: 0.25rem;
    --radius-field: 0.375rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=black]:checked),[data-theme=black] {
    color-scheme: dark;
    --color-base-100: oklch(23.2% 0.006 285.95);
    --color-base-200: oklch(14% 0.005 285.823);
    --color-base-300: oklch(14% 0 0);
    --color-base-content: oklch(96% 0.001 286.375);
    --color-primary: oklch(58% 0.233 277.117);
    --color-primary-content: oklch(98% 0.022 95.277);
    --color-secondary: oklch(60% 0.118 184.704);
    --color-secondary-content: oklch(98% 0.014 180.72);
    --color-accent: oklch(0% 0 0);
    --color-accent-content: oklch(100% 0 0);
    --color-neutral: oklch(98% 0 0);
    --color-neutral-content: oklch(37% 0.044 257.287);
    --color-info: oklch(58% 0.158 241.966);
    --color-info-content: oklch(97% 0.013 236.62);
    --color-success: oklch(64% 0.2 131.684);
    --color-success-content: oklch(98% 0.031 120.757);
    --color-warning: oklch(55% 0.163 48.998);
    --color-warning-content: oklch(98% 0.026 102.212);
    --color-error: oklch(63% 0.237 25.331);
    --color-error-content: oklch(97% 0.013 17.38);
    --radius-selector: 2rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 2px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=corporate]:checked),[data-theme=corporate] {
    color-scheme: light;
    --color-base-100: oklch(99.43% 0.001 286.38);
    --color-base-200: oklch(97.33% 0.008 271.33);
    --color-base-300: oklch(48.52% 0.0225 279.09);
    --color-base-content: oklch(42.06% 0.049 276.53);
    --color-primary: oklch(62.31% 0.188 259.81);
    --color-primary-content: oklch(97.05% 0.014 254.6);
    --color-secondary: oklch(55.79% 0.022 301.91);
    --color-secondary-content: oklch(95.05% 0.003 308.43);
    --color-accent: oklch(65.59% 0.212 354.31);
    --color-accent-content: oklch(97.14% 0.014 343.2);
    --color-neutral: oklch(45.11% 0.172 270.31);
    --color-neutral-content: oklch(82.15% 0.055 277.12);
    --color-info: oklch(70.38% 0.123 182.5);
    --color-info-content: oklch(98.36% 0.014 180.72);
    --color-success: oklch(76.81% 0.204 130.85);
    --color-success-content: oklch(98.57% 0.031 120.76);
    --color-warning: oklch(79.52% 0.162 86.05);
    --color-warning-content: oklch(98.73% 0.026 102.21);
    --color-error: oklch(64.5% 0.215 16.44);
    --color-error-content: oklch(96.94% 0.015 12.42);
    --radius-selector: 0.125rem;
    --radius-field: 0.25rem;
    --radius-box: 0.375rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=ghibli]:checked),[data-theme=ghibli] {
    color-scheme: light;
    --color-base-100: oklch(0.94 0.0262 82.38);
    --color-base-200: oklch(0.91 0.0326 80.99);
    --color-base-300: oklch(0.34 0.0131 81.73 / 20%);
    --color-base-content: oklch(41% 0.077 79.04);
    --color-primary: oklch(0.62 0.0868 111.8);
    --color-primary-content: oklch(97% 0.009 106.57);
    --color-secondary: oklch(44% 0.043 257.281);
    --color-secondary-content: oklch(92% 0.013 255.508);
    --color-accent: oklch(70% 0.14 182.503);
    --color-accent-content: oklch(98% 0.014 180.72);
    --color-neutral: oklch(41% 0.025 282.21);
    --color-neutral-content: oklch(98% 0.001 286.38);
    --color-info: oklch(62% 0.214 259.815);
    --color-info-content: oklch(97% 0.014 254.604);
    --color-success: oklch(64% 0.2 131.684);
    --color-success-content: oklch(98% 0.031 120.757);
    --color-warning: oklch(68% 0.162 75.834);
    --color-warning-content: oklch(28% 0.066 53.813);
    --color-error: oklch(63% 0.237 25.331);
    --color-error-content: oklch(97% 0.013 17.38);
    --radius-selector: 0.25rem;
    --radius-field: 1rem;
    --radius-box: 2rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=gourmet]:checked),[data-theme=gourmet] {
    color-scheme: light;
    --color-base-100: oklch(99.45% 0.002 67.8);
    --color-base-200: oklch(98.19% 0.008 61.46);
    --color-base-300: oklch(47% 0.0131 54.28);
    --color-base-content: oklch(32.38% 0.009 67.5);
    --color-primary: oklch(70.49% 0.187 47.6);
    --color-primary-content: oklch(97.96% 0.016 73.68);
    --color-secondary: oklch(55.79% 0.022 301.91);
    --color-secondary-content: oklch(95.05% 0.003 308.43);
    --color-accent: oklch(65.59% 0.212 354.31);
    --color-accent-content: oklch(97.14% 0.014 343.2);
    --color-neutral: oklch(32.38% 0.009 67.5);
    --color-neutral-content: oklch(99.45% 0.002 67.8);
    --color-info: oklch(68.47% 0.148 237.32);
    --color-info-content: oklch(97.71% 0.012 236.62);
    --color-success: oklch(69.59% 0.149 162.48);
    --color-success-content: oklch(97.93% 0.021 166.11);
    --color-warning: oklch(57.59% 0.247 287.24);
    --color-warning-content: oklch(96.57% 0.017 289.61);
    --color-error: oklch(65.39% 0.222 25.86);
    --color-error-content: oklch(98.76% 0.009 67.73);
    --radius-selector: 2rem;
    --radius-field: 2rem;
    --radius-box: 0.75rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=luxury]:checked),[data-theme=luxury] {
    color-scheme: dark;
    --color-base-100: oklch(24.97% 0.0235 60.71);
    --color-base-200: oklch(20.19% 0.0212 56.18);
    --color-base-300: oklch(13.67% 0.0208 68.4);
    --color-base-content: oklch(89.79% 0.0323 68.91);
    --color-primary: oklch(68.75% 0.0948 67.23);
    --color-primary-content: oklch(92.24% 0.0235 69.59);
    --color-secondary: oklch(55.79% 0.0221 301.91);
    --color-secondary-content: oklch(97.64% 0.0013 286.38);
    --color-accent: oklch(64.45% 0.1596 354.64);
    --color-accent-content: oklch(89.57% 0.0416 348.79);
    --color-neutral: oklch(0.51 0.0449 70.29);
    --color-neutral-content: oklch(16.74% 0.0325 59.58);
    --color-info: oklch(55.75% 0.0746 234.15);
    --color-info-content: oklch(87.94% 0.0196 230.73);
    --color-success: oklch(52.65% 0.0537 188.98);
    --color-success-content: oklch(84.44% 0.0185 192.54);
    --color-warning: oklch(57.37% 0.149 296.3);
    --color-warning-content: oklch(88.26% 0.0392 300.25);
    --color-error: oklch(50.81% 0.097 4.98);
    --color-error-content: oklch(87.99% 0.021 358.74);
    --radius-selector: 0.1875rem;
    --radius-field: 0.375rem;
    --radius-box: 0.5625rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=mintlify]:checked),[data-theme=mintlify] {
    color-scheme: light;
    --color-base-100: oklch(98.69% 0.007 145.52);
    --color-base-200: oklch(95.89% 0.019 145.43);
    --color-base-300: oklch(48.75% 0.0326 146.64);
    --color-base-content: oklch(21% 0.006 56.043);
    --color-primary: oklch(62% 0.194 149.214);
    --color-primary-content: oklch(98% 0.018 155.826);
    --color-secondary: oklch(84.42% 0.172 84.934);
    --color-secondary-content: oklch(47% 0.137 46.201);
    --color-accent: oklch(55% 0.016 285.938);
    --color-accent-content: oklch(98% 0 0);
    --color-neutral: oklch(26% 0.007 34.298);
    --color-neutral-content: oklch(97% 0.001 106.424);
    --color-info: oklch(65.52% 0.111 212.17);
    --color-info-content: oklch(39% 0.07 227.392);
    --color-success: oklch(64.01% 0.175 146.74);
    --color-success-content: oklch(26% 0.065 152.934);
    --color-warning: oklch(77.03% 0.174 64.05);
    --color-warning-content: oklch(47% 0.137 46.201);
    --color-error: oklch(59.15% 0.202 21.24);
    --color-error-content: oklch(97% 0.014 343.198);
    --radius-selector: 2rem;
    --radius-field: 1rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=shadcn]:checked),[data-theme=shadcn] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(96.74% 0.0013 286.38);
    --color-base-300: oklch(0% 0 0);
    --color-base-content: oklch(21.03% 0.0059 285.89);
    --color-primary: oklch(27.39% 0.0055 286.03);
    --color-primary-content: oklch(98.51% 0 0);
    --color-secondary: oklch(55.79% 0.0221 301.91);
    --color-secondary-content: oklch(97.64% 0.0013 286.38);
    --color-accent: oklch(62.31% 0.188 259.81);
    --color-accent-content: oklch(97.05% 0.0142 254.6);
    --color-neutral: oklch(40.66% 0.0251 282.21);
    --color-neutral-content: oklch(97.64% 0.0013 286.38);
    --color-info: oklch(71.48% 0.1257 215.22);
    --color-info-content: oklch(98.41% 0.0189 200.87);
    --color-success: oklch(69.59% 0.1491 162.48);
    --color-success-content: oklch(97.93% 0.0207 166.11);
    --color-warning: oklch(70.49% 0.1867 47.6);
    --color-warning-content: oklch(97.96% 0.0158 73.68);
    --color-error: oklch(65.39% 0.2221 25.86);
    --color-error-content: oklch(98.76% 0.0085 67.73);
    --radius-selector: 0.125rem;
    --radius-field: 0.25rem;
    --radius-box: 0.375rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=slack]:checked),[data-theme=slack] {
    color-scheme: light;
    --color-base-100: oklch(97.31% 0 0);
    --color-base-200: oklch(93.7% 0 0);
    --color-base-300: oklch(38.87% 0.0052 301.28);
    --color-base-content: oklch(21% 0.006 56.043);
    --color-primary: oklch(30.65% 0.108 327.06);
    --color-primary-content: oklch(97% 0.014 254.604);
    --color-secondary: oklch(0% 0 0);
    --color-secondary-content: oklch(100% 0 0);
    --color-accent: oklch(55% 0.016 285.938);
    --color-accent-content: oklch(98% 0 0);
    --color-neutral: oklch(14% 0.004 49.25);
    --color-neutral-content: oklch(98% 0.001 106.423);
    --color-info: oklch(76.8% 0.131 223.2);
    --color-info-content: oklch(45% 0.085 224.283);
    --color-success: oklch(69.11% 0.142 160.24);
    --color-success-content: oklch(39% 0.095 152.535);
    --color-warning: oklch(79.66% 0.152 82.65);
    --color-warning-content: oklch(47% 0.137 46.201);
    --color-error: oklch(58.8% 0.222 11.49);
    --color-error-content: oklch(97% 0.014 343.198);
    --radius-selector: 2rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=soft]:checked),[data-theme=soft] {
    color-scheme: light;
    --color-base-100: oklch(98.8% 0.0069 304.24);
    --color-base-200: oklch(96.95% 0.0114 308.33);
    --color-base-300: oklch(40.47% 0.0142 308.07);
    --color-base-content: oklch(32.61% 0.0705 305.29);
    --color-primary: oklch(62.68% 0.2325 303.9);
    --color-primary-content: oklch(97.68% 0.0142 308.3);
    --color-secondary: oklch(55.79% 0.0221 301.91);
    --color-secondary-content: oklch(97.64% 0.0013 286.38);
    --color-accent: oklch(62.31% 0.188 259.81);
    --color-accent-content: oklch(97.05% 0.0142 254.6);
    --color-neutral: oklch(32.61% 0.0705 305.29);
    --color-neutral-content: oklch(99.54% 0.0028 308.43);
    --color-info: oklch(71.48% 0.1257 215.22);
    --color-info-content: oklch(98.41% 0.0189 200.87);
    --color-success: oklch(69.59% 0.1491 162.48);
    --color-success-content: oklch(97.93% 0.0207 166.11);
    --color-warning: oklch(70.49% 0.1867 47.6);
    --color-warning-content: oklch(97.96% 0.0158 73.68);
    --color-error: oklch(65.39% 0.2221 25.86);
    --color-error-content: oklch(98.76% 0.0085 67.73);
    --radius-selector: 0.5rem;
    --radius-field: 0.75rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=valorant]:checked),[data-theme=valorant] {
    color-scheme: light;
    --color-base-100: oklch(99.14% 0.0044 359.99);
    --color-base-200: oklch(96.72% 0.0163 12.78);
    --color-base-300: oklch(27.67% 0.0779 19.29);
    --color-base-content: oklch(21% 0.006 56.043);
    --color-primary: oklch(66.77% 0.2199 21.34);
    --color-primary-content: oklch(97% 0.013 17.38);
    --color-secondary: oklch(30.12% 0 0);
    --color-secondary-content: oklch(100% 0 0);
    --color-accent: oklch(55% 0.016 285.938);
    --color-accent-content: oklch(98% 0 0);
    --color-neutral: oklch(20.89% 0.0248 249.09);
    --color-neutral-content: oklch(98% 0.001 106.423);
    --color-info: oklch(58% 0.158 241.966);
    --color-info-content: oklch(98% 0.019 200.873);
    --color-success: oklch(76.82% 0.1855 152.24);
    --color-success-content: oklch(39% 0.095 152.535);
    --color-warning: oklch(80.16% 0.1705 73.27);
    --color-warning-content: oklch(47% 0.137 46.201);
    --color-error: oklch(67.08% 0.2165 25.19);
    --color-error-content: oklch(97% 0.014 343.198);
    --radius-selector: 2rem;
    --radius-field: 0rem;
    --radius-box: 0rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 1;
  }
}
@layer base {
  @property --radialprogress {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
  }
}
@layer base {
  :root {
    scrollbar-color: currentColor #0000;
    @supports (color: color-mix(in lab, red, red)) {
      scrollbar-color: color-mix(in oklch, currentColor 20%, #0000) #0000;
    }
  }
}
@layer base {
  :root, [data-theme] {
    background-color: var(--root-bg, var(--color-base-100));
    color: var(--color-base-content);
  }
}
@layer base {
  :root {
    --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
  }
  .chat {
    --mask-chat: url("data:image/svg+xml,%3csvg width='13' height='13' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M0 11.5004C0 13.0004 2 13.0004 2 13.0004H12H13V0.00036329L12.5 0C12.5 0 11.977 2.09572 11.8581 2.50033C11.6075 3.35237 10.9149 4.22374 9 5.50036C6 7.50036 0 10.0004 0 11.5004Z'/%3e%3c/svg%3e");
  }
  .tooltip {
    --mask-tooltip: url("data:image/svg+xml,%3Csvg width='10' height='4' viewBox='0 0 8 4' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.500009 1C3.5 1 3.00001 4 5.00001 4C7 4 6.5 1 9.5 1C10 1 10 0.499897 10 0H0C-1.99338e-08 0.5 0 1 0.500009 1Z' fill='black'/%3E%3C/svg%3E%0A");
  }
}
@keyframes skeleton {
  0% {
    background-position: 150%;
  }
  100% {
    background-position: -50%;
  }
}
@keyframes indeterminate-progress {
  0% {
    background-position-x: -75%;
  }
  50% {
    background-position-x: 125%;
  }
  100% {
    background-position-x: -75%;
  }
}
@keyframes progress-bar-stripes {
  0% {
    background-position-x: 0.75rem;
  }
}
@keyframes radio {
  0% {
    padding: 5px;
  }
  50% {
    padding: 3px;
  }
}
@keyframes radio-inset {
  0% {
    padding: 1px;
  }
  50% {
    padding: 4px;
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-duration: initial;
      --tw-ease: initial;
    }
  }
}
